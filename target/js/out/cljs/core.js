// Compiled by ClojureScript 0.0-2760 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__11213__delegate = function (args){
return console.log.apply(console,(function (){var G__11212 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11212) : cljs.core.into_array.call(null,G__11212));
})());
};
var G__11213 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11214__i = 0, G__11214__a = new Array(arguments.length -  0);
while (G__11214__i < G__11214__a.length) {G__11214__a[G__11214__i] = arguments[G__11214__i + 0]; ++G__11214__i;}
  args = new cljs.core.IndexedSeq(G__11214__a,0);
} 
return G__11213__delegate.call(this,args);};
G__11213.cljs$lang$maxFixedArity = 0;
G__11213.cljs$lang$applyTo = (function (arglist__11215){
var args = cljs.core.seq(arglist__11215);
return G__11213__delegate(args);
});
G__11213.cljs$core$IFn$_invoke$arity$variadic = G__11213__delegate;
return G__11213;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__11217 = x;
return goog.isString(G__11217);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__11219 = x__$1;
return goog.typeOf(G__11219);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3723__auto__ = ty;
if(cljs.core.truth_(and__3723__auto__)){
return ty.cljs$lang$type;
} else {
return and__3723__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__11221 = obj;
return goog.typeOf(G__11221);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__11223 = Symbol;
return goog.typeOf(G__11223);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4622__auto___11225 = len;
var i_11226 = (0);
while(true){
if((i_11226 < n__4622__auto___11225)){
(new_arr[i_11226] = (arr[i_11226]));

var G__11227 = (i_11226 + (1));
i_11226 = G__11227;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__11228 = (i + (1));
i = G__11228;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__11237__delegate = function (array,i,idxs){
var G__11234 = aget;
var G__11235 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__11236 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11234,G__11235,G__11236) : cljs.core.apply.call(null,G__11234,G__11235,G__11236));
};
var G__11237 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__11238__i = 0, G__11238__a = new Array(arguments.length -  2);
while (G__11238__i < G__11238__a.length) {G__11238__a[G__11238__i] = arguments[G__11238__i + 2]; ++G__11238__i;}
  idxs = new cljs.core.IndexedSeq(G__11238__a,0);
} 
return G__11237__delegate.call(this,array,i,idxs);};
G__11237.cljs$lang$maxFixedArity = 2;
G__11237.cljs$lang$applyTo = (function (arglist__11239){
var array = cljs.core.first(arglist__11239);
arglist__11239 = cljs.core.next(arglist__11239);
var i = cljs.core.first(arglist__11239);
var idxs = cljs.core.rest(arglist__11239);
return G__11237__delegate(array,i,idxs);
});
G__11237.cljs$core$IFn$_invoke$arity$variadic = G__11237__delegate;
return G__11237;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__11240 = null;
if (arguments.length > 2) {
var G__11241__i = 0, G__11241__a = new Array(arguments.length -  2);
while (G__11241__i < G__11241__a.length) {G__11241__a[G__11241__i] = arguments[G__11241__i + 2]; ++G__11241__i;}
G__11240 = new cljs.core.IndexedSeq(G__11241__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__11240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11250__delegate = function (array,idx,idx2,idxv){
var G__11246 = aset;
var G__11247 = (array[idx]);
var G__11248 = idx2;
var G__11249 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11246,G__11247,G__11248,G__11249) : cljs.core.apply.call(null,G__11246,G__11247,G__11248,G__11249));
};
var G__11250 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11251__i = 0, G__11251__a = new Array(arguments.length -  3);
while (G__11251__i < G__11251__a.length) {G__11251__a[G__11251__i] = arguments[G__11251__i + 3]; ++G__11251__i;}
  idxv = new cljs.core.IndexedSeq(G__11251__a,0);
} 
return G__11250__delegate.call(this,array,idx,idx2,idxv);};
G__11250.cljs$lang$maxFixedArity = 3;
G__11250.cljs$lang$applyTo = (function (arglist__11252){
var array = cljs.core.first(arglist__11252);
arglist__11252 = cljs.core.next(arglist__11252);
var idx = cljs.core.first(arglist__11252);
arglist__11252 = cljs.core.next(arglist__11252);
var idx2 = cljs.core.first(arglist__11252);
var idxv = cljs.core.rest(arglist__11252);
return G__11250__delegate(array,idx,idx2,idxv);
});
G__11250.cljs$core$IFn$_invoke$arity$variadic = G__11250__delegate;
return G__11250;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11253 = null;
if (arguments.length > 3) {
var G__11254__i = 0, G__11254__a = new Array(arguments.length -  3);
while (G__11254__i < G__11254__a.length) {G__11254__a[G__11254__i] = arguments[G__11254__i + 3]; ++G__11254__i;}
G__11253 = new cljs.core.IndexedSeq(G__11254__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11260 = (function (a,x){
a.push(x);

return a;
});
var G__11261 = [];
var G__11262 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11260,G__11261,G__11262) : cljs.core.reduce.call(null,G__11260,G__11261,G__11262));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11263__i = 0, G__11263__a = new Array(arguments.length -  2);
while (G__11263__i < G__11263__a.length) {G__11263__a[G__11263__i] = arguments[G__11263__i + 2]; ++G__11263__i;}
  args = new cljs.core.IndexedSeq(G__11263__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11264){
var obj = cljs.core.first(arglist__11264);
arglist__11264 = cljs.core.next(arglist__11264);
var s = cljs.core.first(arglist__11264);
var args = cljs.core.rest(arglist__11264);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11266 = {};
return obj11266;
})();


cljs.core.IFn = (function (){var obj11268 = {};
return obj11268;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11314 = x__4379__auto__;
return goog.typeOf(G__11314);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11316 = x__4379__auto__;
return goog.typeOf(G__11316);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11318 = x__4379__auto__;
return goog.typeOf(G__11318);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11320 = x__4379__auto__;
return goog.typeOf(G__11320);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11322 = x__4379__auto__;
return goog.typeOf(G__11322);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11324 = x__4379__auto__;
return goog.typeOf(G__11324);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11326 = x__4379__auto__;
return goog.typeOf(G__11326);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11328 = x__4379__auto__;
return goog.typeOf(G__11328);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11330 = x__4379__auto__;
return goog.typeOf(G__11330);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11332 = x__4379__auto__;
return goog.typeOf(G__11332);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11334 = x__4379__auto__;
return goog.typeOf(G__11334);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11336 = x__4379__auto__;
return goog.typeOf(G__11336);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11338 = x__4379__auto__;
return goog.typeOf(G__11338);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11340 = x__4379__auto__;
return goog.typeOf(G__11340);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11342 = x__4379__auto__;
return goog.typeOf(G__11342);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11344 = x__4379__auto__;
return goog.typeOf(G__11344);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11346 = x__4379__auto__;
return goog.typeOf(G__11346);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11348 = x__4379__auto__;
return goog.typeOf(G__11348);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11350 = x__4379__auto__;
return goog.typeOf(G__11350);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11352 = x__4379__auto__;
return goog.typeOf(G__11352);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11354 = x__4379__auto__;
return goog.typeOf(G__11354);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._invoke[(function (){var G__11356 = x__4379__auto__;
return goog.typeOf(G__11356);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._invoke["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11358 = {};
return obj11358;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3723__auto__ = value;
if(and__3723__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3723__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4379__auto__ = (((value == null))?null:value);
return (function (){var or__3735__auto__ = (cljs.core._clone[(function (){var G__11362 = x__4379__auto__;
return goog.typeOf(G__11362);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._clone["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11364 = {};
return obj11364;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._count[(function (){var G__11368 = x__4379__auto__;
return goog.typeOf(G__11368);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._count["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11370 = {};
return obj11370;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._empty[(function (){var G__11374 = x__4379__auto__;
return goog.typeOf(G__11374);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._empty["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11376 = {};
return obj11376;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._conj[(function (){var G__11380 = x__4379__auto__;
return goog.typeOf(G__11380);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._conj["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj11382 = {};
return obj11382;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._nth[(function (){var G__11388 = x__4379__auto__;
return goog.typeOf(G__11388);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._nth["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._nth[(function (){var G__11390 = x__4379__auto__;
return goog.typeOf(G__11390);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._nth["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj11392 = {};
return obj11392;
})();


cljs.core.ISeq = (function (){var obj11394 = {};
return obj11394;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._first[(function (){var G__11398 = x__4379__auto__;
return goog.typeOf(G__11398);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._first["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._rest[(function (){var G__11402 = x__4379__auto__;
return goog.typeOf(G__11402);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._rest["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj11404 = {};
return obj11404;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._next[(function (){var G__11408 = x__4379__auto__;
return goog.typeOf(G__11408);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._next["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj11410 = {};
return obj11410;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._lookup[(function (){var G__11416 = x__4379__auto__;
return goog.typeOf(G__11416);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._lookup["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._lookup[(function (){var G__11418 = x__4379__auto__;
return goog.typeOf(G__11418);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._lookup["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj11420 = {};
return obj11420;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__11424 = x__4379__auto__;
return goog.typeOf(G__11424);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._assoc[(function (){var G__11428 = x__4379__auto__;
return goog.typeOf(G__11428);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._assoc["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj11430 = {};
return obj11430;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._dissoc[(function (){var G__11434 = x__4379__auto__;
return goog.typeOf(G__11434);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj11436 = {};
return obj11436;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._key[(function (){var G__11440 = x__4379__auto__;
return goog.typeOf(G__11440);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._key["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._val[(function (){var G__11444 = x__4379__auto__;
return goog.typeOf(G__11444);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._val["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj11446 = {};
return obj11446;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._disjoin[(function (){var G__11450 = x__4379__auto__;
return goog.typeOf(G__11450);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj11452 = {};
return obj11452;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._peek[(function (){var G__11456 = x__4379__auto__;
return goog.typeOf(G__11456);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._peek["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._pop[(function (){var G__11460 = x__4379__auto__;
return goog.typeOf(G__11460);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._pop["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj11462 = {};
return obj11462;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._assoc_n[(function (){var G__11466 = x__4379__auto__;
return goog.typeOf(G__11466);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj11468 = {};
return obj11468;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._deref[(function (){var G__11472 = x__4379__auto__;
return goog.typeOf(G__11472);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._deref["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj11474 = {};
return obj11474;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._deref_with_timeout[(function (){var G__11478 = x__4379__auto__;
return goog.typeOf(G__11478);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj11480 = {};
return obj11480;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._meta[(function (){var G__11484 = x__4379__auto__;
return goog.typeOf(G__11484);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._meta["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj11486 = {};
return obj11486;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._with_meta[(function (){var G__11490 = x__4379__auto__;
return goog.typeOf(G__11490);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj11492 = {};
return obj11492;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._reduce[(function (){var G__11498 = x__4379__auto__;
return goog.typeOf(G__11498);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._reduce["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._reduce[(function (){var G__11500 = x__4379__auto__;
return goog.typeOf(G__11500);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._reduce["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj11502 = {};
return obj11502;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._kv_reduce[(function (){var G__11506 = x__4379__auto__;
return goog.typeOf(G__11506);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj11508 = {};
return obj11508;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._equiv[(function (){var G__11512 = x__4379__auto__;
return goog.typeOf(G__11512);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._equiv["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj11514 = {};
return obj11514;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._hash[(function (){var G__11518 = x__4379__auto__;
return goog.typeOf(G__11518);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._hash["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj11520 = {};
return obj11520;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._seq[(function (){var G__11524 = x__4379__auto__;
return goog.typeOf(G__11524);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._seq["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj11526 = {};
return obj11526;
})();


cljs.core.IList = (function (){var obj11528 = {};
return obj11528;
})();


cljs.core.IRecord = (function (){var obj11530 = {};
return obj11530;
})();


cljs.core.IReversible = (function (){var obj11532 = {};
return obj11532;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._rseq[(function (){var G__11536 = x__4379__auto__;
return goog.typeOf(G__11536);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._rseq["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj11538 = {};
return obj11538;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._sorted_seq[(function (){var G__11542 = x__4379__auto__;
return goog.typeOf(G__11542);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._sorted_seq_from[(function (){var G__11546 = x__4379__auto__;
return goog.typeOf(G__11546);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._entry_key[(function (){var G__11550 = x__4379__auto__;
return goog.typeOf(G__11550);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._comparator[(function (){var G__11554 = x__4379__auto__;
return goog.typeOf(G__11554);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._comparator["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj11556 = {};
return obj11556;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3723__auto__ = writer;
if(and__3723__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3723__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4379__auto__ = (((writer == null))?null:writer);
return (function (){var or__3735__auto__ = (cljs.core._write[(function (){var G__11560 = x__4379__auto__;
return goog.typeOf(G__11560);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._write["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3723__auto__ = writer;
if(and__3723__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3723__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4379__auto__ = (((writer == null))?null:writer);
return (function (){var or__3735__auto__ = (cljs.core._flush[(function (){var G__11564 = x__4379__auto__;
return goog.typeOf(G__11564);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._flush["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj11566 = {};
return obj11566;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._pr_writer[(function (){var G__11570 = x__4379__auto__;
return goog.typeOf(G__11570);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj11572 = {};
return obj11572;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3723__auto__ = d;
if(and__3723__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3723__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4379__auto__ = (((d == null))?null:d);
return (function (){var or__3735__auto__ = (cljs.core._realized_QMARK_[(function (){var G__11576 = x__4379__auto__;
return goog.typeOf(G__11576);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj11578 = {};
return obj11578;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._notify_watches[(function (){var G__11582 = x__4379__auto__;
return goog.typeOf(G__11582);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._add_watch[(function (){var G__11586 = x__4379__auto__;
return goog.typeOf(G__11586);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3723__auto__ = this$;
if(and__3723__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3723__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4379__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3735__auto__ = (cljs.core._remove_watch[(function (){var G__11590 = x__4379__auto__;
return goog.typeOf(G__11590);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj11592 = {};
return obj11592;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._as_transient[(function (){var G__11596 = x__4379__auto__;
return goog.typeOf(G__11596);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj11598 = {};
return obj11598;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3723__auto__ = tcoll;
if(and__3723__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3723__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4379__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3735__auto__ = (cljs.core._conj_BANG_[(function (){var G__11602 = x__4379__auto__;
return goog.typeOf(G__11602);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3723__auto__ = tcoll;
if(and__3723__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3723__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4379__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3735__auto__ = (cljs.core._persistent_BANG_[(function (){var G__11606 = x__4379__auto__;
return goog.typeOf(G__11606);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj11608 = {};
return obj11608;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3723__auto__ = tcoll;
if(and__3723__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3723__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4379__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3735__auto__ = (cljs.core._assoc_BANG_[(function (){var G__11612 = x__4379__auto__;
return goog.typeOf(G__11612);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj11614 = {};
return obj11614;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3723__auto__ = tcoll;
if(and__3723__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3723__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4379__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3735__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__11618 = x__4379__auto__;
return goog.typeOf(G__11618);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj11620 = {};
return obj11620;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3723__auto__ = tcoll;
if(and__3723__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3723__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4379__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3735__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__11624 = x__4379__auto__;
return goog.typeOf(G__11624);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3723__auto__ = tcoll;
if(and__3723__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3723__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4379__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3735__auto__ = (cljs.core._pop_BANG_[(function (){var G__11628 = x__4379__auto__;
return goog.typeOf(G__11628);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj11630 = {};
return obj11630;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3723__auto__ = tcoll;
if(and__3723__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3723__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4379__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3735__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__11634 = x__4379__auto__;
return goog.typeOf(G__11634);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj11636 = {};
return obj11636;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3723__auto__ = x;
if(and__3723__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3723__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4379__auto__ = (((x == null))?null:x);
return (function (){var or__3735__auto__ = (cljs.core._compare[(function (){var G__11640 = x__4379__auto__;
return goog.typeOf(G__11640);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._compare["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj11642 = {};
return obj11642;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._drop_first[(function (){var G__11646 = x__4379__auto__;
return goog.typeOf(G__11646);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj11648 = {};
return obj11648;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._chunked_first[(function (){var G__11652 = x__4379__auto__;
return goog.typeOf(G__11652);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._chunked_rest[(function (){var G__11656 = x__4379__auto__;
return goog.typeOf(G__11656);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj11658 = {};
return obj11658;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._chunked_next[(function (){var G__11662 = x__4379__auto__;
return goog.typeOf(G__11662);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj11664 = {};
return obj11664;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3723__auto__ = x;
if(and__3723__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3723__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4379__auto__ = (((x == null))?null:x);
return (function (){var or__3735__auto__ = (cljs.core._name[(function (){var G__11668 = x__4379__auto__;
return goog.typeOf(G__11668);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._name["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3723__auto__ = x;
if(and__3723__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3723__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4379__auto__ = (((x == null))?null:x);
return (function (){var or__3735__auto__ = (cljs.core._namespace[(function (){var G__11672 = x__4379__auto__;
return goog.typeOf(G__11672);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._namespace["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj11674 = {};
return obj11674;
})();


cljs.core.IReset = (function (){var obj11676 = {};
return obj11676;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._reset_BANG_[(function (){var G__11680 = x__4379__auto__;
return goog.typeOf(G__11680);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11682 = {};
return obj11682;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._swap_BANG_[(function (){var G__11692 = x__4379__auto__;
return goog.typeOf(G__11692);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._swap_BANG_[(function (){var G__11694 = x__4379__auto__;
return goog.typeOf(G__11694);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._swap_BANG_[(function (){var G__11696 = x__4379__auto__;
return goog.typeOf(G__11696);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._swap_BANG_[(function (){var G__11698 = x__4379__auto__;
return goog.typeOf(G__11698);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11700 = {};
return obj11700;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3723__auto__ = o;
if(and__3723__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3723__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4379__auto__ = (((o == null))?null:o);
return (function (){var or__3735__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11704 = x__4379__auto__;
return goog.typeOf(G__11704);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11706 = {};
return obj11706;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3723__auto__ = coll;
if(and__3723__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3723__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4379__auto__ = (((coll == null))?null:coll);
return (function (){var or__3735__auto__ = (cljs.core._iterator[(function (){var G__11710 = x__4379__auto__;
return goog.typeOf(G__11710);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._iterator["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11713 = (4294967295);
var G__11714 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11713,G__11714) : Math.imul.call(null,G__11713,G__11714));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11717 = a;
var G__11718 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11717,G__11718) : Math.imul.call(null,G__11717,G__11718));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11719 = (i + (2));
var G__11720 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11719;
h1 = G__11720;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11722 = {};
return obj11722;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11723 = (i + (1));
var G__11724 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11723;
hash = G__11724;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11728 = {};
return obj11728;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11731 = o;
if(G__11731){
var bit__4409__auto__ = (G__11731.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4409__auto__) || (G__11731.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11732 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11732) : Math.floor.call(null,G__11732));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3723__auto__ = cljs.core.not(a.ns);
if(and__3723__auto__){
return b.ns;
} else {
return and__3723__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11739 = a.ns;
var G__11740 = b.ns;
return goog.array.defaultCompare(G__11739,G__11740);
})();
if(((0) === nsc)){
var G__11741 = a.name;
var G__11742 = b.name;
return goog.array.defaultCompare(G__11741,G__11742);
} else {
return nsc;
}
}
} else {
var G__11743 = a.name;
var G__11744 = b.name;
return goog.array.defaultCompare(G__11743,G__11744);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4156__auto__ = self__._hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11746 = null;
var G__11746__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11746__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11746 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11746__2.call(this,self__,coll);
case 3:
return G__11746__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11746.cljs$core$IFn$_invoke$arity$2 = G__11746__2;
G__11746.cljs$core$IFn$_invoke$arity$3 = G__11746__3;
return G__11746;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11745){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11745)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__11794 = null;
var G__11794__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__11794__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__11794__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__11794__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__11794__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__11794__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__11794__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__11794__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__11794__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__11794__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__11794__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__11794__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__11794__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__11794__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__11794__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__11794__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__11794__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__11794__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__11794__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__11794__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__11794__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__11794__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11750 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11751 = a;
var G__11752 = b;
var G__11753 = c;
var G__11754 = d;
var G__11755 = e;
var G__11756 = f;
var G__11757 = g;
var G__11758 = h;
var G__11759 = i;
var G__11760 = j;
var G__11761 = k;
var G__11762 = l;
var G__11763 = m;
var G__11764 = n;
var G__11765 = o;
var G__11766 = p;
var G__11767 = q;
var G__11768 = r;
var G__11769 = s;
var G__11770 = t;
var G__11771 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771) : cljs.core.apply.call(null,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771));
});
G__11794 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11794__1.call(this,self__);
case 2:
return G__11794__2.call(this,self__,a);
case 3:
return G__11794__3.call(this,self__,a,b);
case 4:
return G__11794__4.call(this,self__,a,b,c);
case 5:
return G__11794__5.call(this,self__,a,b,c,d);
case 6:
return G__11794__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11794__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11794__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11794__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11794__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11794__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11794__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11794__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11794__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11794__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11794__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11794__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11794__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11794__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11794__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11794__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11794__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11794.cljs$core$IFn$_invoke$arity$1 = G__11794__1;
G__11794.cljs$core$IFn$_invoke$arity$2 = G__11794__2;
G__11794.cljs$core$IFn$_invoke$arity$3 = G__11794__3;
G__11794.cljs$core$IFn$_invoke$arity$4 = G__11794__4;
G__11794.cljs$core$IFn$_invoke$arity$5 = G__11794__5;
G__11794.cljs$core$IFn$_invoke$arity$6 = G__11794__6;
G__11794.cljs$core$IFn$_invoke$arity$7 = G__11794__7;
G__11794.cljs$core$IFn$_invoke$arity$8 = G__11794__8;
G__11794.cljs$core$IFn$_invoke$arity$9 = G__11794__9;
G__11794.cljs$core$IFn$_invoke$arity$10 = G__11794__10;
G__11794.cljs$core$IFn$_invoke$arity$11 = G__11794__11;
G__11794.cljs$core$IFn$_invoke$arity$12 = G__11794__12;
G__11794.cljs$core$IFn$_invoke$arity$13 = G__11794__13;
G__11794.cljs$core$IFn$_invoke$arity$14 = G__11794__14;
G__11794.cljs$core$IFn$_invoke$arity$15 = G__11794__15;
G__11794.cljs$core$IFn$_invoke$arity$16 = G__11794__16;
G__11794.cljs$core$IFn$_invoke$arity$17 = G__11794__17;
G__11794.cljs$core$IFn$_invoke$arity$18 = G__11794__18;
G__11794.cljs$core$IFn$_invoke$arity$19 = G__11794__19;
G__11794.cljs$core$IFn$_invoke$arity$20 = G__11794__20;
G__11794.cljs$core$IFn$_invoke$arity$21 = G__11794__21;
G__11794.cljs$core$IFn$_invoke$arity$22 = G__11794__22;
return G__11794;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args11749){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11749)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11772 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11773 = a;
var G__11774 = b;
var G__11775 = c;
var G__11776 = d;
var G__11777 = e;
var G__11778 = f;
var G__11779 = g;
var G__11780 = h;
var G__11781 = i;
var G__11782 = j;
var G__11783 = k;
var G__11784 = l;
var G__11785 = m;
var G__11786 = n;
var G__11787 = o;
var G__11788 = p;
var G__11789 = q;
var G__11790 = r;
var G__11791 = s;
var G__11792 = t;
var G__11793 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793) : cljs.core.apply.call(null,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11796 = x;
if(G__11796){
var bit__4416__auto__ = null;
if(cljs.core.truth_((function (){var or__3735__auto__ = bit__4416__auto__;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return G__11796.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11796.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11796);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11796);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11798 = value;
if(G__11798){
var bit__4416__auto__ = (G__11798.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4416__auto__) || (G__11798.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11798.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11798);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11798);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11800 = coll;
if(G__11800){
var bit__4409__auto__ = (G__11800.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4409__auto__) || (G__11800.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11802 = coll;
if(G__11802){
var bit__4409__auto__ = (G__11802.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4409__auto__) || (G__11802.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11804 = coll;
if(G__11804){
var bit__4409__auto__ = (G__11804.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4409__auto__) || (G__11804.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11806 = coll;
if(G__11806){
var bit__4409__auto__ = (G__11806.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4409__auto__) || (G__11806.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11811__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11812 = y;
var G__11813 = cljs.core.first(more);
var G__11814 = cljs.core.next(more);
x = G__11812;
y = G__11813;
more = G__11814;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11811 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11815__i = 0, G__11815__a = new Array(arguments.length -  2);
while (G__11815__i < G__11815__a.length) {G__11815__a[G__11815__i] = arguments[G__11815__i + 2]; ++G__11815__i;}
  more = new cljs.core.IndexedSeq(G__11815__a,0);
} 
return G__11811__delegate.call(this,x,y,more);};
G__11811.cljs$lang$maxFixedArity = 2;
G__11811.cljs$lang$applyTo = (function (arglist__11816){
var x = cljs.core.first(arglist__11816);
arglist__11816 = cljs.core.next(arglist__11816);
var y = cljs.core.first(arglist__11816);
var more = cljs.core.rest(arglist__11816);
return G__11811__delegate(x,y,more);
});
G__11811.cljs$core$IFn$_invoke$arity$variadic = G__11811__delegate;
return G__11811;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11817 = null;
if (arguments.length > 2) {
var G__11818__i = 0, G__11818__a = new Array(arguments.length -  2);
while (G__11818__i < G__11818__a.length) {G__11818__a[G__11818__i] = arguments[G__11818__i + 2]; ++G__11818__i;}
G__11817 = new cljs.core.IndexedSeq(G__11818__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11819 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11819) : cljs.core.es6_iterator_seq.call(null,G__11819));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11820 = (n + (1));
var G__11821 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11822 = cljs.core.next(coll__$1);
n = G__11820;
hash_code = G__11821;
coll__$1 = G__11822;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11823 = (n + (1));
var G__11824 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11825 = cljs.core.next(coll__$1);
n = G__11823;
hash_code = G__11824;
coll__$1 = G__11825;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11826 = o;
return goog.getUid(G__11826);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11828 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11828) : cljs.core.deref.call(null,G__11828));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11835 = val;
var G__11836 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11835,G__11836) : f.call(null,G__11835,G__11836));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11841 = nval;
var G__11842 = (n + (1));
val = G__11841;
n = G__11842;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11837 = val__$1;
var G__11838 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11837,G__11838) : f.call(null,G__11837,G__11838));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11843 = nval;
var G__11844 = (n + (1));
val__$1 = G__11843;
n = G__11844;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11839 = val__$1;
var G__11840 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11839,G__11840) : f.call(null,G__11839,G__11840));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11845 = nval;
var G__11846 = (n + (1));
val__$1 = G__11845;
n = G__11846;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11853 = val;
var G__11854 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11853,G__11854) : f.call(null,G__11853,G__11854));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11859 = nval;
var G__11860 = (n + (1));
val = G__11859;
n = G__11860;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11855 = val__$1;
var G__11856 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11855,G__11856) : f.call(null,G__11855,G__11856));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11861 = nval;
var G__11862 = (n + (1));
val__$1 = G__11861;
n = G__11862;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11857 = val__$1;
var G__11858 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11857,G__11858) : f.call(null,G__11857,G__11858));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11863 = nval;
var G__11864 = (n + (1));
val__$1 = G__11863;
n = G__11864;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__11866 = x;
if(G__11866){
var bit__4416__auto__ = (G__11866.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4416__auto__) || (G__11866.cljs$core$ICounted$)){
return true;
} else {
if((!G__11866.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11866);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11866);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__11868 = x;
if(G__11868){
var bit__4416__auto__ = (G__11868.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4416__auto__) || (G__11868.cljs$core$IIndexed$)){
return true;
} else {
if((!G__11868.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11868);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11868);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11869 = coll__$1;
var G__11870 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11869,G__11870) : cljs.core.equiv_sequential.call(null,G__11869,G__11870));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11871 = o;
var G__11872 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11871,G__11872) : cljs.core.cons.call(null,G__11871,G__11872));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11875 = coll__$1;
var G__11876 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11875,G__11876) : cljs.core.equiv_sequential.call(null,G__11875,G__11876));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11877 = cljs.core.List.EMPTY;
var G__11878 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11877,G__11878) : cljs.core.with_meta.call(null,G__11877,G__11878));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__11879 = f;
var G__11880 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11879,G__11880) : cljs.core.seq_reduce.call(null,G__11879,G__11880));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__11881 = f;
var G__11882 = start;
var G__11883 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11881,G__11882,G__11883) : cljs.core.seq_reduce.call(null,G__11881,G__11882,G__11883));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11884 = o;
var G__11885 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11884,G__11885) : cljs.core.cons.call(null,G__11884,G__11885));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__11886 = sn;
s = G__11886;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__11891__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__11892 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__11893 = cljs.core.first(xs);
var G__11894 = cljs.core.next(xs);
coll = G__11892;
x = G__11893;
xs = G__11894;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__11891 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__11895__i = 0, G__11895__a = new Array(arguments.length -  2);
while (G__11895__i < G__11895__a.length) {G__11895__a[G__11895__i] = arguments[G__11895__i + 2]; ++G__11895__i;}
  xs = new cljs.core.IndexedSeq(G__11895__a,0);
} 
return G__11891__delegate.call(this,coll,x,xs);};
G__11891.cljs$lang$maxFixedArity = 2;
G__11891.cljs$lang$applyTo = (function (arglist__11896){
var coll = cljs.core.first(arglist__11896);
arglist__11896 = cljs.core.next(arglist__11896);
var x = cljs.core.first(arglist__11896);
var xs = cljs.core.rest(arglist__11896);
return G__11891__delegate(coll,x,xs);
});
G__11891.cljs$core$IFn$_invoke$arity$variadic = G__11891__delegate;
return G__11891;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__11897 = null;
if (arguments.length > 2) {
var G__11898__i = 0, G__11898__a = new Array(arguments.length -  2);
while (G__11898__i < G__11898__a.length) {G__11898__a[G__11898__i] = arguments[G__11898__i + 2]; ++G__11898__i;}
G__11897 = new cljs.core.IndexedSeq(G__11898__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__11897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__11899 = cljs.core.next(s);
var G__11900 = (acc + (1));
s = G__11899;
acc = G__11900;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__11902 = coll;
if(G__11902){
var bit__4409__auto__ = (G__11902.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4409__auto__) || (G__11902.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__11903 = cljs.core.next(coll);
var G__11904 = (n - (1));
coll = G__11903;
n = G__11904;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__11905 = cljs.core.next(coll);
var G__11906 = (n - (1));
var G__11907 = not_found;
coll = G__11905;
n = G__11906;
not_found = G__11907;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__11912 = coll;
if(G__11912){
var bit__4409__auto__ = (G__11912.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4409__auto__) || (G__11912.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11913 = coll;
if(G__11913){
var bit__4416__auto__ = (G__11913.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4416__auto__) || (G__11913.cljs$core$ISeq$)){
return true;
} else {
if((!G__11913.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11913);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11913);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__11914 = coll;
if(G__11914){
var bit__4409__auto__ = (G__11914.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4409__auto__) || (G__11914.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11915 = coll;
if(G__11915){
var bit__4416__auto__ = (G__11915.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4416__auto__) || (G__11915.cljs$core$ISeq$)){
return true;
} else {
if((!G__11915.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11915);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11915);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__11916 = (n__$1 - (1));
var G__11917 = cljs.core.rest(xs);
n__$1 = G__11916;
xs = G__11917;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__11920 = o;
if(G__11920){
var bit__4409__auto__ = (G__11920.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4409__auto__) || (G__11920.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__11921 = o;
if(G__11921){
var bit__4409__auto__ = (G__11921.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4409__auto__) || (G__11921.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__11925__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__11926 = ret;
var G__11927 = cljs.core.first(kvs);
var G__11928 = cljs.core.second(kvs);
var G__11929 = cljs.core.nnext(kvs);
coll = G__11926;
k = G__11927;
v = G__11928;
kvs = G__11929;
continue;
} else {
return ret;
}
break;
}
};
var G__11925 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11930__i = 0, G__11930__a = new Array(arguments.length -  3);
while (G__11930__i < G__11930__a.length) {G__11930__a[G__11930__i] = arguments[G__11930__i + 3]; ++G__11930__i;}
  kvs = new cljs.core.IndexedSeq(G__11930__a,0);
} 
return G__11925__delegate.call(this,coll,k,v,kvs);};
G__11925.cljs$lang$maxFixedArity = 3;
G__11925.cljs$lang$applyTo = (function (arglist__11931){
var coll = cljs.core.first(arglist__11931);
arglist__11931 = cljs.core.next(arglist__11931);
var k = cljs.core.first(arglist__11931);
arglist__11931 = cljs.core.next(arglist__11931);
var v = cljs.core.first(arglist__11931);
var kvs = cljs.core.rest(arglist__11931);
return G__11925__delegate(coll,k,v,kvs);
});
G__11925.cljs$core$IFn$_invoke$arity$variadic = G__11925__delegate;
return G__11925;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__11932 = null;
if (arguments.length > 3) {
var G__11933__i = 0, G__11933__a = new Array(arguments.length -  3);
while (G__11933__i < G__11933__a.length) {G__11933__a[G__11933__i] = arguments[G__11933__i + 3]; ++G__11933__i;}
G__11932 = new cljs.core.IndexedSeq(G__11933__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__11932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__11936__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11937 = ret;
var G__11938 = cljs.core.first(ks);
var G__11939 = cljs.core.next(ks);
coll = G__11937;
k = G__11938;
ks = G__11939;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11936 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11940__i = 0, G__11940__a = new Array(arguments.length -  2);
while (G__11940__i < G__11940__a.length) {G__11940__a[G__11940__i] = arguments[G__11940__i + 2]; ++G__11940__i;}
  ks = new cljs.core.IndexedSeq(G__11940__a,0);
} 
return G__11936__delegate.call(this,coll,k,ks);};
G__11936.cljs$lang$maxFixedArity = 2;
G__11936.cljs$lang$applyTo = (function (arglist__11941){
var coll = cljs.core.first(arglist__11941);
arglist__11941 = cljs.core.next(arglist__11941);
var k = cljs.core.first(arglist__11941);
var ks = cljs.core.rest(arglist__11941);
return G__11936__delegate(coll,k,ks);
});
G__11936.cljs$core$IFn$_invoke$arity$variadic = G__11936__delegate;
return G__11936;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__11942 = null;
if (arguments.length > 2) {
var G__11943__i = 0, G__11943__a = new Array(arguments.length -  2);
while (G__11943__i < G__11943__a.length) {G__11943__a[G__11943__i] = arguments[G__11943__i + 2]; ++G__11943__i;}
G__11942 = new cljs.core.IndexedSeq(G__11943__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3735__auto__ = (function (){var G__11948 = f;
return goog.isFunction(G__11948);
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var G__11949 = f;
if(G__11949){
var bit__4416__auto__ = null;
if(cljs.core.truth_((function (){var or__3735__auto____$1 = bit__4416__auto__;
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
return G__11949.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__11949.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11949);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11949);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__12415 = null;
var G__12415__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__12415__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11951 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11951) : self__.afn.call(null,G__11951));
});
var G__12415__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11952 = a;
var G__11953 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11952,G__11953) : self__.afn.call(null,G__11952,G__11953));
});
var G__12415__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11954 = a;
var G__11955 = b;
var G__11956 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11954,G__11955,G__11956) : self__.afn.call(null,G__11954,G__11955,G__11956));
});
var G__12415__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11957 = a;
var G__11958 = b;
var G__11959 = c;
var G__11960 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11957,G__11958,G__11959,G__11960) : self__.afn.call(null,G__11957,G__11958,G__11959,G__11960));
});
var G__12415__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11961 = a;
var G__11962 = b;
var G__11963 = c;
var G__11964 = d;
var G__11965 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11961,G__11962,G__11963,G__11964,G__11965) : self__.afn.call(null,G__11961,G__11962,G__11963,G__11964,G__11965));
});
var G__12415__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11966 = a;
var G__11967 = b;
var G__11968 = c;
var G__11969 = d;
var G__11970 = e;
var G__11971 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11966,G__11967,G__11968,G__11969,G__11970,G__11971) : self__.afn.call(null,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971));
});
var G__12415__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11972 = a;
var G__11973 = b;
var G__11974 = c;
var G__11975 = d;
var G__11976 = e;
var G__11977 = f;
var G__11978 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978) : self__.afn.call(null,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978));
});
var G__12415__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11979 = a;
var G__11980 = b;
var G__11981 = c;
var G__11982 = d;
var G__11983 = e;
var G__11984 = f;
var G__11985 = g;
var G__11986 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986) : self__.afn.call(null,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986));
});
var G__12415__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11987 = a;
var G__11988 = b;
var G__11989 = c;
var G__11990 = d;
var G__11991 = e;
var G__11992 = f;
var G__11993 = g;
var G__11994 = h;
var G__11995 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995) : self__.afn.call(null,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995));
});
var G__12415__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11996 = a;
var G__11997 = b;
var G__11998 = c;
var G__11999 = d;
var G__12000 = e;
var G__12001 = f;
var G__12002 = g;
var G__12003 = h;
var G__12004 = i;
var G__12005 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005) : self__.afn.call(null,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005));
});
var G__12415__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12006 = a;
var G__12007 = b;
var G__12008 = c;
var G__12009 = d;
var G__12010 = e;
var G__12011 = f;
var G__12012 = g;
var G__12013 = h;
var G__12014 = i;
var G__12015 = j;
var G__12016 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016) : self__.afn.call(null,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016));
});
var G__12415__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12017 = a;
var G__12018 = b;
var G__12019 = c;
var G__12020 = d;
var G__12021 = e;
var G__12022 = f;
var G__12023 = g;
var G__12024 = h;
var G__12025 = i;
var G__12026 = j;
var G__12027 = k;
var G__12028 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028) : self__.afn.call(null,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028));
});
var G__12415__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12029 = a;
var G__12030 = b;
var G__12031 = c;
var G__12032 = d;
var G__12033 = e;
var G__12034 = f;
var G__12035 = g;
var G__12036 = h;
var G__12037 = i;
var G__12038 = j;
var G__12039 = k;
var G__12040 = l;
var G__12041 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041) : self__.afn.call(null,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041));
});
var G__12415__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12042 = a;
var G__12043 = b;
var G__12044 = c;
var G__12045 = d;
var G__12046 = e;
var G__12047 = f;
var G__12048 = g;
var G__12049 = h;
var G__12050 = i;
var G__12051 = j;
var G__12052 = k;
var G__12053 = l;
var G__12054 = m;
var G__12055 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12042,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055) : self__.afn.call(null,G__12042,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055));
});
var G__12415__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12056 = a;
var G__12057 = b;
var G__12058 = c;
var G__12059 = d;
var G__12060 = e;
var G__12061 = f;
var G__12062 = g;
var G__12063 = h;
var G__12064 = i;
var G__12065 = j;
var G__12066 = k;
var G__12067 = l;
var G__12068 = m;
var G__12069 = n;
var G__12070 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070) : self__.afn.call(null,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070));
});
var G__12415__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12071 = a;
var G__12072 = b;
var G__12073 = c;
var G__12074 = d;
var G__12075 = e;
var G__12076 = f;
var G__12077 = g;
var G__12078 = h;
var G__12079 = i;
var G__12080 = j;
var G__12081 = k;
var G__12082 = l;
var G__12083 = m;
var G__12084 = n;
var G__12085 = o;
var G__12086 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086) : self__.afn.call(null,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086));
});
var G__12415__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12087 = a;
var G__12088 = b;
var G__12089 = c;
var G__12090 = d;
var G__12091 = e;
var G__12092 = f;
var G__12093 = g;
var G__12094 = h;
var G__12095 = i;
var G__12096 = j;
var G__12097 = k;
var G__12098 = l;
var G__12099 = m;
var G__12100 = n;
var G__12101 = o;
var G__12102 = p;
var G__12103 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103) : self__.afn.call(null,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103));
});
var G__12415__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12104 = a;
var G__12105 = b;
var G__12106 = c;
var G__12107 = d;
var G__12108 = e;
var G__12109 = f;
var G__12110 = g;
var G__12111 = h;
var G__12112 = i;
var G__12113 = j;
var G__12114 = k;
var G__12115 = l;
var G__12116 = m;
var G__12117 = n;
var G__12118 = o;
var G__12119 = p;
var G__12120 = q;
var G__12121 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121) : self__.afn.call(null,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121));
});
var G__12415__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12122 = a;
var G__12123 = b;
var G__12124 = c;
var G__12125 = d;
var G__12126 = e;
var G__12127 = f;
var G__12128 = g;
var G__12129 = h;
var G__12130 = i;
var G__12131 = j;
var G__12132 = k;
var G__12133 = l;
var G__12134 = m;
var G__12135 = n;
var G__12136 = o;
var G__12137 = p;
var G__12138 = q;
var G__12139 = r;
var G__12140 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140) : self__.afn.call(null,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140));
});
var G__12415__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12141 = a;
var G__12142 = b;
var G__12143 = c;
var G__12144 = d;
var G__12145 = e;
var G__12146 = f;
var G__12147 = g;
var G__12148 = h;
var G__12149 = i;
var G__12150 = j;
var G__12151 = k;
var G__12152 = l;
var G__12153 = m;
var G__12154 = n;
var G__12155 = o;
var G__12156 = p;
var G__12157 = q;
var G__12158 = r;
var G__12159 = s;
var G__12160 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160) : self__.afn.call(null,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160));
});
var G__12415__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12161 = self__.afn;
var G__12162 = a;
var G__12163 = b;
var G__12164 = c;
var G__12165 = d;
var G__12166 = e;
var G__12167 = f;
var G__12168 = g;
var G__12169 = h;
var G__12170 = i;
var G__12171 = j;
var G__12172 = k;
var G__12173 = l;
var G__12174 = m;
var G__12175 = n;
var G__12176 = o;
var G__12177 = p;
var G__12178 = q;
var G__12179 = r;
var G__12180 = s;
var G__12181 = t;
var G__12182 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182) : cljs.core.apply.call(null,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182));
});
G__12415 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12415__1.call(this,self__);
case 2:
return G__12415__2.call(this,self__,a);
case 3:
return G__12415__3.call(this,self__,a,b);
case 4:
return G__12415__4.call(this,self__,a,b,c);
case 5:
return G__12415__5.call(this,self__,a,b,c,d);
case 6:
return G__12415__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12415__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12415__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12415__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12415__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12415__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12415__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12415__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12415__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12415__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12415__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12415__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12415__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12415__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12415__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12415__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12415__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12415.cljs$core$IFn$_invoke$arity$1 = G__12415__1;
G__12415.cljs$core$IFn$_invoke$arity$2 = G__12415__2;
G__12415.cljs$core$IFn$_invoke$arity$3 = G__12415__3;
G__12415.cljs$core$IFn$_invoke$arity$4 = G__12415__4;
G__12415.cljs$core$IFn$_invoke$arity$5 = G__12415__5;
G__12415.cljs$core$IFn$_invoke$arity$6 = G__12415__6;
G__12415.cljs$core$IFn$_invoke$arity$7 = G__12415__7;
G__12415.cljs$core$IFn$_invoke$arity$8 = G__12415__8;
G__12415.cljs$core$IFn$_invoke$arity$9 = G__12415__9;
G__12415.cljs$core$IFn$_invoke$arity$10 = G__12415__10;
G__12415.cljs$core$IFn$_invoke$arity$11 = G__12415__11;
G__12415.cljs$core$IFn$_invoke$arity$12 = G__12415__12;
G__12415.cljs$core$IFn$_invoke$arity$13 = G__12415__13;
G__12415.cljs$core$IFn$_invoke$arity$14 = G__12415__14;
G__12415.cljs$core$IFn$_invoke$arity$15 = G__12415__15;
G__12415.cljs$core$IFn$_invoke$arity$16 = G__12415__16;
G__12415.cljs$core$IFn$_invoke$arity$17 = G__12415__17;
G__12415.cljs$core$IFn$_invoke$arity$18 = G__12415__18;
G__12415.cljs$core$IFn$_invoke$arity$19 = G__12415__19;
G__12415.cljs$core$IFn$_invoke$arity$20 = G__12415__20;
G__12415.cljs$core$IFn$_invoke$arity$21 = G__12415__21;
G__12415.cljs$core$IFn$_invoke$arity$22 = G__12415__22;
return G__12415;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args11950){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11950)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__12183 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12183) : self__.afn.call(null,G__12183));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__12184 = a;
var G__12185 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12184,G__12185) : self__.afn.call(null,G__12184,G__12185));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__12186 = a;
var G__12187 = b;
var G__12188 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12186,G__12187,G__12188) : self__.afn.call(null,G__12186,G__12187,G__12188));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__12189 = a;
var G__12190 = b;
var G__12191 = c;
var G__12192 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12189,G__12190,G__12191,G__12192) : self__.afn.call(null,G__12189,G__12190,G__12191,G__12192));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__12193 = a;
var G__12194 = b;
var G__12195 = c;
var G__12196 = d;
var G__12197 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12193,G__12194,G__12195,G__12196,G__12197) : self__.afn.call(null,G__12193,G__12194,G__12195,G__12196,G__12197));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__12198 = a;
var G__12199 = b;
var G__12200 = c;
var G__12201 = d;
var G__12202 = e;
var G__12203 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12198,G__12199,G__12200,G__12201,G__12202,G__12203) : self__.afn.call(null,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__12204 = a;
var G__12205 = b;
var G__12206 = c;
var G__12207 = d;
var G__12208 = e;
var G__12209 = f;
var G__12210 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210) : self__.afn.call(null,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__12211 = a;
var G__12212 = b;
var G__12213 = c;
var G__12214 = d;
var G__12215 = e;
var G__12216 = f;
var G__12217 = g;
var G__12218 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218) : self__.afn.call(null,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__12219 = a;
var G__12220 = b;
var G__12221 = c;
var G__12222 = d;
var G__12223 = e;
var G__12224 = f;
var G__12225 = g;
var G__12226 = h;
var G__12227 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227) : self__.afn.call(null,G__12219,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__12228 = a;
var G__12229 = b;
var G__12230 = c;
var G__12231 = d;
var G__12232 = e;
var G__12233 = f;
var G__12234 = g;
var G__12235 = h;
var G__12236 = i;
var G__12237 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237) : self__.afn.call(null,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__12238 = a;
var G__12239 = b;
var G__12240 = c;
var G__12241 = d;
var G__12242 = e;
var G__12243 = f;
var G__12244 = g;
var G__12245 = h;
var G__12246 = i;
var G__12247 = j;
var G__12248 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248) : self__.afn.call(null,G__12238,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__12249 = a;
var G__12250 = b;
var G__12251 = c;
var G__12252 = d;
var G__12253 = e;
var G__12254 = f;
var G__12255 = g;
var G__12256 = h;
var G__12257 = i;
var G__12258 = j;
var G__12259 = k;
var G__12260 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260) : self__.afn.call(null,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257,G__12258,G__12259,G__12260));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__12261 = a;
var G__12262 = b;
var G__12263 = c;
var G__12264 = d;
var G__12265 = e;
var G__12266 = f;
var G__12267 = g;
var G__12268 = h;
var G__12269 = i;
var G__12270 = j;
var G__12271 = k;
var G__12272 = l;
var G__12273 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273) : self__.afn.call(null,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__12274 = a;
var G__12275 = b;
var G__12276 = c;
var G__12277 = d;
var G__12278 = e;
var G__12279 = f;
var G__12280 = g;
var G__12281 = h;
var G__12282 = i;
var G__12283 = j;
var G__12284 = k;
var G__12285 = l;
var G__12286 = m;
var G__12287 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287) : self__.afn.call(null,G__12274,G__12275,G__12276,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__12288 = a;
var G__12289 = b;
var G__12290 = c;
var G__12291 = d;
var G__12292 = e;
var G__12293 = f;
var G__12294 = g;
var G__12295 = h;
var G__12296 = i;
var G__12297 = j;
var G__12298 = k;
var G__12299 = l;
var G__12300 = m;
var G__12301 = n;
var G__12302 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302) : self__.afn.call(null,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12303 = a;
var G__12304 = b;
var G__12305 = c;
var G__12306 = d;
var G__12307 = e;
var G__12308 = f;
var G__12309 = g;
var G__12310 = h;
var G__12311 = i;
var G__12312 = j;
var G__12313 = k;
var G__12314 = l;
var G__12315 = m;
var G__12316 = n;
var G__12317 = o;
var G__12318 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318) : self__.afn.call(null,G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12319 = a;
var G__12320 = b;
var G__12321 = c;
var G__12322 = d;
var G__12323 = e;
var G__12324 = f;
var G__12325 = g;
var G__12326 = h;
var G__12327 = i;
var G__12328 = j;
var G__12329 = k;
var G__12330 = l;
var G__12331 = m;
var G__12332 = n;
var G__12333 = o;
var G__12334 = p;
var G__12335 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12319,G__12320,G__12321,G__12322,G__12323,G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335) : self__.afn.call(null,G__12319,G__12320,G__12321,G__12322,G__12323,G__12324,G__12325,G__12326,G__12327,G__12328,G__12329,G__12330,G__12331,G__12332,G__12333,G__12334,G__12335));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12336 = a;
var G__12337 = b;
var G__12338 = c;
var G__12339 = d;
var G__12340 = e;
var G__12341 = f;
var G__12342 = g;
var G__12343 = h;
var G__12344 = i;
var G__12345 = j;
var G__12346 = k;
var G__12347 = l;
var G__12348 = m;
var G__12349 = n;
var G__12350 = o;
var G__12351 = p;
var G__12352 = q;
var G__12353 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353) : self__.afn.call(null,G__12336,G__12337,G__12338,G__12339,G__12340,G__12341,G__12342,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12354 = a;
var G__12355 = b;
var G__12356 = c;
var G__12357 = d;
var G__12358 = e;
var G__12359 = f;
var G__12360 = g;
var G__12361 = h;
var G__12362 = i;
var G__12363 = j;
var G__12364 = k;
var G__12365 = l;
var G__12366 = m;
var G__12367 = n;
var G__12368 = o;
var G__12369 = p;
var G__12370 = q;
var G__12371 = r;
var G__12372 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12354,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372) : self__.afn.call(null,G__12354,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12373 = a;
var G__12374 = b;
var G__12375 = c;
var G__12376 = d;
var G__12377 = e;
var G__12378 = f;
var G__12379 = g;
var G__12380 = h;
var G__12381 = i;
var G__12382 = j;
var G__12383 = k;
var G__12384 = l;
var G__12385 = m;
var G__12386 = n;
var G__12387 = o;
var G__12388 = p;
var G__12389 = q;
var G__12390 = r;
var G__12391 = s;
var G__12392 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392) : self__.afn.call(null,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12393 = self__.afn;
var G__12394 = a;
var G__12395 = b;
var G__12396 = c;
var G__12397 = d;
var G__12398 = e;
var G__12399 = f;
var G__12400 = g;
var G__12401 = h;
var G__12402 = i;
var G__12403 = j;
var G__12404 = k;
var G__12405 = l;
var G__12406 = m;
var G__12407 = n;
var G__12408 = o;
var G__12409 = p;
var G__12410 = q;
var G__12411 = r;
var G__12412 = s;
var G__12413 = t;
var G__12414 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414) : cljs.core.apply.call(null,G__12393,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__12419 = o;
if(G__12419){
var bit__4416__auto__ = (G__12419.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4416__auto__) || (G__12419.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__12419.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12419);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12419);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3723__auto__ = !((o == null));
if(and__3723__auto__){
var G__12423 = o;
if(G__12423){
var bit__4416__auto__ = (G__12423.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4416__auto__) || (G__12423.cljs$core$IMeta$)){
return true;
} else {
if((!G__12423.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12423);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12423);
}
} else {
return and__3723__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__12426__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12427 = ret;
var G__12428 = cljs.core.first(ks);
var G__12429 = cljs.core.next(ks);
coll = G__12427;
k = G__12428;
ks = G__12429;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12426 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12430__i = 0, G__12430__a = new Array(arguments.length -  2);
while (G__12430__i < G__12430__a.length) {G__12430__a[G__12430__i] = arguments[G__12430__i + 2]; ++G__12430__i;}
  ks = new cljs.core.IndexedSeq(G__12430__a,0);
} 
return G__12426__delegate.call(this,coll,k,ks);};
G__12426.cljs$lang$maxFixedArity = 2;
G__12426.cljs$lang$applyTo = (function (arglist__12431){
var coll = cljs.core.first(arglist__12431);
arglist__12431 = cljs.core.next(arglist__12431);
var k = cljs.core.first(arglist__12431);
var ks = cljs.core.rest(arglist__12431);
return G__12426__delegate(coll,k,ks);
});
G__12426.cljs$core$IFn$_invoke$arity$variadic = G__12426__delegate;
return G__12426;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__12432 = null;
if (arguments.length > 2) {
var G__12433__i = 0, G__12433__a = new Array(arguments.length -  2);
while (G__12433__i < G__12433__a.length) {G__12433__a[G__12433__i] = arguments[G__12433__i + 2]; ++G__12433__i;}
G__12432 = new cljs.core.IndexedSeq(G__12433__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12435 = x;
if(G__12435){
var bit__4416__auto__ = (G__12435.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4416__auto__) || (G__12435.cljs$core$ICollection$)){
return true;
} else {
if((!G__12435.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12435);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12435);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12437 = x;
if(G__12437){
var bit__4416__auto__ = (G__12437.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4416__auto__) || (G__12437.cljs$core$ISet$)){
return true;
} else {
if((!G__12437.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12437);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12437);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__12439 = x;
if(G__12439){
var bit__4416__auto__ = (G__12439.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4416__auto__) || (G__12439.cljs$core$IAssociative$)){
return true;
} else {
if((!G__12439.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12439);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12439);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__12441 = x;
if(G__12441){
var bit__4416__auto__ = (G__12441.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4416__auto__) || (G__12441.cljs$core$ISequential$)){
return true;
} else {
if((!G__12441.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12441);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__12443 = x;
if(G__12443){
var bit__4416__auto__ = (G__12443.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4416__auto__) || (G__12443.cljs$core$ISorted$)){
return true;
} else {
if((!G__12443.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12443);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12443);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__12445 = x;
if(G__12445){
var bit__4416__auto__ = (G__12445.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4416__auto__) || (G__12445.cljs$core$IReduce$)){
return true;
} else {
if((!G__12445.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12445);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12445);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12447 = x;
if(G__12447){
var bit__4416__auto__ = (G__12447.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4416__auto__) || (G__12447.cljs$core$IMap$)){
return true;
} else {
if((!G__12447.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12447);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12447);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__12449 = x;
if(G__12449){
var bit__4416__auto__ = (G__12449.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4416__auto__) || (G__12449.cljs$core$IVector$)){
return true;
} else {
if((!G__12449.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12449);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12449);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__12451 = x;
if(G__12451){
var bit__4409__auto__ = (G__12451.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4409__auto__) || (G__12451.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj12457 = {};
return obj12457;
});
var js_obj__1 = (function() { 
var G__12460__delegate = function (keyvals){
var G__12458 = goog.object.create;
var G__12459 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12458,G__12459) : cljs.core.apply.call(null,G__12458,G__12459));
};
var G__12460 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__12461__i = 0, G__12461__a = new Array(arguments.length -  0);
while (G__12461__i < G__12461__a.length) {G__12461__a[G__12461__i] = arguments[G__12461__i + 0]; ++G__12461__i;}
  keyvals = new cljs.core.IndexedSeq(G__12461__a,0);
} 
return G__12460__delegate.call(this,keyvals);};
G__12460.cljs$lang$maxFixedArity = 0;
G__12460.cljs$lang$applyTo = (function (arglist__12462){
var keyvals = cljs.core.seq(arglist__12462);
return G__12460__delegate(keyvals);
});
G__12460.cljs$core$IFn$_invoke$arity$variadic = G__12460__delegate;
return G__12460;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__12463 = null;
if (arguments.length > 0) {
var G__12464__i = 0, G__12464__a = new Array(arguments.length -  0);
while (G__12464__i < G__12464__a.length) {G__12464__a[G__12464__i] = arguments[G__12464__i + 0]; ++G__12464__i;}
G__12463 = new cljs.core.IndexedSeq(G__12464__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__12467_12469 = obj;
var G__12468_12470 = ((function (G__12467_12469,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__12467_12469,keys))
;
goog.object.forEach(G__12467_12469,G__12468_12470);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12471 = (i__$1 + (1));
var G__12472 = (j__$1 + (1));
var G__12473 = (len__$1 - (1));
i__$1 = G__12471;
j__$1 = G__12472;
len__$1 = G__12473;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12474 = (i__$1 - (1));
var G__12475 = (j__$1 - (1));
var G__12476 = (len__$1 - (1));
i__$1 = G__12474;
j__$1 = G__12475;
len__$1 = G__12476;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj12478 = {};
return obj12478;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__12480 = s;
if(G__12480){
var bit__4416__auto__ = (G__12480.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4416__auto__) || (G__12480.cljs$core$ISeq$)){
return true;
} else {
if((!G__12480.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12480);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__12482 = s;
if(G__12482){
var bit__4416__auto__ = (G__12482.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4416__auto__) || (G__12482.cljs$core$ISeqable$)){
return true;
} else {
if((!G__12482.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12482);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12482);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3735__auto__ = cljs.core.fn_QMARK_(f);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var G__12486 = f;
if(G__12486){
var bit__4416__auto__ = (G__12486.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4416__auto__) || (G__12486.cljs$core$IFn$)){
return true;
} else {
if((!G__12486.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12486);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12486);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__12499 = n;
return isNaN(G__12499);
})())) && (!((n === Infinity))) && (((function (){var G__12500 = n;
return parseFloat(G__12500);
})() === (function (){var G__12501 = n;
var G__12502 = (10);
return parseInt(G__12501,G__12502);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__12503__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__12504 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__12505 = etc;
s = G__12504;
xs = G__12505;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__12503 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12506__i = 0, G__12506__a = new Array(arguments.length -  2);
while (G__12506__i < G__12506__a.length) {G__12506__a[G__12506__i] = arguments[G__12506__i + 2]; ++G__12506__i;}
  more = new cljs.core.IndexedSeq(G__12506__a,0);
} 
return G__12503__delegate.call(this,x,y,more);};
G__12503.cljs$lang$maxFixedArity = 2;
G__12503.cljs$lang$applyTo = (function (arglist__12507){
var x = cljs.core.first(arglist__12507);
arglist__12507 = cljs.core.next(arglist__12507);
var y = cljs.core.first(arglist__12507);
var more = cljs.core.rest(arglist__12507);
return G__12503__delegate(x,y,more);
});
G__12503.cljs$core$IFn$_invoke$arity$variadic = G__12503__delegate;
return G__12503;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__12508 = null;
if (arguments.length > 2) {
var G__12509__i = 0, G__12509__a = new Array(arguments.length -  2);
while (G__12509__i < G__12509__a.length) {G__12509__a[G__12509__i] = arguments[G__12509__i + 2]; ++G__12509__i;}
G__12508 = new cljs.core.IndexedSeq(G__12509__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__12513 = x;
if(G__12513){
var bit__4409__auto__ = (G__12513.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4409__auto__) || (G__12513.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__12514 = x;
var G__12515 = y;
return goog.array.defaultCompare(G__12514,G__12515);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__12520 = xs;
var G__12521 = ys;
var G__12522 = len;
var G__12523 = (n + (1));
xs = G__12520;
ys = G__12521;
len = G__12522;
n = G__12523;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__12528 = x;
var G__12529 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12528,G__12529) : f.call(null,G__12528,G__12529));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12530 = y;
var G__12531 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12530,G__12531) : f.call(null,G__12530,G__12531));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__12537 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12537) : cljs.core.to_array.call(null,G__12537));
})();
var G__12538_12540 = a;
var G__12539_12541 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__12538_12540,G__12539_12541);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__12547 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12547) : keyfn.call(null,G__12547));
})(),(function (){var G__12548 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12548) : keyfn.call(null,G__12548));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__12554 = f;
var G__12555 = cljs.core.first(s);
var G__12556 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12554,G__12555,G__12556) : cljs.core.reduce.call(null,G__12554,G__12555,G__12556));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__12557 = val__$1;
var G__12558 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12557,G__12558) : f.call(null,G__12557,G__12558));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12559 = nval;
var G__12560 = cljs.core.next(coll__$1);
val__$1 = G__12559;
coll__$1 = G__12560;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__12564 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12564) : cljs.core.to_array.call(null,G__12564));
})();
var G__12565_12567 = a;
goog.array.shuffle(G__12565_12567);

var G__12566 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12566) : cljs.core.vec.call(null,G__12566));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__12570 = coll;
if(G__12570){
var bit__4409__auto__ = (G__12570.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4409__auto__) || (G__12570.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__12571 = coll;
if(G__12571){
var bit__4409__auto__ = (G__12571.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4409__auto__) || (G__12571.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__12580 = null;
var G__12580__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__12580__1 = (function (x){
var G__12577 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12577) : cf.call(null,G__12577));
});
var G__12580__2 = (function (x,y){
var G__12578 = x;
var G__12579 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12578,G__12579) : f.call(null,G__12578,G__12579));
});
G__12580 = function(x,y){
switch(arguments.length){
case 0:
return G__12580__0.call(this);
case 1:
return G__12580__1.call(this,x);
case 2:
return G__12580__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12580.cljs$core$IFn$_invoke$arity$0 = G__12580__0;
G__12580.cljs$core$IFn$_invoke$arity$1 = G__12580__1;
G__12580.cljs$core$IFn$_invoke$arity$2 = G__12580__2;
return G__12580;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__12587 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12587) : xform.call(null,G__12587));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__12588 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12588) : f__$1.call(null,G__12588));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__12589__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__12589 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12590__i = 0, G__12590__a = new Array(arguments.length -  2);
while (G__12590__i < G__12590__a.length) {G__12590__a[G__12590__i] = arguments[G__12590__i + 2]; ++G__12590__i;}
  more = new cljs.core.IndexedSeq(G__12590__a,0);
} 
return G__12589__delegate.call(this,x,y,more);};
G__12589.cljs$lang$maxFixedArity = 2;
G__12589.cljs$lang$applyTo = (function (arglist__12591){
var x = cljs.core.first(arglist__12591);
arglist__12591 = cljs.core.next(arglist__12591);
var y = cljs.core.first(arglist__12591);
var more = cljs.core.rest(arglist__12591);
return G__12589__delegate(x,y,more);
});
G__12589.cljs$core$IFn$_invoke$arity$variadic = G__12589__delegate;
return G__12589;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__12592 = null;
if (arguments.length > 2) {
var G__12593__i = 0, G__12593__a = new Array(arguments.length -  2);
while (G__12593__i < G__12593__a.length) {G__12593__a[G__12593__i] = arguments[G__12593__i + 2]; ++G__12593__i;}
G__12592 = new cljs.core.IndexedSeq(G__12593__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__12594__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__12594 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12595__i = 0, G__12595__a = new Array(arguments.length -  2);
while (G__12595__i < G__12595__a.length) {G__12595__a[G__12595__i] = arguments[G__12595__i + 2]; ++G__12595__i;}
  more = new cljs.core.IndexedSeq(G__12595__a,0);
} 
return G__12594__delegate.call(this,x,y,more);};
G__12594.cljs$lang$maxFixedArity = 2;
G__12594.cljs$lang$applyTo = (function (arglist__12596){
var x = cljs.core.first(arglist__12596);
arglist__12596 = cljs.core.next(arglist__12596);
var y = cljs.core.first(arglist__12596);
var more = cljs.core.rest(arglist__12596);
return G__12594__delegate(x,y,more);
});
G__12594.cljs$core$IFn$_invoke$arity$variadic = G__12594__delegate;
return G__12594;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__12597 = null;
if (arguments.length > 2) {
var G__12598__i = 0, G__12598__a = new Array(arguments.length -  2);
while (G__12598__i < G__12598__a.length) {G__12598__a[G__12598__i] = arguments[G__12598__i + 2]; ++G__12598__i;}
G__12597 = new cljs.core.IndexedSeq(G__12598__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__12599__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__12599 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12600__i = 0, G__12600__a = new Array(arguments.length -  2);
while (G__12600__i < G__12600__a.length) {G__12600__a[G__12600__i] = arguments[G__12600__i + 2]; ++G__12600__i;}
  more = new cljs.core.IndexedSeq(G__12600__a,0);
} 
return G__12599__delegate.call(this,x,y,more);};
G__12599.cljs$lang$maxFixedArity = 2;
G__12599.cljs$lang$applyTo = (function (arglist__12601){
var x = cljs.core.first(arglist__12601);
arglist__12601 = cljs.core.next(arglist__12601);
var y = cljs.core.first(arglist__12601);
var more = cljs.core.rest(arglist__12601);
return G__12599__delegate(x,y,more);
});
G__12599.cljs$core$IFn$_invoke$arity$variadic = G__12599__delegate;
return G__12599;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__12602 = null;
if (arguments.length > 2) {
var G__12603__i = 0, G__12603__a = new Array(arguments.length -  2);
while (G__12603__i < G__12603__a.length) {G__12603__a[G__12603__i] = arguments[G__12603__i + 2]; ++G__12603__i;}
G__12602 = new cljs.core.IndexedSeq(G__12603__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__12608__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12608 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12609__i = 0, G__12609__a = new Array(arguments.length -  2);
while (G__12609__i < G__12609__a.length) {G__12609__a[G__12609__i] = arguments[G__12609__i + 2]; ++G__12609__i;}
  more = new cljs.core.IndexedSeq(G__12609__a,0);
} 
return G__12608__delegate.call(this,x,y,more);};
G__12608.cljs$lang$maxFixedArity = 2;
G__12608.cljs$lang$applyTo = (function (arglist__12610){
var x = cljs.core.first(arglist__12610);
arglist__12610 = cljs.core.next(arglist__12610);
var y = cljs.core.first(arglist__12610);
var more = cljs.core.rest(arglist__12610);
return G__12608__delegate(x,y,more);
});
G__12608.cljs$core$IFn$_invoke$arity$variadic = G__12608__delegate;
return G__12608;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__12611 = null;
if (arguments.length > 2) {
var G__12612__i = 0, G__12612__a = new Array(arguments.length -  2);
while (G__12612__i < G__12612__a.length) {G__12612__a[G__12612__i] = arguments[G__12612__i + 2]; ++G__12612__i;}
G__12611 = new cljs.core.IndexedSeq(G__12612__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12611);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__12613__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__12614 = y;
var G__12615 = cljs.core.first(more);
var G__12616 = cljs.core.next(more);
x = G__12614;
y = G__12615;
more = G__12616;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12613 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12617__i = 0, G__12617__a = new Array(arguments.length -  2);
while (G__12617__i < G__12617__a.length) {G__12617__a[G__12617__i] = arguments[G__12617__i + 2]; ++G__12617__i;}
  more = new cljs.core.IndexedSeq(G__12617__a,0);
} 
return G__12613__delegate.call(this,x,y,more);};
G__12613.cljs$lang$maxFixedArity = 2;
G__12613.cljs$lang$applyTo = (function (arglist__12618){
var x = cljs.core.first(arglist__12618);
arglist__12618 = cljs.core.next(arglist__12618);
var y = cljs.core.first(arglist__12618);
var more = cljs.core.rest(arglist__12618);
return G__12613__delegate(x,y,more);
});
G__12613.cljs$core$IFn$_invoke$arity$variadic = G__12613__delegate;
return G__12613;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__12619 = null;
if (arguments.length > 2) {
var G__12620__i = 0, G__12620__a = new Array(arguments.length -  2);
while (G__12620__i < G__12620__a.length) {G__12620__a[G__12620__i] = arguments[G__12620__i + 2]; ++G__12620__i;}
G__12619 = new cljs.core.IndexedSeq(G__12620__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__12621__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__12622 = y;
var G__12623 = cljs.core.first(more);
var G__12624 = cljs.core.next(more);
x = G__12622;
y = G__12623;
more = G__12624;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12621 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12625__i = 0, G__12625__a = new Array(arguments.length -  2);
while (G__12625__i < G__12625__a.length) {G__12625__a[G__12625__i] = arguments[G__12625__i + 2]; ++G__12625__i;}
  more = new cljs.core.IndexedSeq(G__12625__a,0);
} 
return G__12621__delegate.call(this,x,y,more);};
G__12621.cljs$lang$maxFixedArity = 2;
G__12621.cljs$lang$applyTo = (function (arglist__12626){
var x = cljs.core.first(arglist__12626);
arglist__12626 = cljs.core.next(arglist__12626);
var y = cljs.core.first(arglist__12626);
var more = cljs.core.rest(arglist__12626);
return G__12621__delegate(x,y,more);
});
G__12621.cljs$core$IFn$_invoke$arity$variadic = G__12621__delegate;
return G__12621;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__12627 = null;
if (arguments.length > 2) {
var G__12628__i = 0, G__12628__a = new Array(arguments.length -  2);
while (G__12628__i < G__12628__a.length) {G__12628__a[G__12628__i] = arguments[G__12628__i + 2]; ++G__12628__i;}
G__12627 = new cljs.core.IndexedSeq(G__12628__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__12629__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__12630 = y;
var G__12631 = cljs.core.first(more);
var G__12632 = cljs.core.next(more);
x = G__12630;
y = G__12631;
more = G__12632;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12629 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12633__i = 0, G__12633__a = new Array(arguments.length -  2);
while (G__12633__i < G__12633__a.length) {G__12633__a[G__12633__i] = arguments[G__12633__i + 2]; ++G__12633__i;}
  more = new cljs.core.IndexedSeq(G__12633__a,0);
} 
return G__12629__delegate.call(this,x,y,more);};
G__12629.cljs$lang$maxFixedArity = 2;
G__12629.cljs$lang$applyTo = (function (arglist__12634){
var x = cljs.core.first(arglist__12634);
arglist__12634 = cljs.core.next(arglist__12634);
var y = cljs.core.first(arglist__12634);
var more = cljs.core.rest(arglist__12634);
return G__12629__delegate(x,y,more);
});
G__12629.cljs$core$IFn$_invoke$arity$variadic = G__12629__delegate;
return G__12629;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__12635 = null;
if (arguments.length > 2) {
var G__12636__i = 0, G__12636__a = new Array(arguments.length -  2);
while (G__12636__i < G__12636__a.length) {G__12636__a[G__12636__i] = arguments[G__12636__i + 2]; ++G__12636__i;}
G__12635 = new cljs.core.IndexedSeq(G__12636__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__12637__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__12638 = y;
var G__12639 = cljs.core.first(more);
var G__12640 = cljs.core.next(more);
x = G__12638;
y = G__12639;
more = G__12640;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12637 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12641__i = 0, G__12641__a = new Array(arguments.length -  2);
while (G__12641__i < G__12641__a.length) {G__12641__a[G__12641__i] = arguments[G__12641__i + 2]; ++G__12641__i;}
  more = new cljs.core.IndexedSeq(G__12641__a,0);
} 
return G__12637__delegate.call(this,x,y,more);};
G__12637.cljs$lang$maxFixedArity = 2;
G__12637.cljs$lang$applyTo = (function (arglist__12642){
var x = cljs.core.first(arglist__12642);
arglist__12642 = cljs.core.next(arglist__12642);
var y = cljs.core.first(arglist__12642);
var more = cljs.core.rest(arglist__12642);
return G__12637__delegate(x,y,more);
});
G__12637.cljs$core$IFn$_invoke$arity$variadic = G__12637__delegate;
return G__12637;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__12643 = null;
if (arguments.length > 2) {
var G__12644__i = 0, G__12644__a = new Array(arguments.length -  2);
while (G__12644__i < G__12644__a.length) {G__12644__a[G__12644__i] = arguments[G__12644__i + 2]; ++G__12644__i;}
G__12643 = new cljs.core.IndexedSeq(G__12644__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4052__auto__ = x;
var y__4053__auto__ = y;
return ((x__4052__auto__ > y__4053__auto__) ? x__4052__auto__ : y__4053__auto__);
});
var max__3 = (function() { 
var G__12645__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4052__auto__ = x;
var y__4053__auto__ = y;
return ((x__4052__auto__ > y__4053__auto__) ? x__4052__auto__ : y__4053__auto__);
})(),more);
};
var G__12645 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12646__i = 0, G__12646__a = new Array(arguments.length -  2);
while (G__12646__i < G__12646__a.length) {G__12646__a[G__12646__i] = arguments[G__12646__i + 2]; ++G__12646__i;}
  more = new cljs.core.IndexedSeq(G__12646__a,0);
} 
return G__12645__delegate.call(this,x,y,more);};
G__12645.cljs$lang$maxFixedArity = 2;
G__12645.cljs$lang$applyTo = (function (arglist__12647){
var x = cljs.core.first(arglist__12647);
arglist__12647 = cljs.core.next(arglist__12647);
var y = cljs.core.first(arglist__12647);
var more = cljs.core.rest(arglist__12647);
return G__12645__delegate(x,y,more);
});
G__12645.cljs$core$IFn$_invoke$arity$variadic = G__12645__delegate;
return G__12645;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__12648 = null;
if (arguments.length > 2) {
var G__12649__i = 0, G__12649__a = new Array(arguments.length -  2);
while (G__12649__i < G__12649__a.length) {G__12649__a[G__12649__i] = arguments[G__12649__i + 2]; ++G__12649__i;}
G__12648 = new cljs.core.IndexedSeq(G__12649__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4059__auto__ = x;
var y__4060__auto__ = y;
return ((x__4059__auto__ < y__4060__auto__) ? x__4059__auto__ : y__4060__auto__);
});
var min__3 = (function() { 
var G__12650__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4059__auto__ = x;
var y__4060__auto__ = y;
return ((x__4059__auto__ < y__4060__auto__) ? x__4059__auto__ : y__4060__auto__);
})(),more);
};
var G__12650 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12651__i = 0, G__12651__a = new Array(arguments.length -  2);
while (G__12651__i < G__12651__a.length) {G__12651__a[G__12651__i] = arguments[G__12651__i + 2]; ++G__12651__i;}
  more = new cljs.core.IndexedSeq(G__12651__a,0);
} 
return G__12650__delegate.call(this,x,y,more);};
G__12650.cljs$lang$maxFixedArity = 2;
G__12650.cljs$lang$applyTo = (function (arglist__12652){
var x = cljs.core.first(arglist__12652);
arglist__12652 = cljs.core.next(arglist__12652);
var y = cljs.core.first(arglist__12652);
var more = cljs.core.rest(arglist__12652);
return G__12650__delegate(x,y,more);
});
G__12650.cljs$core$IFn$_invoke$arity$variadic = G__12650__delegate;
return G__12650;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__12653 = null;
if (arguments.length > 2) {
var G__12654__i = 0, G__12654__a = new Array(arguments.length -  2);
while (G__12654__i < G__12654__a.length) {G__12654__a[G__12654__i] = arguments[G__12654__i + 2]; ++G__12654__i;}
G__12653 = new cljs.core.IndexedSeq(G__12654__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__12655__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__12655 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12656__i = 0, G__12656__a = new Array(arguments.length -  2);
while (G__12656__i < G__12656__a.length) {G__12656__a[G__12656__i] = arguments[G__12656__i + 2]; ++G__12656__i;}
  more = new cljs.core.IndexedSeq(G__12656__a,0);
} 
return G__12655__delegate.call(this,x,y,more);};
G__12655.cljs$lang$maxFixedArity = 2;
G__12655.cljs$lang$applyTo = (function (arglist__12657){
var x = cljs.core.first(arglist__12657);
arglist__12657 = cljs.core.next(arglist__12657);
var y = cljs.core.first(arglist__12657);
var more = cljs.core.rest(arglist__12657);
return G__12655__delegate(x,y,more);
});
G__12655.cljs$core$IFn$_invoke$arity$variadic = G__12655__delegate;
return G__12655;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__12658 = null;
if (arguments.length > 2) {
var G__12659__i = 0, G__12659__a = new Array(arguments.length -  2);
while (G__12659__i < G__12659__a.length) {G__12659__a[G__12659__i] = arguments[G__12659__i + 2]; ++G__12659__i;}
G__12658 = new cljs.core.IndexedSeq(G__12659__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12658);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__12660__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__12660 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12661__i = 0, G__12661__a = new Array(arguments.length -  2);
while (G__12661__i < G__12661__a.length) {G__12661__a[G__12661__i] = arguments[G__12661__i + 2]; ++G__12661__i;}
  more = new cljs.core.IndexedSeq(G__12661__a,0);
} 
return G__12660__delegate.call(this,x,y,more);};
G__12660.cljs$lang$maxFixedArity = 2;
G__12660.cljs$lang$applyTo = (function (arglist__12662){
var x = cljs.core.first(arglist__12662);
arglist__12662 = cljs.core.next(arglist__12662);
var y = cljs.core.first(arglist__12662);
var more = cljs.core.rest(arglist__12662);
return G__12660__delegate(x,y,more);
});
G__12660.cljs$core$IFn$_invoke$arity$variadic = G__12660__delegate;
return G__12660;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__12663 = null;
if (arguments.length > 2) {
var G__12664__i = 0, G__12664__a = new Array(arguments.length -  2);
while (G__12664__i < G__12664__a.length) {G__12664__a[G__12664__i] = arguments[G__12664__i + 2]; ++G__12664__i;}
G__12663 = new cljs.core.IndexedSeq(G__12664__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__12669__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12669 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12670__i = 0, G__12670__a = new Array(arguments.length -  2);
while (G__12670__i < G__12670__a.length) {G__12670__a[G__12670__i] = arguments[G__12670__i + 2]; ++G__12670__i;}
  more = new cljs.core.IndexedSeq(G__12670__a,0);
} 
return G__12669__delegate.call(this,x,y,more);};
G__12669.cljs$lang$maxFixedArity = 2;
G__12669.cljs$lang$applyTo = (function (arglist__12671){
var x = cljs.core.first(arglist__12671);
arglist__12671 = cljs.core.next(arglist__12671);
var y = cljs.core.first(arglist__12671);
var more = cljs.core.rest(arglist__12671);
return G__12669__delegate(x,y,more);
});
G__12669.cljs$core$IFn$_invoke$arity$variadic = G__12669__delegate;
return G__12669;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__12672 = null;
if (arguments.length > 2) {
var G__12673__i = 0, G__12673__a = new Array(arguments.length -  2);
while (G__12673__i < G__12673__a.length) {G__12673__a[G__12673__i] = arguments[G__12673__i + 2]; ++G__12673__i;}
G__12672 = new cljs.core.IndexedSeq(G__12673__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__12674__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__12674 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12675__i = 0, G__12675__a = new Array(arguments.length -  2);
while (G__12675__i < G__12675__a.length) {G__12675__a[G__12675__i] = arguments[G__12675__i + 2]; ++G__12675__i;}
  more = new cljs.core.IndexedSeq(G__12675__a,0);
} 
return G__12674__delegate.call(this,x,y,more);};
G__12674.cljs$lang$maxFixedArity = 2;
G__12674.cljs$lang$applyTo = (function (arglist__12676){
var x = cljs.core.first(arglist__12676);
arglist__12676 = cljs.core.next(arglist__12676);
var y = cljs.core.first(arglist__12676);
var more = cljs.core.rest(arglist__12676);
return G__12674__delegate(x,y,more);
});
G__12674.cljs$core$IFn$_invoke$arity$variadic = G__12674__delegate;
return G__12674;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__12677 = null;
if (arguments.length > 2) {
var G__12678__i = 0, G__12678__a = new Array(arguments.length -  2);
while (G__12678__i < G__12678__a.length) {G__12678__a[G__12678__i] = arguments[G__12678__i + 2]; ++G__12678__i;}
G__12677 = new cljs.core.IndexedSeq(G__12678__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__12679__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__12679 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12680__i = 0, G__12680__a = new Array(arguments.length -  2);
while (G__12680__i < G__12680__a.length) {G__12680__a[G__12680__i] = arguments[G__12680__i + 2]; ++G__12680__i;}
  more = new cljs.core.IndexedSeq(G__12680__a,0);
} 
return G__12679__delegate.call(this,x,y,more);};
G__12679.cljs$lang$maxFixedArity = 2;
G__12679.cljs$lang$applyTo = (function (arglist__12681){
var x = cljs.core.first(arglist__12681);
arglist__12681 = cljs.core.next(arglist__12681);
var y = cljs.core.first(arglist__12681);
var more = cljs.core.rest(arglist__12681);
return G__12679__delegate(x,y,more);
});
G__12679.cljs$core$IFn$_invoke$arity$variadic = G__12679__delegate;
return G__12679;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__12682 = null;
if (arguments.length > 2) {
var G__12683__i = 0, G__12683__a = new Array(arguments.length -  2);
while (G__12683__i < G__12683__a.length) {G__12683__a[G__12683__i] = arguments[G__12683__i + 2]; ++G__12683__i;}
G__12682 = new cljs.core.IndexedSeq(G__12683__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__12686 = x;
var G__12687 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12686,G__12687) : cljs.core.mod.call(null,G__12686,G__12687));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__12688__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__12688 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12689__i = 0, G__12689__a = new Array(arguments.length -  2);
while (G__12689__i < G__12689__a.length) {G__12689__a[G__12689__i] = arguments[G__12689__i + 2]; ++G__12689__i;}
  more = new cljs.core.IndexedSeq(G__12689__a,0);
} 
return G__12688__delegate.call(this,x,y,more);};
G__12688.cljs$lang$maxFixedArity = 2;
G__12688.cljs$lang$applyTo = (function (arglist__12690){
var x = cljs.core.first(arglist__12690);
arglist__12690 = cljs.core.next(arglist__12690);
var y = cljs.core.first(arglist__12690);
var more = cljs.core.rest(arglist__12690);
return G__12688__delegate(x,y,more);
});
G__12688.cljs$core$IFn$_invoke$arity$variadic = G__12688__delegate;
return G__12688;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__12691 = null;
if (arguments.length > 2) {
var G__12692__i = 0, G__12692__a = new Array(arguments.length -  2);
while (G__12692__i < G__12692__a.length) {G__12692__a[G__12692__i] = arguments[G__12692__i + 2]; ++G__12692__i;}
G__12691 = new cljs.core.IndexedSeq(G__12692__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__12693__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__12693 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12694__i = 0, G__12694__a = new Array(arguments.length -  2);
while (G__12694__i < G__12694__a.length) {G__12694__a[G__12694__i] = arguments[G__12694__i + 2]; ++G__12694__i;}
  more = new cljs.core.IndexedSeq(G__12694__a,0);
} 
return G__12693__delegate.call(this,x,y,more);};
G__12693.cljs$lang$maxFixedArity = 2;
G__12693.cljs$lang$applyTo = (function (arglist__12695){
var x = cljs.core.first(arglist__12695);
arglist__12695 = cljs.core.next(arglist__12695);
var y = cljs.core.first(arglist__12695);
var more = cljs.core.rest(arglist__12695);
return G__12693__delegate(x,y,more);
});
G__12693.cljs$core$IFn$_invoke$arity$variadic = G__12693__delegate;
return G__12693;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__12696 = null;
if (arguments.length > 2) {
var G__12697__i = 0, G__12697__a = new Array(arguments.length -  2);
while (G__12697__i < G__12697__a.length) {G__12697__a[G__12697__i] = arguments[G__12697__i + 2]; ++G__12697__i;}
G__12696 = new cljs.core.IndexedSeq(G__12697__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__12700 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12700) : Math.floor.call(null,G__12700));
} else {
var G__12701 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12701) : Math.ceil.call(null,G__12701));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__12702__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__12702 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12703__i = 0, G__12703__a = new Array(arguments.length -  2);
while (G__12703__i < G__12703__a.length) {G__12703__a[G__12703__i] = arguments[G__12703__i + 2]; ++G__12703__i;}
  more = new cljs.core.IndexedSeq(G__12703__a,0);
} 
return G__12702__delegate.call(this,x,y,more);};
G__12702.cljs$lang$maxFixedArity = 2;
G__12702.cljs$lang$applyTo = (function (arglist__12704){
var x = cljs.core.first(arglist__12704);
arglist__12704 = cljs.core.next(arglist__12704);
var y = cljs.core.first(arglist__12704);
var more = cljs.core.rest(arglist__12704);
return G__12702__delegate(x,y,more);
});
G__12702.cljs$core$IFn$_invoke$arity$variadic = G__12702__delegate;
return G__12702;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__12705 = null;
if (arguments.length > 2) {
var G__12706__i = 0, G__12706__a = new Array(arguments.length -  2);
while (G__12706__i < G__12706__a.length) {G__12706__a[G__12706__i] = arguments[G__12706__i + 2]; ++G__12706__i;}
G__12705 = new cljs.core.IndexedSeq(G__12706__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__12707__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__12707 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12708__i = 0, G__12708__a = new Array(arguments.length -  2);
while (G__12708__i < G__12708__a.length) {G__12708__a[G__12708__i] = arguments[G__12708__i + 2]; ++G__12708__i;}
  more = new cljs.core.IndexedSeq(G__12708__a,0);
} 
return G__12707__delegate.call(this,x,y,more);};
G__12707.cljs$lang$maxFixedArity = 2;
G__12707.cljs$lang$applyTo = (function (arglist__12709){
var x = cljs.core.first(arglist__12709);
arglist__12709 = cljs.core.next(arglist__12709);
var y = cljs.core.first(arglist__12709);
var more = cljs.core.rest(arglist__12709);
return G__12707__delegate(x,y,more);
});
G__12707.cljs$core$IFn$_invoke$arity$variadic = G__12707__delegate;
return G__12707;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__12710 = null;
if (arguments.length > 2) {
var G__12711__i = 0, G__12711__a = new Array(arguments.length -  2);
while (G__12711__i < G__12711__a.length) {G__12711__a[G__12711__i] = arguments[G__12711__i + 2]; ++G__12711__i;}
G__12710 = new cljs.core.IndexedSeq(G__12711__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__12712__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__12712 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12713__i = 0, G__12713__a = new Array(arguments.length -  2);
while (G__12713__i < G__12713__a.length) {G__12713__a[G__12713__i] = arguments[G__12713__i + 2]; ++G__12713__i;}
  more = new cljs.core.IndexedSeq(G__12713__a,0);
} 
return G__12712__delegate.call(this,x,y,more);};
G__12712.cljs$lang$maxFixedArity = 2;
G__12712.cljs$lang$applyTo = (function (arglist__12714){
var x = cljs.core.first(arglist__12714);
arglist__12714 = cljs.core.next(arglist__12714);
var y = cljs.core.first(arglist__12714);
var more = cljs.core.rest(arglist__12714);
return G__12712__delegate(x,y,more);
});
G__12712.cljs$core$IFn$_invoke$arity$variadic = G__12712__delegate;
return G__12712;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__12715 = null;
if (arguments.length > 2) {
var G__12716__i = 0, G__12716__a = new Array(arguments.length -  2);
while (G__12716__i < G__12716__a.length) {G__12716__a[G__12716__i] = arguments[G__12716__i + 2]; ++G__12716__i;}
G__12715 = new cljs.core.IndexedSeq(G__12716__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__12717__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__12717 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12718__i = 0, G__12718__a = new Array(arguments.length -  2);
while (G__12718__i < G__12718__a.length) {G__12718__a[G__12718__i] = arguments[G__12718__i + 2]; ++G__12718__i;}
  more = new cljs.core.IndexedSeq(G__12718__a,0);
} 
return G__12717__delegate.call(this,x,y,more);};
G__12717.cljs$lang$maxFixedArity = 2;
G__12717.cljs$lang$applyTo = (function (arglist__12719){
var x = cljs.core.first(arglist__12719);
arglist__12719 = cljs.core.next(arglist__12719);
var y = cljs.core.first(arglist__12719);
var more = cljs.core.rest(arglist__12719);
return G__12717__delegate(x,y,more);
});
G__12717.cljs$core$IFn$_invoke$arity$variadic = G__12717__delegate;
return G__12717;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__12720 = null;
if (arguments.length > 2) {
var G__12721__i = 0, G__12721__a = new Array(arguments.length -  2);
while (G__12721__i < G__12721__a.length) {G__12721__a[G__12721__i] = arguments[G__12721__i + 2]; ++G__12721__i;}
G__12720 = new cljs.core.IndexedSeq(G__12721__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__12726__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12727 = y;
var G__12728 = cljs.core.first(more);
var G__12729 = cljs.core.next(more);
x = G__12727;
y = G__12728;
more = G__12729;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12726 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12730__i = 0, G__12730__a = new Array(arguments.length -  2);
while (G__12730__i < G__12730__a.length) {G__12730__a[G__12730__i] = arguments[G__12730__i + 2]; ++G__12730__i;}
  more = new cljs.core.IndexedSeq(G__12730__a,0);
} 
return G__12726__delegate.call(this,x,y,more);};
G__12726.cljs$lang$maxFixedArity = 2;
G__12726.cljs$lang$applyTo = (function (arglist__12731){
var x = cljs.core.first(arglist__12731);
arglist__12731 = cljs.core.next(arglist__12731);
var y = cljs.core.first(arglist__12731);
var more = cljs.core.rest(arglist__12731);
return G__12726__delegate(x,y,more);
});
G__12726.cljs$core$IFn$_invoke$arity$variadic = G__12726__delegate;
return G__12726;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__12732 = null;
if (arguments.length > 2) {
var G__12733__i = 0, G__12733__a = new Array(arguments.length -  2);
while (G__12733__i < G__12733__a.length) {G__12733__a[G__12733__i] = arguments[G__12733__i + 2]; ++G__12733__i;}
G__12732 = new cljs.core.IndexedSeq(G__12733__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__12734 = (n__$1 - (1));
var G__12735 = cljs.core.next(xs);
n__$1 = G__12734;
xs = G__12735;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__12739 = x;
return goog.string.buildString(G__12739);
}
});
var str__2 = (function() { 
var G__12740__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__12741 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__12742 = cljs.core.next(more);
sb = G__12741;
more = G__12742;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__12740 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__12743__i = 0, G__12743__a = new Array(arguments.length -  1);
while (G__12743__i < G__12743__a.length) {G__12743__a[G__12743__i] = arguments[G__12743__i + 1]; ++G__12743__i;}
  ys = new cljs.core.IndexedSeq(G__12743__a,0);
} 
return G__12740__delegate.call(this,x,ys);};
G__12740.cljs$lang$maxFixedArity = 1;
G__12740.cljs$lang$applyTo = (function (arglist__12744){
var x = cljs.core.first(arglist__12744);
var ys = cljs.core.rest(arglist__12744);
return G__12740__delegate(x,ys);
});
G__12740.cljs$core$IFn$_invoke$arity$variadic = G__12740__delegate;
return G__12740;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__12745 = null;
if (arguments.length > 1) {
var G__12746__i = 0, G__12746__a = new Array(arguments.length -  1);
while (G__12746__i < G__12746__a.length) {G__12746__a[G__12746__i] = arguments[G__12746__i + 1]; ++G__12746__i;}
G__12745 = new cljs.core.IndexedSeq(G__12746__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12747 = cljs.core.next(xs);
var G__12748 = cljs.core.next(ys);
xs = G__12747;
ys = G__12748;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12749 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12750 = cljs.core.next(s);
res = G__12749;
s = G__12750;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12755 = ((h + (cljs.core.hash((function (){var G__12753 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12753) : cljs.core.key.call(null,G__12753));
})()) ^ cljs.core.hash((function (){var G__12754 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12754) : cljs.core.val.call(null,G__12754));
})()))) % (4503599627370496));
var G__12756 = cljs.core.next(s);
h = G__12755;
s = G__12756;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12757 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12758 = cljs.core.next(s__$1);
h = G__12757;
s__$1 = G__12758;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12769_12779 = cljs.core.seq(fn_map);
var chunk__12770_12780 = null;
var count__12771_12781 = (0);
var i__12772_12782 = (0);
while(true){
if((i__12772_12782 < count__12771_12781)){
var vec__12773_12783 = chunk__12770_12780.cljs$core$IIndexed$_nth$arity$2(null,i__12772_12782);
var key_name_12784 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12773_12783,(0),null);
var f_12785 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12773_12783,(1),null);
var str_name_12786 = (function (){var G__12774 = key_name_12784;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12774) : cljs.core.name.call(null,G__12774));
})();
(obj[str_name_12786] = f_12785);

var G__12787 = seq__12769_12779;
var G__12788 = chunk__12770_12780;
var G__12789 = count__12771_12781;
var G__12790 = (i__12772_12782 + (1));
seq__12769_12779 = G__12787;
chunk__12770_12780 = G__12788;
count__12771_12781 = G__12789;
i__12772_12782 = G__12790;
continue;
} else {
var temp__4126__auto___12791 = cljs.core.seq(seq__12769_12779);
if(temp__4126__auto___12791){
var seq__12769_12792__$1 = temp__4126__auto___12791;
if(cljs.core.chunked_seq_QMARK_(seq__12769_12792__$1)){
var c__4522__auto___12793 = (function (){var G__12775 = seq__12769_12792__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12775) : cljs.core.chunk_first.call(null,G__12775));
})();
var G__12794 = (function (){var G__12776 = seq__12769_12792__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12776) : cljs.core.chunk_rest.call(null,G__12776));
})();
var G__12795 = c__4522__auto___12793;
var G__12796 = cljs.core.count(c__4522__auto___12793);
var G__12797 = (0);
seq__12769_12779 = G__12794;
chunk__12770_12780 = G__12795;
count__12771_12781 = G__12796;
i__12772_12782 = G__12797;
continue;
} else {
var vec__12777_12798 = cljs.core.first(seq__12769_12792__$1);
var key_name_12799 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12777_12798,(0),null);
var f_12800 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12777_12798,(1),null);
var str_name_12801 = (function (){var G__12778 = key_name_12799;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12778) : cljs.core.name.call(null,G__12778));
})();
(obj[str_name_12801] = f_12800);

var G__12802 = cljs.core.next(seq__12769_12792__$1);
var G__12803 = null;
var G__12804 = (0);
var G__12805 = (0);
seq__12769_12779 = G__12802;
chunk__12770_12780 = G__12803;
count__12771_12781 = G__12804;
i__12772_12782 = G__12805;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12807 = coll;
if(G__12807){
var bit__4416__auto__ = (G__12807.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4416__auto__) || (G__12807.cljs$core$IReversible$)){
return true;
} else {
if((!G__12807.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12807);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12807);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12808 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12808;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12809 = (i - (1));
var G__12810 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12809;
r = G__12810;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12811__i = 0, G__12811__a = new Array(arguments.length -  0);
while (G__12811__i < G__12811__a.length) {G__12811__a[G__12811__i] = arguments[G__12811__i + 0]; ++G__12811__i;}
  xs = new cljs.core.IndexedSeq(G__12811__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12812){
var xs = cljs.core.seq(arglist__12812);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3735__auto__ = (coll == null);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var G__12816 = coll;
if(G__12816){
var bit__4409__auto__ = (G__12816.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4409__auto__) || (G__12816.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12818 = x;
if(G__12818){
var bit__4416__auto__ = (G__12818.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4416__auto__) || (G__12818.cljs$core$IList$)){
return true;
} else {
if((!G__12818.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12818);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3723__auto__ = cljs.core.not(a.ns);
if(and__3723__auto__){
return b.ns;
} else {
return and__3723__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12825 = a.ns;
var G__12826 = b.ns;
return goog.array.defaultCompare(G__12825,G__12826);
})();
if(((0) === nsc)){
var G__12827 = a.name;
var G__12828 = b.name;
return goog.array.defaultCompare(G__12827,G__12828);
} else {
return nsc;
}
}
} else {
var G__12829 = a.name;
var G__12830 = b.name;
return goog.array.defaultCompare(G__12829,G__12830);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4156__auto__ = self__._hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12832 = null;
var G__12832__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12832__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12832 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12832__2.call(this,self__,coll);
case 3:
return G__12832__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12832.cljs$core$IFn$_invoke$arity$2 = G__12832__2;
G__12832.cljs$core$IFn$_invoke$arity$3 = G__12832__3;
return G__12832;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12831){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12831)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__12834 = x;
if(G__12834){
var bit__4409__auto__ = (G__12834.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4409__auto__) || (G__12834.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12836 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12836) : cljs.core.name.call(null,G__12836));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12837 = ls.sval();
ls = G__12837;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12839 = s;
if(G__12839){
var bit__4409__auto__ = (G__12839.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4409__auto__) || (G__12839.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12840 = cljs.core.next(s__$1);
s__$1 = G__12840;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12841 = (0);
var xs_12842 = cljs.core.seq(coll);
while(true){
if(xs_12842){
(ret[i_12841] = cljs.core.to_array(cljs.core.first(xs_12842)));

var G__12843 = (i_12841 + (1));
var G__12844 = cljs.core.next(xs_12842);
i_12841 = G__12843;
xs_12842 = G__12844;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12847 = (i + (1));
var G__12848 = cljs.core.next(s__$1);
i = G__12847;
s__$1 = G__12848;
continue;
} else {
return a;
}
break;
}
} else {
var n__4622__auto___12849 = size;
var i_12850 = (0);
while(true){
if((i_12850 < n__4622__auto___12849)){
(a[i_12850] = init_val_or_seq);

var G__12851 = (i_12850 + (1));
i_12850 = G__12851;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12854 = (i + (1));
var G__12855 = cljs.core.next(s__$1);
i = G__12854;
s__$1 = G__12855;
continue;
} else {
return a;
}
break;
}
} else {
var n__4622__auto___12856 = size;
var i_12857 = (0);
while(true){
if((i_12857 < n__4622__auto___12856)){
(a[i_12857] = init_val_or_seq);

var G__12858 = (i_12857 + (1));
i_12857 = G__12858;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12861 = (i + (1));
var G__12862 = cljs.core.next(s__$1);
i = G__12861;
s__$1 = G__12862;
continue;
} else {
return a;
}
break;
}
} else {
var n__4622__auto___12863 = size;
var i_12864 = (0);
while(true){
if((i_12864 < n__4622__auto___12863)){
(a[i_12864] = init_val_or_seq);

var G__12865 = (i_12864 + (1));
i_12864 = G__12865;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12868 = (i + (1));
var G__12869 = cljs.core.next(s__$1);
i = G__12868;
s__$1 = G__12869;
continue;
} else {
return a;
}
break;
}
} else {
var n__4622__auto___12870 = size;
var i_12871 = (0);
while(true){
if((i_12871 < n__4622__auto___12870)){
(a[i_12871] = init_val_or_seq);

var G__12872 = (i_12871 + (1));
i_12871 = G__12872;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__12873 = cljs.core.next(s__$1);
var G__12874 = (i - (1));
var G__12875 = (sum + (1));
s__$1 = G__12873;
i = G__12874;
sum = G__12875;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__12895__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__12895 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12896__i = 0, G__12896__a = new Array(arguments.length -  2);
while (G__12896__i < G__12896__a.length) {G__12896__a[G__12896__i] = arguments[G__12896__i + 2]; ++G__12896__i;}
  zs = new cljs.core.IndexedSeq(G__12896__a,0);
} 
return G__12895__delegate.call(this,x,y,zs);};
G__12895.cljs$lang$maxFixedArity = 2;
G__12895.cljs$lang$applyTo = (function (arglist__12897){
var x = cljs.core.first(arglist__12897);
arglist__12897 = cljs.core.next(arglist__12897);
var y = cljs.core.first(arglist__12897);
var zs = cljs.core.rest(arglist__12897);
return G__12895__delegate(x,y,zs);
});
G__12895.cljs$core$IFn$_invoke$arity$variadic = G__12895__delegate;
return G__12895;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__12898 = null;
if (arguments.length > 2) {
var G__12899__i = 0, G__12899__a = new Array(arguments.length -  2);
while (G__12899__i < G__12899__a.length) {G__12899__a[G__12899__i] = arguments[G__12899__i + 2]; ++G__12899__i;}
G__12898 = new cljs.core.IndexedSeq(G__12899__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__12900__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__12900 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__12901__i = 0, G__12901__a = new Array(arguments.length -  4);
while (G__12901__i < G__12901__a.length) {G__12901__a[G__12901__i] = arguments[G__12901__i + 4]; ++G__12901__i;}
  more = new cljs.core.IndexedSeq(G__12901__a,0);
} 
return G__12900__delegate.call(this,a,b,c,d,more);};
G__12900.cljs$lang$maxFixedArity = 4;
G__12900.cljs$lang$applyTo = (function (arglist__12902){
var a = cljs.core.first(arglist__12902);
arglist__12902 = cljs.core.next(arglist__12902);
var b = cljs.core.first(arglist__12902);
arglist__12902 = cljs.core.next(arglist__12902);
var c = cljs.core.first(arglist__12902);
arglist__12902 = cljs.core.next(arglist__12902);
var d = cljs.core.first(arglist__12902);
var more = cljs.core.rest(arglist__12902);
return G__12900__delegate(a,b,c,d,more);
});
G__12900.cljs$core$IFn$_invoke$arity$variadic = G__12900__delegate;
return G__12900;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__12903 = null;
if (arguments.length > 4) {
var G__12904__i = 0, G__12904__a = new Array(arguments.length -  4);
while (G__12904__i < G__12904__a.length) {G__12904__a[G__12904__i] = arguments[G__12904__i + 4]; ++G__12904__i;}
G__12903 = new cljs.core.IndexedSeq(G__12904__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__12903);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__12905__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12906 = ntcoll;
var G__12907 = cljs.core.first(vals);
var G__12908 = cljs.core.next(vals);
tcoll = G__12906;
val = G__12907;
vals = G__12908;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12905 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12909__i = 0, G__12909__a = new Array(arguments.length -  2);
while (G__12909__i < G__12909__a.length) {G__12909__a[G__12909__i] = arguments[G__12909__i + 2]; ++G__12909__i;}
  vals = new cljs.core.IndexedSeq(G__12909__a,0);
} 
return G__12905__delegate.call(this,tcoll,val,vals);};
G__12905.cljs$lang$maxFixedArity = 2;
G__12905.cljs$lang$applyTo = (function (arglist__12910){
var tcoll = cljs.core.first(arglist__12910);
arglist__12910 = cljs.core.next(arglist__12910);
var val = cljs.core.first(arglist__12910);
var vals = cljs.core.rest(arglist__12910);
return G__12905__delegate(tcoll,val,vals);
});
G__12905.cljs$core$IFn$_invoke$arity$variadic = G__12905__delegate;
return G__12905;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__12911 = null;
if (arguments.length > 2) {
var G__12912__i = 0, G__12912__a = new Array(arguments.length -  2);
while (G__12912__i < G__12912__a.length) {G__12912__a[G__12912__i] = arguments[G__12912__i + 2]; ++G__12912__i;}
G__12911 = new cljs.core.IndexedSeq(G__12912__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__12913__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__12914 = ntcoll;
var G__12915 = cljs.core.first(kvs);
var G__12916 = cljs.core.second(kvs);
var G__12917 = cljs.core.nnext(kvs);
tcoll = G__12914;
key = G__12915;
val = G__12916;
kvs = G__12917;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12913 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12918__i = 0, G__12918__a = new Array(arguments.length -  3);
while (G__12918__i < G__12918__a.length) {G__12918__a[G__12918__i] = arguments[G__12918__i + 3]; ++G__12918__i;}
  kvs = new cljs.core.IndexedSeq(G__12918__a,0);
} 
return G__12913__delegate.call(this,tcoll,key,val,kvs);};
G__12913.cljs$lang$maxFixedArity = 3;
G__12913.cljs$lang$applyTo = (function (arglist__12919){
var tcoll = cljs.core.first(arglist__12919);
arglist__12919 = cljs.core.next(arglist__12919);
var key = cljs.core.first(arglist__12919);
arglist__12919 = cljs.core.next(arglist__12919);
var val = cljs.core.first(arglist__12919);
var kvs = cljs.core.rest(arglist__12919);
return G__12913__delegate(tcoll,key,val,kvs);
});
G__12913.cljs$core$IFn$_invoke$arity$variadic = G__12913__delegate;
return G__12913;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__12920 = null;
if (arguments.length > 3) {
var G__12921__i = 0, G__12921__a = new Array(arguments.length -  3);
while (G__12921__i < G__12921__a.length) {G__12921__a[G__12921__i] = arguments[G__12921__i + 3]; ++G__12921__i;}
G__12920 = new cljs.core.IndexedSeq(G__12921__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__12920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__12922__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__12923 = ntcoll;
var G__12924 = cljs.core.first(ks);
var G__12925 = cljs.core.next(ks);
tcoll = G__12923;
key = G__12924;
ks = G__12925;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12922 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12926__i = 0, G__12926__a = new Array(arguments.length -  2);
while (G__12926__i < G__12926__a.length) {G__12926__a[G__12926__i] = arguments[G__12926__i + 2]; ++G__12926__i;}
  ks = new cljs.core.IndexedSeq(G__12926__a,0);
} 
return G__12922__delegate.call(this,tcoll,key,ks);};
G__12922.cljs$lang$maxFixedArity = 2;
G__12922.cljs$lang$applyTo = (function (arglist__12927){
var tcoll = cljs.core.first(arglist__12927);
arglist__12927 = cljs.core.next(arglist__12927);
var key = cljs.core.first(arglist__12927);
var ks = cljs.core.rest(arglist__12927);
return G__12922__delegate(tcoll,key,ks);
});
G__12922.cljs$core$IFn$_invoke$arity$variadic = G__12922__delegate;
return G__12922;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__12928 = null;
if (arguments.length > 2) {
var G__12929__i = 0, G__12929__a = new Array(arguments.length -  2);
while (G__12929__i < G__12929__a.length) {G__12929__a[G__12929__i] = arguments[G__12929__i + 2]; ++G__12929__i;}
G__12928 = new cljs.core.IndexedSeq(G__12929__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__12928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__12930__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12931 = ntcoll;
var G__12932 = cljs.core.first(vals);
var G__12933 = cljs.core.next(vals);
tcoll = G__12931;
val = G__12932;
vals = G__12933;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12930 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12934__i = 0, G__12934__a = new Array(arguments.length -  2);
while (G__12934__i < G__12934__a.length) {G__12934__a[G__12934__i] = arguments[G__12934__i + 2]; ++G__12934__i;}
  vals = new cljs.core.IndexedSeq(G__12934__a,0);
} 
return G__12930__delegate.call(this,tcoll,val,vals);};
G__12930.cljs$lang$maxFixedArity = 2;
G__12930.cljs$lang$applyTo = (function (arglist__12935){
var tcoll = cljs.core.first(arglist__12935);
arglist__12935 = cljs.core.next(arglist__12935);
var val = cljs.core.first(arglist__12935);
var vals = cljs.core.rest(arglist__12935);
return G__12930__delegate(tcoll,val,vals);
});
G__12930.cljs$core$IFn$_invoke$arity$variadic = G__12930__delegate;
return G__12930;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__12936 = null;
if (arguments.length > 2) {
var G__12937__i = 0, G__12937__a = new Array(arguments.length -  2);
while (G__12937__i < G__12937__a.length) {G__12937__a[G__12937__i] = arguments[G__12937__i + 2]; ++G__12937__i;}
G__12936 = new cljs.core.IndexedSeq(G__12937__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4666 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4666);
} else {
var G__13148 = a4666;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13148) : f.call(null,G__13148));
}
} else {
var b4667 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4666,b4667);
} else {
var G__13149 = a4666;
var G__13150 = b4667;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13149,G__13150) : f.call(null,G__13149,G__13150));
}
} else {
var c4668 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4666,b4667,c4668);
} else {
var G__13151 = a4666;
var G__13152 = b4667;
var G__13153 = c4668;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13151,G__13152,G__13153) : f.call(null,G__13151,G__13152,G__13153));
}
} else {
var d4669 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4666,b4667,c4668,d4669);
} else {
var G__13154 = a4666;
var G__13155 = b4667;
var G__13156 = c4668;
var G__13157 = d4669;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13154,G__13155,G__13156,G__13157) : f.call(null,G__13154,G__13155,G__13156,G__13157));
}
} else {
var e4670 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4666,b4667,c4668,d4669,e4670);
} else {
var G__13158 = a4666;
var G__13159 = b4667;
var G__13160 = c4668;
var G__13161 = d4669;
var G__13162 = e4670;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13158,G__13159,G__13160,G__13161,G__13162) : f.call(null,G__13158,G__13159,G__13160,G__13161,G__13162));
}
} else {
var f4671 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4666,b4667,c4668,d4669,e4670,f4671);
} else {
var G__13163 = a4666;
var G__13164 = b4667;
var G__13165 = c4668;
var G__13166 = d4669;
var G__13167 = e4670;
var G__13168 = f4671;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13163,G__13164,G__13165,G__13166,G__13167,G__13168) : f.call(null,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168));
}
} else {
var g4672 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4666,b4667,c4668,d4669,e4670,f4671,g4672);
} else {
var G__13169 = a4666;
var G__13170 = b4667;
var G__13171 = c4668;
var G__13172 = d4669;
var G__13173 = e4670;
var G__13174 = f4671;
var G__13175 = g4672;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175) : f.call(null,G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175));
}
} else {
var h4673 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673);
} else {
var G__13176 = a4666;
var G__13177 = b4667;
var G__13178 = c4668;
var G__13179 = d4669;
var G__13180 = e4670;
var G__13181 = f4671;
var G__13182 = g4672;
var G__13183 = h4673;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183) : f.call(null,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183));
}
} else {
var i4674 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674);
} else {
var G__13184 = a4666;
var G__13185 = b4667;
var G__13186 = c4668;
var G__13187 = d4669;
var G__13188 = e4670;
var G__13189 = f4671;
var G__13190 = g4672;
var G__13191 = h4673;
var G__13192 = i4674;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192) : f.call(null,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192));
}
} else {
var j4675 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675);
} else {
var G__13193 = a4666;
var G__13194 = b4667;
var G__13195 = c4668;
var G__13196 = d4669;
var G__13197 = e4670;
var G__13198 = f4671;
var G__13199 = g4672;
var G__13200 = h4673;
var G__13201 = i4674;
var G__13202 = j4675;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202) : f.call(null,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202));
}
} else {
var k4676 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676);
} else {
var G__13203 = a4666;
var G__13204 = b4667;
var G__13205 = c4668;
var G__13206 = d4669;
var G__13207 = e4670;
var G__13208 = f4671;
var G__13209 = g4672;
var G__13210 = h4673;
var G__13211 = i4674;
var G__13212 = j4675;
var G__13213 = k4676;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213) : f.call(null,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213));
}
} else {
var l4677 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677);
} else {
var G__13214 = a4666;
var G__13215 = b4667;
var G__13216 = c4668;
var G__13217 = d4669;
var G__13218 = e4670;
var G__13219 = f4671;
var G__13220 = g4672;
var G__13221 = h4673;
var G__13222 = i4674;
var G__13223 = j4675;
var G__13224 = k4676;
var G__13225 = l4677;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225) : f.call(null,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225));
}
} else {
var m4678 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678);
} else {
var G__13226 = a4666;
var G__13227 = b4667;
var G__13228 = c4668;
var G__13229 = d4669;
var G__13230 = e4670;
var G__13231 = f4671;
var G__13232 = g4672;
var G__13233 = h4673;
var G__13234 = i4674;
var G__13235 = j4675;
var G__13236 = k4676;
var G__13237 = l4677;
var G__13238 = m4678;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13226,G__13227,G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238) : f.call(null,G__13226,G__13227,G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238));
}
} else {
var n4679 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678,n4679);
} else {
var G__13239 = a4666;
var G__13240 = b4667;
var G__13241 = c4668;
var G__13242 = d4669;
var G__13243 = e4670;
var G__13244 = f4671;
var G__13245 = g4672;
var G__13246 = h4673;
var G__13247 = i4674;
var G__13248 = j4675;
var G__13249 = k4676;
var G__13250 = l4677;
var G__13251 = m4678;
var G__13252 = n4679;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252) : f.call(null,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252));
}
} else {
var o4680 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678,n4679,o4680);
} else {
var G__13253 = a4666;
var G__13254 = b4667;
var G__13255 = c4668;
var G__13256 = d4669;
var G__13257 = e4670;
var G__13258 = f4671;
var G__13259 = g4672;
var G__13260 = h4673;
var G__13261 = i4674;
var G__13262 = j4675;
var G__13263 = k4676;
var G__13264 = l4677;
var G__13265 = m4678;
var G__13266 = n4679;
var G__13267 = o4680;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267) : f.call(null,G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267));
}
} else {
var p4681 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678,n4679,o4680,p4681);
} else {
var G__13268 = a4666;
var G__13269 = b4667;
var G__13270 = c4668;
var G__13271 = d4669;
var G__13272 = e4670;
var G__13273 = f4671;
var G__13274 = g4672;
var G__13275 = h4673;
var G__13276 = i4674;
var G__13277 = j4675;
var G__13278 = k4676;
var G__13279 = l4677;
var G__13280 = m4678;
var G__13281 = n4679;
var G__13282 = o4680;
var G__13283 = p4681;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283) : f.call(null,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283));
}
} else {
var q4682 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678,n4679,o4680,p4681,q4682);
} else {
var G__13284 = a4666;
var G__13285 = b4667;
var G__13286 = c4668;
var G__13287 = d4669;
var G__13288 = e4670;
var G__13289 = f4671;
var G__13290 = g4672;
var G__13291 = h4673;
var G__13292 = i4674;
var G__13293 = j4675;
var G__13294 = k4676;
var G__13295 = l4677;
var G__13296 = m4678;
var G__13297 = n4679;
var G__13298 = o4680;
var G__13299 = p4681;
var G__13300 = q4682;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300) : f.call(null,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300));
}
} else {
var r4683 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678,n4679,o4680,p4681,q4682,r4683);
} else {
var G__13301 = a4666;
var G__13302 = b4667;
var G__13303 = c4668;
var G__13304 = d4669;
var G__13305 = e4670;
var G__13306 = f4671;
var G__13307 = g4672;
var G__13308 = h4673;
var G__13309 = i4674;
var G__13310 = j4675;
var G__13311 = k4676;
var G__13312 = l4677;
var G__13313 = m4678;
var G__13314 = n4679;
var G__13315 = o4680;
var G__13316 = p4681;
var G__13317 = q4682;
var G__13318 = r4683;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318) : f.call(null,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318));
}
} else {
var s4684 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678,n4679,o4680,p4681,q4682,r4683,s4684);
} else {
var G__13319 = a4666;
var G__13320 = b4667;
var G__13321 = c4668;
var G__13322 = d4669;
var G__13323 = e4670;
var G__13324 = f4671;
var G__13325 = g4672;
var G__13326 = h4673;
var G__13327 = i4674;
var G__13328 = j4675;
var G__13329 = k4676;
var G__13330 = l4677;
var G__13331 = m4678;
var G__13332 = n4679;
var G__13333 = o4680;
var G__13334 = p4681;
var G__13335 = q4682;
var G__13336 = r4683;
var G__13337 = s4684;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13319,G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336,G__13337) : f.call(null,G__13319,G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336,G__13337));
}
} else {
var t4685 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4666,b4667,c4668,d4669,e4670,f4671,g4672,h4673,i4674,j4675,k4676,l4677,m4678,n4679,o4680,p4681,q4682,r4683,s4684,t4685);
} else {
var G__13338 = a4666;
var G__13339 = b4667;
var G__13340 = c4668;
var G__13341 = d4669;
var G__13342 = e4670;
var G__13343 = f4671;
var G__13344 = g4672;
var G__13345 = h4673;
var G__13346 = i4674;
var G__13347 = j4675;
var G__13348 = k4676;
var G__13349 = l4677;
var G__13350 = m4678;
var G__13351 = n4679;
var G__13352 = o4680;
var G__13353 = p4681;
var G__13354 = q4682;
var G__13355 = r4683;
var G__13356 = s4684;
var G__13357 = t4685;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357) : f.call(null,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13358__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13358 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13359__i = 0, G__13359__a = new Array(arguments.length -  5);
while (G__13359__i < G__13359__a.length) {G__13359__a[G__13359__i] = arguments[G__13359__i + 5]; ++G__13359__i;}
  args = new cljs.core.IndexedSeq(G__13359__a,0);
} 
return G__13358__delegate.call(this,f,a,b,c,d,args);};
G__13358.cljs$lang$maxFixedArity = 5;
G__13358.cljs$lang$applyTo = (function (arglist__13360){
var f = cljs.core.first(arglist__13360);
arglist__13360 = cljs.core.next(arglist__13360);
var a = cljs.core.first(arglist__13360);
arglist__13360 = cljs.core.next(arglist__13360);
var b = cljs.core.first(arglist__13360);
arglist__13360 = cljs.core.next(arglist__13360);
var c = cljs.core.first(arglist__13360);
arglist__13360 = cljs.core.next(arglist__13360);
var d = cljs.core.first(arglist__13360);
var args = cljs.core.rest(arglist__13360);
return G__13358__delegate(f,a,b,c,d,args);
});
G__13358.cljs$core$IFn$_invoke$arity$variadic = G__13358__delegate;
return G__13358;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13361 = null;
if (arguments.length > 5) {
var G__13362__i = 0, G__13362__a = new Array(arguments.length -  5);
while (G__13362__i < G__13362__a.length) {G__13362__a[G__13362__i] = arguments[G__13362__i + 5]; ++G__13362__i;}
G__13361 = new cljs.core.IndexedSeq(G__13362__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13378 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13378) : f.call(null,G__13378));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13379 = cljs.core.meta(obj);
var G__13380 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13379,G__13380) : f.call(null,G__13379,G__13380));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__13381 = cljs.core.meta(obj);
var G__13382 = a;
var G__13383 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13381,G__13382,G__13383) : f.call(null,G__13381,G__13382,G__13383));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__13384 = cljs.core.meta(obj);
var G__13385 = a;
var G__13386 = b;
var G__13387 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13384,G__13385,G__13386,G__13387) : f.call(null,G__13384,G__13385,G__13386,G__13387));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__13388 = cljs.core.meta(obj);
var G__13389 = a;
var G__13390 = b;
var G__13391 = c;
var G__13392 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13388,G__13389,G__13390,G__13391,G__13392) : f.call(null,G__13388,G__13389,G__13390,G__13391,G__13392));
})());
});
var vary_meta__7 = (function() { 
var G__13393__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__13393 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__13394__i = 0, G__13394__a = new Array(arguments.length -  6);
while (G__13394__i < G__13394__a.length) {G__13394__a[G__13394__i] = arguments[G__13394__i + 6]; ++G__13394__i;}
  args = new cljs.core.IndexedSeq(G__13394__a,0);
} 
return G__13393__delegate.call(this,obj,f,a,b,c,d,args);};
G__13393.cljs$lang$maxFixedArity = 6;
G__13393.cljs$lang$applyTo = (function (arglist__13395){
var obj = cljs.core.first(arglist__13395);
arglist__13395 = cljs.core.next(arglist__13395);
var f = cljs.core.first(arglist__13395);
arglist__13395 = cljs.core.next(arglist__13395);
var a = cljs.core.first(arglist__13395);
arglist__13395 = cljs.core.next(arglist__13395);
var b = cljs.core.first(arglist__13395);
arglist__13395 = cljs.core.next(arglist__13395);
var c = cljs.core.first(arglist__13395);
arglist__13395 = cljs.core.next(arglist__13395);
var d = cljs.core.first(arglist__13395);
var args = cljs.core.rest(arglist__13395);
return G__13393__delegate(obj,f,a,b,c,d,args);
});
G__13393.cljs$core$IFn$_invoke$arity$variadic = G__13393__delegate;
return G__13393;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__13396 = null;
if (arguments.length > 6) {
var G__13397__i = 0, G__13397__a = new Array(arguments.length -  6);
while (G__13397__i < G__13397__a.length) {G__13397__a[G__13397__i] = arguments[G__13397__i + 6]; ++G__13397__i;}
G__13396 = new cljs.core.IndexedSeq(G__13397__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__13396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__13398__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__13398 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13399__i = 0, G__13399__a = new Array(arguments.length -  2);
while (G__13399__i < G__13399__a.length) {G__13399__a[G__13399__i] = arguments[G__13399__i + 2]; ++G__13399__i;}
  more = new cljs.core.IndexedSeq(G__13399__a,0);
} 
return G__13398__delegate.call(this,x,y,more);};
G__13398.cljs$lang$maxFixedArity = 2;
G__13398.cljs$lang$applyTo = (function (arglist__13400){
var x = cljs.core.first(arglist__13400);
arglist__13400 = cljs.core.next(arglist__13400);
var y = cljs.core.first(arglist__13400);
var more = cljs.core.rest(arglist__13400);
return G__13398__delegate(x,y,more);
});
G__13398.cljs$core$IFn$_invoke$arity$variadic = G__13398__delegate;
return G__13398;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__13401 = null;
if (arguments.length > 2) {
var G__13402__i = 0, G__13402__a = new Array(arguments.length -  2);
while (G__13402__i < G__13402__a.length) {G__13402__a[G__13402__i] = arguments[G__13402__i + 2]; ++G__13402__i;}
G__13401 = new cljs.core.IndexedSeq(G__13402__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t13406 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t13406 = (function (nil_iter,meta13407){
this.nil_iter = nil_iter;
this.meta13407 = meta13407;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t13406.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t13406.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t13406.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t13406.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_13408){
var self__ = this;
var _13408__$1 = this;
return self__.meta13407;
});

cljs.core.t13406.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_13408,meta13407__$1){
var self__ = this;
var _13408__$1 = this;
return (new cljs.core.t13406(self__.nil_iter,meta13407__$1));
});

cljs.core.t13406.cljs$lang$type = true;

cljs.core.t13406.cljs$lang$ctorStr = "cljs.core/t13406";

cljs.core.t13406.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/t13406");
});

cljs.core.__GT_t13406 = (function __GT_t13406(nil_iter__$1,meta13407){
return (new cljs.core.t13406(nil_iter__$1,meta13407));
});

}

return (new cljs.core.t13406(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/monte/.boot/cache/tmp/Users/monte/Developer/try/nobel-laureate-timeline/13ub/-u0s7le/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3723__auto__ = !((lt.stepper == null));
if(and__3723__auto__){
return self__.iter.hasNext();
} else {
return and__3723__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__13409 = lt;
var G__13410 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13409,G__13410) : self__.xform.call(null,G__13409,G__13410));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13411 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13411) : self__.xform.call(null,G__13411));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__13413 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13413) : xform.call(null,G__13413));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__13415 = cljs.core.next(iters__$1);
iters__$1 = G__13415;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4622__auto___13416 = self__.iters.length;
var i_13417 = (0);
while(true){
if((i_13417 < n__4622__auto___13416)){
(self__.nexts[i_13417] = (self__.iters[i_13417]).next());

var G__13418 = (i_13417 + (1));
i_13417 = G__13418;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3723__auto__ = !((lt.stepper == null));
if(and__3723__auto__){
return this$.hasNext();
} else {
return and__3723__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13414 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13414) : self__.xform.call(null,G__13414));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__13423 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13423) : xform.call(null,G__13423));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__13424_13428 = cljs.core.seq(colls);
var chunk__13425_13429 = null;
var count__13426_13430 = (0);
var i__13427_13431 = (0);
while(true){
if((i__13427_13431 < count__13426_13430)){
var coll_13432 = chunk__13425_13429.cljs$core$IIndexed$_nth$arity$2(null,i__13427_13431);
iters.push(cljs.core.iter(coll_13432));

var G__13433 = seq__13424_13428;
var G__13434 = chunk__13425_13429;
var G__13435 = count__13426_13430;
var G__13436 = (i__13427_13431 + (1));
seq__13424_13428 = G__13433;
chunk__13425_13429 = G__13434;
count__13426_13430 = G__13435;
i__13427_13431 = G__13436;
continue;
} else {
var temp__4126__auto___13437 = cljs.core.seq(seq__13424_13428);
if(temp__4126__auto___13437){
var seq__13424_13438__$1 = temp__4126__auto___13437;
if(cljs.core.chunked_seq_QMARK_(seq__13424_13438__$1)){
var c__4522__auto___13439 = cljs.core.chunk_first(seq__13424_13438__$1);
var G__13440 = cljs.core.chunk_rest(seq__13424_13438__$1);
var G__13441 = c__4522__auto___13439;
var G__13442 = cljs.core.count(c__4522__auto___13439);
var G__13443 = (0);
seq__13424_13428 = G__13440;
chunk__13425_13429 = G__13441;
count__13426_13430 = G__13442;
i__13427_13431 = G__13443;
continue;
} else {
var coll_13444 = cljs.core.first(seq__13424_13438__$1);
iters.push(cljs.core.iter(coll_13444));

var G__13445 = cljs.core.next(seq__13424_13438__$1);
var G__13446 = null;
var G__13447 = (0);
var G__13448 = (0);
seq__13424_13428 = G__13445;
chunk__13425_13429 = G__13446;
count__13426_13430 = G__13447;
i__13427_13431 = G__13448;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3735__auto__ = cljs.core.seq(coll);
if(or__3735__auto__){
return or__3735__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__13449__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__13449 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13450__i = 0, G__13450__a = new Array(arguments.length -  2);
while (G__13450__i < G__13450__a.length) {G__13450__a[G__13450__i] = arguments[G__13450__i + 2]; ++G__13450__i;}
  colls = new cljs.core.IndexedSeq(G__13450__a,0);
} 
return G__13449__delegate.call(this,xform,coll,colls);};
G__13449.cljs$lang$maxFixedArity = 2;
G__13449.cljs$lang$applyTo = (function (arglist__13451){
var xform = cljs.core.first(arglist__13451);
arglist__13451 = cljs.core.next(arglist__13451);
var coll = cljs.core.first(arglist__13451);
var colls = cljs.core.rest(arglist__13451);
return G__13449__delegate(xform,coll,colls);
});
G__13449.cljs$core$IFn$_invoke$arity$variadic = G__13449__delegate;
return G__13449;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__13452 = null;
if (arguments.length > 2) {
var G__13453__i = 0, G__13453__a = new Array(arguments.length -  2);
while (G__13453__i < G__13453__a.length) {G__13453__a[G__13453__i] = arguments[G__13453__i + 2]; ++G__13453__i;}
G__13452 = new cljs.core.IndexedSeq(G__13453__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__13452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__13455 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13455) : pred.call(null,G__13455));
})())){
var G__13456 = pred;
var G__13457 = cljs.core.next(coll);
pred = G__13456;
coll = G__13457;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3735__auto__ = (function (){var G__13461 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13461) : pred.call(null,G__13461));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var G__13462 = pred;
var G__13463 = cljs.core.next(coll);
pred = G__13462;
coll = G__13463;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__13470 = null;
var G__13470__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__13470__1 = (function (x){
return cljs.core.not((function (){var G__13467 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13467) : f.call(null,G__13467));
})());
});
var G__13470__2 = (function (x,y){
return cljs.core.not((function (){var G__13468 = x;
var G__13469 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13468,G__13469) : f.call(null,G__13468,G__13469));
})());
});
var G__13470__3 = (function() { 
var G__13471__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__13471 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13472__i = 0, G__13472__a = new Array(arguments.length -  2);
while (G__13472__i < G__13472__a.length) {G__13472__a[G__13472__i] = arguments[G__13472__i + 2]; ++G__13472__i;}
  zs = new cljs.core.IndexedSeq(G__13472__a,0);
} 
return G__13471__delegate.call(this,x,y,zs);};
G__13471.cljs$lang$maxFixedArity = 2;
G__13471.cljs$lang$applyTo = (function (arglist__13473){
var x = cljs.core.first(arglist__13473);
arglist__13473 = cljs.core.next(arglist__13473);
var y = cljs.core.first(arglist__13473);
var zs = cljs.core.rest(arglist__13473);
return G__13471__delegate(x,y,zs);
});
G__13471.cljs$core$IFn$_invoke$arity$variadic = G__13471__delegate;
return G__13471;
})()
;
G__13470 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__13470__0.call(this);
case 1:
return G__13470__1.call(this,x);
case 2:
return G__13470__2.call(this,x,y);
default:
var G__13474 = null;
if (arguments.length > 2) {
var G__13475__i = 0, G__13475__a = new Array(arguments.length -  2);
while (G__13475__i < G__13475__a.length) {G__13475__a[G__13475__i] = arguments[G__13475__i + 2]; ++G__13475__i;}
G__13474 = new cljs.core.IndexedSeq(G__13475__a,0);
}
return G__13470__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13470.cljs$lang$maxFixedArity = 2;
G__13470.cljs$lang$applyTo = G__13470__3.cljs$lang$applyTo;
G__13470.cljs$core$IFn$_invoke$arity$0 = G__13470__0;
G__13470.cljs$core$IFn$_invoke$arity$1 = G__13470__1;
G__13470.cljs$core$IFn$_invoke$arity$2 = G__13470__2;
G__13470.cljs$core$IFn$_invoke$arity$variadic = G__13470__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13470;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__13476__delegate = function (args){
return x;
};
var G__13476 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13477__i = 0, G__13477__a = new Array(arguments.length -  0);
while (G__13477__i < G__13477__a.length) {G__13477__a[G__13477__i] = arguments[G__13477__i + 0]; ++G__13477__i;}
  args = new cljs.core.IndexedSeq(G__13477__a,0);
} 
return G__13476__delegate.call(this,args);};
G__13476.cljs$lang$maxFixedArity = 0;
G__13476.cljs$lang$applyTo = (function (arglist__13478){
var args = cljs.core.seq(arglist__13478);
return G__13476__delegate(args);
});
G__13476.cljs$core$IFn$_invoke$arity$variadic = G__13476__delegate;
return G__13476;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__13533 = null;
var G__13533__0 = (function (){
var G__13506 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13506) : f.call(null,G__13506));
});
var G__13533__1 = (function (x){
var G__13507 = (function (){var G__13508 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13508) : g.call(null,G__13508));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13507) : f.call(null,G__13507));
});
var G__13533__2 = (function (x,y){
var G__13509 = (function (){var G__13510 = x;
var G__13511 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13510,G__13511) : g.call(null,G__13510,G__13511));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13509) : f.call(null,G__13509));
});
var G__13533__3 = (function (x,y,z){
var G__13512 = (function (){var G__13513 = x;
var G__13514 = y;
var G__13515 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13513,G__13514,G__13515) : g.call(null,G__13513,G__13514,G__13515));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13512) : f.call(null,G__13512));
});
var G__13533__4 = (function() { 
var G__13534__delegate = function (x,y,z,args){
var G__13516 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13516) : f.call(null,G__13516));
};
var G__13534 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13535__i = 0, G__13535__a = new Array(arguments.length -  3);
while (G__13535__i < G__13535__a.length) {G__13535__a[G__13535__i] = arguments[G__13535__i + 3]; ++G__13535__i;}
  args = new cljs.core.IndexedSeq(G__13535__a,0);
} 
return G__13534__delegate.call(this,x,y,z,args);};
G__13534.cljs$lang$maxFixedArity = 3;
G__13534.cljs$lang$applyTo = (function (arglist__13536){
var x = cljs.core.first(arglist__13536);
arglist__13536 = cljs.core.next(arglist__13536);
var y = cljs.core.first(arglist__13536);
arglist__13536 = cljs.core.next(arglist__13536);
var z = cljs.core.first(arglist__13536);
var args = cljs.core.rest(arglist__13536);
return G__13534__delegate(x,y,z,args);
});
G__13534.cljs$core$IFn$_invoke$arity$variadic = G__13534__delegate;
return G__13534;
})()
;
G__13533 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13533__0.call(this);
case 1:
return G__13533__1.call(this,x);
case 2:
return G__13533__2.call(this,x,y);
case 3:
return G__13533__3.call(this,x,y,z);
default:
var G__13537 = null;
if (arguments.length > 3) {
var G__13538__i = 0, G__13538__a = new Array(arguments.length -  3);
while (G__13538__i < G__13538__a.length) {G__13538__a[G__13538__i] = arguments[G__13538__i + 3]; ++G__13538__i;}
G__13537 = new cljs.core.IndexedSeq(G__13538__a,0);
}
return G__13533__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13533.cljs$lang$maxFixedArity = 3;
G__13533.cljs$lang$applyTo = G__13533__4.cljs$lang$applyTo;
G__13533.cljs$core$IFn$_invoke$arity$0 = G__13533__0;
G__13533.cljs$core$IFn$_invoke$arity$1 = G__13533__1;
G__13533.cljs$core$IFn$_invoke$arity$2 = G__13533__2;
G__13533.cljs$core$IFn$_invoke$arity$3 = G__13533__3;
G__13533.cljs$core$IFn$_invoke$arity$variadic = G__13533__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13533;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__13539 = null;
var G__13539__0 = (function (){
var G__13517 = (function (){var G__13518 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13518) : g.call(null,G__13518));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13517) : f.call(null,G__13517));
});
var G__13539__1 = (function (x){
var G__13519 = (function (){var G__13520 = (function (){var G__13521 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13521) : h.call(null,G__13521));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13520) : g.call(null,G__13520));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13519) : f.call(null,G__13519));
});
var G__13539__2 = (function (x,y){
var G__13522 = (function (){var G__13523 = (function (){var G__13524 = x;
var G__13525 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13524,G__13525) : h.call(null,G__13524,G__13525));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13523) : g.call(null,G__13523));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13522) : f.call(null,G__13522));
});
var G__13539__3 = (function (x,y,z){
var G__13526 = (function (){var G__13527 = (function (){var G__13528 = x;
var G__13529 = y;
var G__13530 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13528,G__13529,G__13530) : h.call(null,G__13528,G__13529,G__13530));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13527) : g.call(null,G__13527));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13526) : f.call(null,G__13526));
});
var G__13539__4 = (function() { 
var G__13540__delegate = function (x,y,z,args){
var G__13531 = (function (){var G__13532 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13532) : g.call(null,G__13532));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13531) : f.call(null,G__13531));
};
var G__13540 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13541__i = 0, G__13541__a = new Array(arguments.length -  3);
while (G__13541__i < G__13541__a.length) {G__13541__a[G__13541__i] = arguments[G__13541__i + 3]; ++G__13541__i;}
  args = new cljs.core.IndexedSeq(G__13541__a,0);
} 
return G__13540__delegate.call(this,x,y,z,args);};
G__13540.cljs$lang$maxFixedArity = 3;
G__13540.cljs$lang$applyTo = (function (arglist__13542){
var x = cljs.core.first(arglist__13542);
arglist__13542 = cljs.core.next(arglist__13542);
var y = cljs.core.first(arglist__13542);
arglist__13542 = cljs.core.next(arglist__13542);
var z = cljs.core.first(arglist__13542);
var args = cljs.core.rest(arglist__13542);
return G__13540__delegate(x,y,z,args);
});
G__13540.cljs$core$IFn$_invoke$arity$variadic = G__13540__delegate;
return G__13540;
})()
;
G__13539 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13539__0.call(this);
case 1:
return G__13539__1.call(this,x);
case 2:
return G__13539__2.call(this,x,y);
case 3:
return G__13539__3.call(this,x,y,z);
default:
var G__13543 = null;
if (arguments.length > 3) {
var G__13544__i = 0, G__13544__a = new Array(arguments.length -  3);
while (G__13544__i < G__13544__a.length) {G__13544__a[G__13544__i] = arguments[G__13544__i + 3]; ++G__13544__i;}
G__13543 = new cljs.core.IndexedSeq(G__13544__a,0);
}
return G__13539__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13539.cljs$lang$maxFixedArity = 3;
G__13539.cljs$lang$applyTo = G__13539__4.cljs$lang$applyTo;
G__13539.cljs$core$IFn$_invoke$arity$0 = G__13539__0;
G__13539.cljs$core$IFn$_invoke$arity$1 = G__13539__1;
G__13539.cljs$core$IFn$_invoke$arity$2 = G__13539__2;
G__13539.cljs$core$IFn$_invoke$arity$3 = G__13539__3;
G__13539.cljs$core$IFn$_invoke$arity$variadic = G__13539__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13539;
})()
});
var comp__4 = (function() { 
var G__13545__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__13546__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__13547 = cljs.core.first(fs__$2).call(null,ret);
var G__13548 = cljs.core.next(fs__$2);
ret = G__13547;
fs__$2 = G__13548;
continue;
} else {
return ret;
}
break;
}
};
var G__13546 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13549__i = 0, G__13549__a = new Array(arguments.length -  0);
while (G__13549__i < G__13549__a.length) {G__13549__a[G__13549__i] = arguments[G__13549__i + 0]; ++G__13549__i;}
  args = new cljs.core.IndexedSeq(G__13549__a,0);
} 
return G__13546__delegate.call(this,args);};
G__13546.cljs$lang$maxFixedArity = 0;
G__13546.cljs$lang$applyTo = (function (arglist__13550){
var args = cljs.core.seq(arglist__13550);
return G__13546__delegate(args);
});
G__13546.cljs$core$IFn$_invoke$arity$variadic = G__13546__delegate;
return G__13546;
})()
;
;})(fs__$1))
};
var G__13545 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__13551__i = 0, G__13551__a = new Array(arguments.length -  3);
while (G__13551__i < G__13551__a.length) {G__13551__a[G__13551__i] = arguments[G__13551__i + 3]; ++G__13551__i;}
  fs = new cljs.core.IndexedSeq(G__13551__a,0);
} 
return G__13545__delegate.call(this,f1,f2,f3,fs);};
G__13545.cljs$lang$maxFixedArity = 3;
G__13545.cljs$lang$applyTo = (function (arglist__13552){
var f1 = cljs.core.first(arglist__13552);
arglist__13552 = cljs.core.next(arglist__13552);
var f2 = cljs.core.first(arglist__13552);
arglist__13552 = cljs.core.next(arglist__13552);
var f3 = cljs.core.first(arglist__13552);
var fs = cljs.core.rest(arglist__13552);
return G__13545__delegate(f1,f2,f3,fs);
});
G__13545.cljs$core$IFn$_invoke$arity$variadic = G__13545__delegate;
return G__13545;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__13553 = null;
if (arguments.length > 3) {
var G__13554__i = 0, G__13554__a = new Array(arguments.length -  3);
while (G__13554__i < G__13554__a.length) {G__13554__a[G__13554__i] = arguments[G__13554__i + 3]; ++G__13554__i;}
G__13553 = new cljs.core.IndexedSeq(G__13554__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__13553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__13639 = null;
var G__13639__0 = (function (){
var G__13597 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13597) : f.call(null,G__13597));
});
var G__13639__1 = (function (x){
var G__13598 = arg1;
var G__13599 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13598,G__13599) : f.call(null,G__13598,G__13599));
});
var G__13639__2 = (function (x,y){
var G__13600 = arg1;
var G__13601 = x;
var G__13602 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13600,G__13601,G__13602) : f.call(null,G__13600,G__13601,G__13602));
});
var G__13639__3 = (function (x,y,z){
var G__13603 = arg1;
var G__13604 = x;
var G__13605 = y;
var G__13606 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13603,G__13604,G__13605,G__13606) : f.call(null,G__13603,G__13604,G__13605,G__13606));
});
var G__13639__4 = (function() { 
var G__13640__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__13640 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13641__i = 0, G__13641__a = new Array(arguments.length -  3);
while (G__13641__i < G__13641__a.length) {G__13641__a[G__13641__i] = arguments[G__13641__i + 3]; ++G__13641__i;}
  args = new cljs.core.IndexedSeq(G__13641__a,0);
} 
return G__13640__delegate.call(this,x,y,z,args);};
G__13640.cljs$lang$maxFixedArity = 3;
G__13640.cljs$lang$applyTo = (function (arglist__13642){
var x = cljs.core.first(arglist__13642);
arglist__13642 = cljs.core.next(arglist__13642);
var y = cljs.core.first(arglist__13642);
arglist__13642 = cljs.core.next(arglist__13642);
var z = cljs.core.first(arglist__13642);
var args = cljs.core.rest(arglist__13642);
return G__13640__delegate(x,y,z,args);
});
G__13640.cljs$core$IFn$_invoke$arity$variadic = G__13640__delegate;
return G__13640;
})()
;
G__13639 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13639__0.call(this);
case 1:
return G__13639__1.call(this,x);
case 2:
return G__13639__2.call(this,x,y);
case 3:
return G__13639__3.call(this,x,y,z);
default:
var G__13643 = null;
if (arguments.length > 3) {
var G__13644__i = 0, G__13644__a = new Array(arguments.length -  3);
while (G__13644__i < G__13644__a.length) {G__13644__a[G__13644__i] = arguments[G__13644__i + 3]; ++G__13644__i;}
G__13643 = new cljs.core.IndexedSeq(G__13644__a,0);
}
return G__13639__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13639.cljs$lang$maxFixedArity = 3;
G__13639.cljs$lang$applyTo = G__13639__4.cljs$lang$applyTo;
G__13639.cljs$core$IFn$_invoke$arity$0 = G__13639__0;
G__13639.cljs$core$IFn$_invoke$arity$1 = G__13639__1;
G__13639.cljs$core$IFn$_invoke$arity$2 = G__13639__2;
G__13639.cljs$core$IFn$_invoke$arity$3 = G__13639__3;
G__13639.cljs$core$IFn$_invoke$arity$variadic = G__13639__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13639;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__13645 = null;
var G__13645__0 = (function (){
var G__13607 = arg1;
var G__13608 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13607,G__13608) : f.call(null,G__13607,G__13608));
});
var G__13645__1 = (function (x){
var G__13609 = arg1;
var G__13610 = arg2;
var G__13611 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13609,G__13610,G__13611) : f.call(null,G__13609,G__13610,G__13611));
});
var G__13645__2 = (function (x,y){
var G__13612 = arg1;
var G__13613 = arg2;
var G__13614 = x;
var G__13615 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13612,G__13613,G__13614,G__13615) : f.call(null,G__13612,G__13613,G__13614,G__13615));
});
var G__13645__3 = (function (x,y,z){
var G__13616 = arg1;
var G__13617 = arg2;
var G__13618 = x;
var G__13619 = y;
var G__13620 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13616,G__13617,G__13618,G__13619,G__13620) : f.call(null,G__13616,G__13617,G__13618,G__13619,G__13620));
});
var G__13645__4 = (function() { 
var G__13646__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__13646 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13647__i = 0, G__13647__a = new Array(arguments.length -  3);
while (G__13647__i < G__13647__a.length) {G__13647__a[G__13647__i] = arguments[G__13647__i + 3]; ++G__13647__i;}
  args = new cljs.core.IndexedSeq(G__13647__a,0);
} 
return G__13646__delegate.call(this,x,y,z,args);};
G__13646.cljs$lang$maxFixedArity = 3;
G__13646.cljs$lang$applyTo = (function (arglist__13648){
var x = cljs.core.first(arglist__13648);
arglist__13648 = cljs.core.next(arglist__13648);
var y = cljs.core.first(arglist__13648);
arglist__13648 = cljs.core.next(arglist__13648);
var z = cljs.core.first(arglist__13648);
var args = cljs.core.rest(arglist__13648);
return G__13646__delegate(x,y,z,args);
});
G__13646.cljs$core$IFn$_invoke$arity$variadic = G__13646__delegate;
return G__13646;
})()
;
G__13645 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13645__0.call(this);
case 1:
return G__13645__1.call(this,x);
case 2:
return G__13645__2.call(this,x,y);
case 3:
return G__13645__3.call(this,x,y,z);
default:
var G__13649 = null;
if (arguments.length > 3) {
var G__13650__i = 0, G__13650__a = new Array(arguments.length -  3);
while (G__13650__i < G__13650__a.length) {G__13650__a[G__13650__i] = arguments[G__13650__i + 3]; ++G__13650__i;}
G__13649 = new cljs.core.IndexedSeq(G__13650__a,0);
}
return G__13645__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13645.cljs$lang$maxFixedArity = 3;
G__13645.cljs$lang$applyTo = G__13645__4.cljs$lang$applyTo;
G__13645.cljs$core$IFn$_invoke$arity$0 = G__13645__0;
G__13645.cljs$core$IFn$_invoke$arity$1 = G__13645__1;
G__13645.cljs$core$IFn$_invoke$arity$2 = G__13645__2;
G__13645.cljs$core$IFn$_invoke$arity$3 = G__13645__3;
G__13645.cljs$core$IFn$_invoke$arity$variadic = G__13645__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13645;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__13651 = null;
var G__13651__0 = (function (){
var G__13621 = arg1;
var G__13622 = arg2;
var G__13623 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13621,G__13622,G__13623) : f.call(null,G__13621,G__13622,G__13623));
});
var G__13651__1 = (function (x){
var G__13624 = arg1;
var G__13625 = arg2;
var G__13626 = arg3;
var G__13627 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13624,G__13625,G__13626,G__13627) : f.call(null,G__13624,G__13625,G__13626,G__13627));
});
var G__13651__2 = (function (x,y){
var G__13628 = arg1;
var G__13629 = arg2;
var G__13630 = arg3;
var G__13631 = x;
var G__13632 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13628,G__13629,G__13630,G__13631,G__13632) : f.call(null,G__13628,G__13629,G__13630,G__13631,G__13632));
});
var G__13651__3 = (function (x,y,z){
var G__13633 = arg1;
var G__13634 = arg2;
var G__13635 = arg3;
var G__13636 = x;
var G__13637 = y;
var G__13638 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13633,G__13634,G__13635,G__13636,G__13637,G__13638) : f.call(null,G__13633,G__13634,G__13635,G__13636,G__13637,G__13638));
});
var G__13651__4 = (function() { 
var G__13652__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__13652 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13653__i = 0, G__13653__a = new Array(arguments.length -  3);
while (G__13653__i < G__13653__a.length) {G__13653__a[G__13653__i] = arguments[G__13653__i + 3]; ++G__13653__i;}
  args = new cljs.core.IndexedSeq(G__13653__a,0);
} 
return G__13652__delegate.call(this,x,y,z,args);};
G__13652.cljs$lang$maxFixedArity = 3;
G__13652.cljs$lang$applyTo = (function (arglist__13654){
var x = cljs.core.first(arglist__13654);
arglist__13654 = cljs.core.next(arglist__13654);
var y = cljs.core.first(arglist__13654);
arglist__13654 = cljs.core.next(arglist__13654);
var z = cljs.core.first(arglist__13654);
var args = cljs.core.rest(arglist__13654);
return G__13652__delegate(x,y,z,args);
});
G__13652.cljs$core$IFn$_invoke$arity$variadic = G__13652__delegate;
return G__13652;
})()
;
G__13651 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13651__0.call(this);
case 1:
return G__13651__1.call(this,x);
case 2:
return G__13651__2.call(this,x,y);
case 3:
return G__13651__3.call(this,x,y,z);
default:
var G__13655 = null;
if (arguments.length > 3) {
var G__13656__i = 0, G__13656__a = new Array(arguments.length -  3);
while (G__13656__i < G__13656__a.length) {G__13656__a[G__13656__i] = arguments[G__13656__i + 3]; ++G__13656__i;}
G__13655 = new cljs.core.IndexedSeq(G__13656__a,0);
}
return G__13651__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13651.cljs$lang$maxFixedArity = 3;
G__13651.cljs$lang$applyTo = G__13651__4.cljs$lang$applyTo;
G__13651.cljs$core$IFn$_invoke$arity$0 = G__13651__0;
G__13651.cljs$core$IFn$_invoke$arity$1 = G__13651__1;
G__13651.cljs$core$IFn$_invoke$arity$2 = G__13651__2;
G__13651.cljs$core$IFn$_invoke$arity$3 = G__13651__3;
G__13651.cljs$core$IFn$_invoke$arity$variadic = G__13651__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13651;
})()
});
var partial__5 = (function() { 
var G__13657__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__13658__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__13658 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13659__i = 0, G__13659__a = new Array(arguments.length -  0);
while (G__13659__i < G__13659__a.length) {G__13659__a[G__13659__i] = arguments[G__13659__i + 0]; ++G__13659__i;}
  args = new cljs.core.IndexedSeq(G__13659__a,0);
} 
return G__13658__delegate.call(this,args);};
G__13658.cljs$lang$maxFixedArity = 0;
G__13658.cljs$lang$applyTo = (function (arglist__13660){
var args = cljs.core.seq(arglist__13660);
return G__13658__delegate(args);
});
G__13658.cljs$core$IFn$_invoke$arity$variadic = G__13658__delegate;
return G__13658;
})()
;
};
var G__13657 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__13661__i = 0, G__13661__a = new Array(arguments.length -  4);
while (G__13661__i < G__13661__a.length) {G__13661__a[G__13661__i] = arguments[G__13661__i + 4]; ++G__13661__i;}
  more = new cljs.core.IndexedSeq(G__13661__a,0);
} 
return G__13657__delegate.call(this,f,arg1,arg2,arg3,more);};
G__13657.cljs$lang$maxFixedArity = 4;
G__13657.cljs$lang$applyTo = (function (arglist__13662){
var f = cljs.core.first(arglist__13662);
arglist__13662 = cljs.core.next(arglist__13662);
var arg1 = cljs.core.first(arglist__13662);
arglist__13662 = cljs.core.next(arglist__13662);
var arg2 = cljs.core.first(arglist__13662);
arglist__13662 = cljs.core.next(arglist__13662);
var arg3 = cljs.core.first(arglist__13662);
var more = cljs.core.rest(arglist__13662);
return G__13657__delegate(f,arg1,arg2,arg3,more);
});
G__13657.cljs$core$IFn$_invoke$arity$variadic = G__13657__delegate;
return G__13657;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__13663 = null;
if (arguments.length > 4) {
var G__13664__i = 0, G__13664__a = new Array(arguments.length -  4);
while (G__13664__i < G__13664__a.length) {G__13664__a[G__13664__i] = arguments[G__13664__i + 4]; ++G__13664__i;}
G__13663 = new cljs.core.IndexedSeq(G__13664__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__13663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__13697 = null;
var G__13697__1 = (function (a){
var G__13681 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13681) : f.call(null,G__13681));
});
var G__13697__2 = (function (a,b){
var G__13682 = (((a == null))?x:a);
var G__13683 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13682,G__13683) : f.call(null,G__13682,G__13683));
});
var G__13697__3 = (function (a,b,c){
var G__13684 = (((a == null))?x:a);
var G__13685 = b;
var G__13686 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13684,G__13685,G__13686) : f.call(null,G__13684,G__13685,G__13686));
});
var G__13697__4 = (function() { 
var G__13698__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__13698 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13699__i = 0, G__13699__a = new Array(arguments.length -  3);
while (G__13699__i < G__13699__a.length) {G__13699__a[G__13699__i] = arguments[G__13699__i + 3]; ++G__13699__i;}
  ds = new cljs.core.IndexedSeq(G__13699__a,0);
} 
return G__13698__delegate.call(this,a,b,c,ds);};
G__13698.cljs$lang$maxFixedArity = 3;
G__13698.cljs$lang$applyTo = (function (arglist__13700){
var a = cljs.core.first(arglist__13700);
arglist__13700 = cljs.core.next(arglist__13700);
var b = cljs.core.first(arglist__13700);
arglist__13700 = cljs.core.next(arglist__13700);
var c = cljs.core.first(arglist__13700);
var ds = cljs.core.rest(arglist__13700);
return G__13698__delegate(a,b,c,ds);
});
G__13698.cljs$core$IFn$_invoke$arity$variadic = G__13698__delegate;
return G__13698;
})()
;
G__13697 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__13697__1.call(this,a);
case 2:
return G__13697__2.call(this,a,b);
case 3:
return G__13697__3.call(this,a,b,c);
default:
var G__13701 = null;
if (arguments.length > 3) {
var G__13702__i = 0, G__13702__a = new Array(arguments.length -  3);
while (G__13702__i < G__13702__a.length) {G__13702__a[G__13702__i] = arguments[G__13702__i + 3]; ++G__13702__i;}
G__13701 = new cljs.core.IndexedSeq(G__13702__a,0);
}
return G__13697__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13697.cljs$lang$maxFixedArity = 3;
G__13697.cljs$lang$applyTo = G__13697__4.cljs$lang$applyTo;
G__13697.cljs$core$IFn$_invoke$arity$1 = G__13697__1;
G__13697.cljs$core$IFn$_invoke$arity$2 = G__13697__2;
G__13697.cljs$core$IFn$_invoke$arity$3 = G__13697__3;
G__13697.cljs$core$IFn$_invoke$arity$variadic = G__13697__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13697;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__13703 = null;
var G__13703__2 = (function (a,b){
var G__13687 = (((a == null))?x:a);
var G__13688 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13687,G__13688) : f.call(null,G__13687,G__13688));
});
var G__13703__3 = (function (a,b,c){
var G__13689 = (((a == null))?x:a);
var G__13690 = (((b == null))?y:b);
var G__13691 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13689,G__13690,G__13691) : f.call(null,G__13689,G__13690,G__13691));
});
var G__13703__4 = (function() { 
var G__13704__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__13704 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13705__i = 0, G__13705__a = new Array(arguments.length -  3);
while (G__13705__i < G__13705__a.length) {G__13705__a[G__13705__i] = arguments[G__13705__i + 3]; ++G__13705__i;}
  ds = new cljs.core.IndexedSeq(G__13705__a,0);
} 
return G__13704__delegate.call(this,a,b,c,ds);};
G__13704.cljs$lang$maxFixedArity = 3;
G__13704.cljs$lang$applyTo = (function (arglist__13706){
var a = cljs.core.first(arglist__13706);
arglist__13706 = cljs.core.next(arglist__13706);
var b = cljs.core.first(arglist__13706);
arglist__13706 = cljs.core.next(arglist__13706);
var c = cljs.core.first(arglist__13706);
var ds = cljs.core.rest(arglist__13706);
return G__13704__delegate(a,b,c,ds);
});
G__13704.cljs$core$IFn$_invoke$arity$variadic = G__13704__delegate;
return G__13704;
})()
;
G__13703 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13703__2.call(this,a,b);
case 3:
return G__13703__3.call(this,a,b,c);
default:
var G__13707 = null;
if (arguments.length > 3) {
var G__13708__i = 0, G__13708__a = new Array(arguments.length -  3);
while (G__13708__i < G__13708__a.length) {G__13708__a[G__13708__i] = arguments[G__13708__i + 3]; ++G__13708__i;}
G__13707 = new cljs.core.IndexedSeq(G__13708__a,0);
}
return G__13703__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13703.cljs$lang$maxFixedArity = 3;
G__13703.cljs$lang$applyTo = G__13703__4.cljs$lang$applyTo;
G__13703.cljs$core$IFn$_invoke$arity$2 = G__13703__2;
G__13703.cljs$core$IFn$_invoke$arity$3 = G__13703__3;
G__13703.cljs$core$IFn$_invoke$arity$variadic = G__13703__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13703;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__13709 = null;
var G__13709__2 = (function (a,b){
var G__13692 = (((a == null))?x:a);
var G__13693 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13692,G__13693) : f.call(null,G__13692,G__13693));
});
var G__13709__3 = (function (a,b,c){
var G__13694 = (((a == null))?x:a);
var G__13695 = (((b == null))?y:b);
var G__13696 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13694,G__13695,G__13696) : f.call(null,G__13694,G__13695,G__13696));
});
var G__13709__4 = (function() { 
var G__13710__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__13710 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13711__i = 0, G__13711__a = new Array(arguments.length -  3);
while (G__13711__i < G__13711__a.length) {G__13711__a[G__13711__i] = arguments[G__13711__i + 3]; ++G__13711__i;}
  ds = new cljs.core.IndexedSeq(G__13711__a,0);
} 
return G__13710__delegate.call(this,a,b,c,ds);};
G__13710.cljs$lang$maxFixedArity = 3;
G__13710.cljs$lang$applyTo = (function (arglist__13712){
var a = cljs.core.first(arglist__13712);
arglist__13712 = cljs.core.next(arglist__13712);
var b = cljs.core.first(arglist__13712);
arglist__13712 = cljs.core.next(arglist__13712);
var c = cljs.core.first(arglist__13712);
var ds = cljs.core.rest(arglist__13712);
return G__13710__delegate(a,b,c,ds);
});
G__13710.cljs$core$IFn$_invoke$arity$variadic = G__13710__delegate;
return G__13710;
})()
;
G__13709 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13709__2.call(this,a,b);
case 3:
return G__13709__3.call(this,a,b,c);
default:
var G__13713 = null;
if (arguments.length > 3) {
var G__13714__i = 0, G__13714__a = new Array(arguments.length -  3);
while (G__13714__i < G__13714__a.length) {G__13714__a[G__13714__i] = arguments[G__13714__i + 3]; ++G__13714__i;}
G__13713 = new cljs.core.IndexedSeq(G__13714__a,0);
}
return G__13709__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13709.cljs$lang$maxFixedArity = 3;
G__13709.cljs$lang$applyTo = G__13709__4.cljs$lang$applyTo;
G__13709.cljs$core$IFn$_invoke$arity$2 = G__13709__2;
G__13709.cljs$core$IFn$_invoke$arity$3 = G__13709__3;
G__13709.cljs$core$IFn$_invoke$arity$variadic = G__13709__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13709;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__13745 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13745) : cljs.core.volatile_BANG_.call(null,G__13745));
})();
return ((function (i){
return (function() {
var G__13775 = null;
var G__13775__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13775__1 = (function (result){
var G__13746 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13746) : rf.call(null,G__13746));
});
var G__13775__2 = (function (result,input){
var G__13747 = result;
var G__13748 = (function (){var G__13749 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__13750 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13749,G__13750) : f.call(null,G__13749,G__13750));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13747,G__13748) : rf.call(null,G__13747,G__13748));
});
G__13775 = function(result,input){
switch(arguments.length){
case 0:
return G__13775__0.call(this);
case 1:
return G__13775__1.call(this,result);
case 2:
return G__13775__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13775.cljs$core$IFn$_invoke$arity$0 = G__13775__0;
G__13775.cljs$core$IFn$_invoke$arity$1 = G__13775__1;
G__13775.cljs$core$IFn$_invoke$arity$2 = G__13775__2;
return G__13775;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4622__auto___13776 = size;
var i_13777 = (0);
while(true){
if((i_13777 < n__4622__auto___13776)){
cljs.core.chunk_append(b,(function (){var G__13771 = (idx + i_13777);
var G__13772 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13777);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13771,G__13772) : f.call(null,G__13771,G__13772));
})());

var G__13778 = (i_13777 + (1));
i_13777 = G__13778;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13773 = idx;
var G__13774 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13773,G__13774) : f.call(null,G__13773,G__13774));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13797 = null;
var G__13797__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13797__1 = (function (result){
var G__13791 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13791) : rf.call(null,G__13791));
});
var G__13797__2 = (function (result,input){
var v = (function (){var G__13792 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13792) : f.call(null,G__13792));
})();
if((v == null)){
return result;
} else {
var G__13793 = result;
var G__13794 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13793,G__13794) : rf.call(null,G__13793,G__13794));
}
});
G__13797 = function(result,input){
switch(arguments.length){
case 0:
return G__13797__0.call(this);
case 1:
return G__13797__1.call(this,result);
case 2:
return G__13797__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13797.cljs$core$IFn$_invoke$arity$0 = G__13797__0;
G__13797.cljs$core$IFn$_invoke$arity$1 = G__13797__1;
G__13797.cljs$core$IFn$_invoke$arity$2 = G__13797__2;
return G__13797;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4622__auto___13798 = size;
var i_13799 = (0);
while(true){
if((i_13799 < n__4622__auto___13798)){
var x_13800 = (function (){var G__13795 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13799);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13795) : f.call(null,G__13795));
})();
if((x_13800 == null)){
} else {
cljs.core.chunk_append(b,x_13800);
}

var G__13801 = (i_13799 + (1));
i_13799 = G__13801;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13796 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13796) : f.call(null,G__13796));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13802 = this$__$1;
return goog.getUid(G__13802);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13803 = cljs.core.seq(self__.watches);
var chunk__13804 = null;
var count__13805 = (0);
var i__13806 = (0);
while(true){
if((i__13806 < count__13805)){
var vec__13807 = chunk__13804.cljs$core$IIndexed$_nth$arity$2(null,i__13806);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13807,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13807,(1),null);
var G__13808_13817 = key;
var G__13809_13818 = this$__$1;
var G__13810_13819 = oldval;
var G__13811_13820 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13808_13817,G__13809_13818,G__13810_13819,G__13811_13820) : f.call(null,G__13808_13817,G__13809_13818,G__13810_13819,G__13811_13820));

var G__13821 = seq__13803;
var G__13822 = chunk__13804;
var G__13823 = count__13805;
var G__13824 = (i__13806 + (1));
seq__13803 = G__13821;
chunk__13804 = G__13822;
count__13805 = G__13823;
i__13806 = G__13824;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13803);
if(temp__4126__auto__){
var seq__13803__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13803__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__13803__$1);
var G__13825 = cljs.core.chunk_rest(seq__13803__$1);
var G__13826 = c__4522__auto__;
var G__13827 = cljs.core.count(c__4522__auto__);
var G__13828 = (0);
seq__13803 = G__13825;
chunk__13804 = G__13826;
count__13805 = G__13827;
i__13806 = G__13828;
continue;
} else {
var vec__13812 = cljs.core.first(seq__13803__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13812,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13812,(1),null);
var G__13813_13829 = key;
var G__13814_13830 = this$__$1;
var G__13815_13831 = oldval;
var G__13816_13832 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13813_13829,G__13814_13830,G__13815_13831,G__13816_13832) : f.call(null,G__13813_13829,G__13814_13830,G__13815_13831,G__13816_13832));

var G__13833 = cljs.core.next(seq__13803__$1);
var G__13834 = null;
var G__13835 = (0);
var G__13836 = (0);
seq__13803 = G__13833;
chunk__13804 = G__13834;
count__13805 = G__13835;
i__13806 = G__13836;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13840__delegate = function (x,p__13837){
var map__13839 = p__13837;
var map__13839__$1 = ((cljs.core.seq_QMARK_(map__13839))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13839):map__13839);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13839__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13839__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13840 = function (x,var_args){
var p__13837 = null;
if (arguments.length > 1) {
var G__13841__i = 0, G__13841__a = new Array(arguments.length -  1);
while (G__13841__i < G__13841__a.length) {G__13841__a[G__13841__i] = arguments[G__13841__i + 1]; ++G__13841__i;}
  p__13837 = new cljs.core.IndexedSeq(G__13841__a,0);
} 
return G__13840__delegate.call(this,x,p__13837);};
G__13840.cljs$lang$maxFixedArity = 1;
G__13840.cljs$lang$applyTo = (function (arglist__13842){
var x = cljs.core.first(arglist__13842);
var p__13837 = cljs.core.rest(arglist__13842);
return G__13840__delegate(x,p__13837);
});
G__13840.cljs$core$IFn$_invoke$arity$variadic = G__13840__delegate;
return G__13840;
})()
;
atom = function(x,var_args){
var p__13837 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13843 = null;
if (arguments.length > 1) {
var G__13844__i = 0, G__13844__a = new Array(arguments.length -  1);
while (G__13844__i < G__13844__a.length) {G__13844__a[G__13844__i] = arguments[G__13844__i + 1]; ++G__13844__i;}
G__13843 = new cljs.core.IndexedSeq(G__13844__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13843);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__13847 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13847) : validate.call(null,G__13847));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__13848 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13848) : cljs.core.pr_str.call(null,G__13848));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13855 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13855) : f.call(null,G__13855));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13856 = a.state;
var G__13857 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13856,G__13857) : f.call(null,G__13856,G__13857));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13858 = a.state;
var G__13859 = x;
var G__13860 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13858,G__13859,G__13860) : f.call(null,G__13858,G__13859,G__13860));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13861__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13861 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13862__i = 0, G__13862__a = new Array(arguments.length -  4);
while (G__13862__i < G__13862__a.length) {G__13862__a[G__13862__i] = arguments[G__13862__i + 4]; ++G__13862__i;}
  more = new cljs.core.IndexedSeq(G__13862__a,0);
} 
return G__13861__delegate.call(this,a,f,x,y,more);};
G__13861.cljs$lang$maxFixedArity = 4;
G__13861.cljs$lang$applyTo = (function (arglist__13863){
var a = cljs.core.first(arglist__13863);
arglist__13863 = cljs.core.next(arglist__13863);
var f = cljs.core.first(arglist__13863);
arglist__13863 = cljs.core.next(arglist__13863);
var x = cljs.core.first(arglist__13863);
arglist__13863 = cljs.core.next(arglist__13863);
var y = cljs.core.first(arglist__13863);
var more = cljs.core.rest(arglist__13863);
return G__13861__delegate(a,f,x,y,more);
});
G__13861.cljs$core$IFn$_invoke$arity$variadic = G__13861__delegate;
return G__13861;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__13864 = null;
if (arguments.length > 4) {
var G__13865__i = 0, G__13865__a = new Array(arguments.length -  4);
while (G__13865__i < G__13865__a.length) {G__13865__a[G__13865__i] = arguments[G__13865__i + 4]; ++G__13865__i;}
G__13864 = new cljs.core.IndexedSeq(G__13865__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__13864);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13932 = null;
var G__13932__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13932__1 = (function (result){
var G__13899 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13899) : rf.call(null,G__13899));
});
var G__13932__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__13900 = i;
var G__13901 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13900,G__13901) : f.call(null,G__13900,G__13901));
})();
if((v == null)){
return result;
} else {
var G__13902 = result;
var G__13903 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13902,G__13903) : rf.call(null,G__13902,G__13903));
}
});
G__13932 = function(result,input){
switch(arguments.length){
case 0:
return G__13932__0.call(this);
case 1:
return G__13932__1.call(this,result);
case 2:
return G__13932__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13932.cljs$core$IFn$_invoke$arity$0 = G__13932__0;
G__13932.cljs$core$IFn$_invoke$arity$1 = G__13932__1;
G__13932.cljs$core$IFn$_invoke$arity$2 = G__13932__2;
return G__13932;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4622__auto___13933 = size;
var i_13934 = (0);
while(true){
if((i_13934 < n__4622__auto___13933)){
var x_13935 = (function (){var G__13928 = (idx + i_13934);
var G__13929 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13934);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13928,G__13929) : f.call(null,G__13928,G__13929));
})();
if((x_13935 == null)){
} else {
cljs.core.chunk_append(b,x_13935);
}

var G__13936 = (i_13934 + (1));
i_13934 = G__13936;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13930 = idx;
var G__13931 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13930,G__13931) : f.call(null,G__13930,G__13931));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__14150 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14150) : p.call(null,G__14150));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14152 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14152) : p.call(null,G__14152));
})();
if(cljs.core.truth_(and__3723__auto__)){
var G__14153 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14153) : p.call(null,G__14153));
} else {
return and__3723__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14155 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14155) : p.call(null,G__14155));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14157 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14157) : p.call(null,G__14157));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var G__14158 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14158) : p.call(null,G__14158));
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__14327__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__14327 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14328__i = 0, G__14328__a = new Array(arguments.length -  3);
while (G__14328__i < G__14328__a.length) {G__14328__a[G__14328__i] = arguments[G__14328__i + 3]; ++G__14328__i;}
  args = new cljs.core.IndexedSeq(G__14328__a,0);
} 
return G__14327__delegate.call(this,x,y,z,args);};
G__14327.cljs$lang$maxFixedArity = 3;
G__14327.cljs$lang$applyTo = (function (arglist__14329){
var x = cljs.core.first(arglist__14329);
arglist__14329 = cljs.core.next(arglist__14329);
var y = cljs.core.first(arglist__14329);
arglist__14329 = cljs.core.next(arglist__14329);
var z = cljs.core.first(arglist__14329);
var args = cljs.core.rest(arglist__14329);
return G__14327__delegate(x,y,z,args);
});
G__14327.cljs$core$IFn$_invoke$arity$variadic = G__14327__delegate;
return G__14327;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14330 = null;
if (arguments.length > 3) {
var G__14331__i = 0, G__14331__a = new Array(arguments.length -  3);
while (G__14331__i < G__14331__a.length) {G__14331__a[G__14331__i] = arguments[G__14331__i + 3]; ++G__14331__i;}
G__14330 = new cljs.core.IndexedSeq(G__14331__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14190 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14190) : p1.call(null,G__14190));
})();
if(cljs.core.truth_(and__3723__auto__)){
var G__14191 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14191) : p2.call(null,G__14191));
} else {
return and__3723__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14193 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14193) : p1.call(null,G__14193));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14195 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14195) : p1.call(null,G__14195));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var and__3723__auto____$2 = (function (){var G__14197 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14197) : p2.call(null,G__14197));
})();
if(cljs.core.truth_(and__3723__auto____$2)){
var G__14198 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14198) : p2.call(null,G__14198));
} else {
return and__3723__auto____$2;
}
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14200 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14200) : p1.call(null,G__14200));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14202 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14202) : p1.call(null,G__14202));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var and__3723__auto____$2 = (function (){var G__14204 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14204) : p1.call(null,G__14204));
})();
if(cljs.core.truth_(and__3723__auto____$2)){
var and__3723__auto____$3 = (function (){var G__14206 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14206) : p2.call(null,G__14206));
})();
if(cljs.core.truth_(and__3723__auto____$3)){
var and__3723__auto____$4 = (function (){var G__14208 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14208) : p2.call(null,G__14208));
})();
if(cljs.core.truth_(and__3723__auto____$4)){
var G__14209 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14209) : p2.call(null,G__14209));
} else {
return and__3723__auto____$4;
}
} else {
return and__3723__auto____$3;
}
} else {
return and__3723__auto____$2;
}
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14332__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13937_SHARP_){
var and__3723__auto__ = (function (){var G__14214 = p1__13937_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14214) : p1.call(null,G__14214));
})();
if(cljs.core.truth_(and__3723__auto__)){
var G__14215 = p1__13937_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14215) : p2.call(null,G__14215));
} else {
return and__3723__auto__;
}
}),args)));
};
var G__14332 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14333__i = 0, G__14333__a = new Array(arguments.length -  3);
while (G__14333__i < G__14333__a.length) {G__14333__a[G__14333__i] = arguments[G__14333__i + 3]; ++G__14333__i;}
  args = new cljs.core.IndexedSeq(G__14333__a,0);
} 
return G__14332__delegate.call(this,x,y,z,args);};
G__14332.cljs$lang$maxFixedArity = 3;
G__14332.cljs$lang$applyTo = (function (arglist__14334){
var x = cljs.core.first(arglist__14334);
arglist__14334 = cljs.core.next(arglist__14334);
var y = cljs.core.first(arglist__14334);
arglist__14334 = cljs.core.next(arglist__14334);
var z = cljs.core.first(arglist__14334);
var args = cljs.core.rest(arglist__14334);
return G__14332__delegate(x,y,z,args);
});
G__14332.cljs$core$IFn$_invoke$arity$variadic = G__14332__delegate;
return G__14332;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14335 = null;
if (arguments.length > 3) {
var G__14336__i = 0, G__14336__a = new Array(arguments.length -  3);
while (G__14336__i < G__14336__a.length) {G__14336__a[G__14336__i] = arguments[G__14336__i + 3]; ++G__14336__i;}
G__14335 = new cljs.core.IndexedSeq(G__14336__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14261 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14261) : p1.call(null,G__14261));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14263 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14263) : p2.call(null,G__14263));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var G__14264 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14264) : p3.call(null,G__14264));
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14266 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14266) : p1.call(null,G__14266));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14268 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14268) : p2.call(null,G__14268));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var and__3723__auto____$2 = (function (){var G__14270 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14270) : p3.call(null,G__14270));
})();
if(cljs.core.truth_(and__3723__auto____$2)){
var and__3723__auto____$3 = (function (){var G__14272 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14272) : p1.call(null,G__14272));
})();
if(cljs.core.truth_(and__3723__auto____$3)){
var and__3723__auto____$4 = (function (){var G__14274 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14274) : p2.call(null,G__14274));
})();
if(cljs.core.truth_(and__3723__auto____$4)){
var G__14275 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14275) : p3.call(null,G__14275));
} else {
return and__3723__auto____$4;
}
} else {
return and__3723__auto____$3;
}
} else {
return and__3723__auto____$2;
}
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3723__auto__ = (function (){var G__14277 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14277) : p1.call(null,G__14277));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14279 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14279) : p2.call(null,G__14279));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var and__3723__auto____$2 = (function (){var G__14281 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14281) : p3.call(null,G__14281));
})();
if(cljs.core.truth_(and__3723__auto____$2)){
var and__3723__auto____$3 = (function (){var G__14283 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14283) : p1.call(null,G__14283));
})();
if(cljs.core.truth_(and__3723__auto____$3)){
var and__3723__auto____$4 = (function (){var G__14285 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14285) : p2.call(null,G__14285));
})();
if(cljs.core.truth_(and__3723__auto____$4)){
var and__3723__auto____$5 = (function (){var G__14287 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14287) : p3.call(null,G__14287));
})();
if(cljs.core.truth_(and__3723__auto____$5)){
var and__3723__auto____$6 = (function (){var G__14289 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14289) : p1.call(null,G__14289));
})();
if(cljs.core.truth_(and__3723__auto____$6)){
var and__3723__auto____$7 = (function (){var G__14291 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14291) : p2.call(null,G__14291));
})();
if(cljs.core.truth_(and__3723__auto____$7)){
var G__14292 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14292) : p3.call(null,G__14292));
} else {
return and__3723__auto____$7;
}
} else {
return and__3723__auto____$6;
}
} else {
return and__3723__auto____$5;
}
} else {
return and__3723__auto____$4;
}
} else {
return and__3723__auto____$3;
}
} else {
return and__3723__auto____$2;
}
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14337__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13938_SHARP_){
var and__3723__auto__ = (function (){var G__14299 = p1__13938_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14299) : p1.call(null,G__14299));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14301 = p1__13938_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14301) : p2.call(null,G__14301));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var G__14302 = p1__13938_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14302) : p3.call(null,G__14302));
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
}),args)));
};
var G__14337 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14338__i = 0, G__14338__a = new Array(arguments.length -  3);
while (G__14338__i < G__14338__a.length) {G__14338__a[G__14338__i] = arguments[G__14338__i + 3]; ++G__14338__i;}
  args = new cljs.core.IndexedSeq(G__14338__a,0);
} 
return G__14337__delegate.call(this,x,y,z,args);};
G__14337.cljs$lang$maxFixedArity = 3;
G__14337.cljs$lang$applyTo = (function (arglist__14339){
var x = cljs.core.first(arglist__14339);
arglist__14339 = cljs.core.next(arglist__14339);
var y = cljs.core.first(arglist__14339);
arglist__14339 = cljs.core.next(arglist__14339);
var z = cljs.core.first(arglist__14339);
var args = cljs.core.rest(arglist__14339);
return G__14337__delegate(x,y,z,args);
});
G__14337.cljs$core$IFn$_invoke$arity$variadic = G__14337__delegate;
return G__14337;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14340 = null;
if (arguments.length > 3) {
var G__14341__i = 0, G__14341__a = new Array(arguments.length -  3);
while (G__14341__i < G__14341__a.length) {G__14341__a[G__14341__i] = arguments[G__14341__i + 3]; ++G__14341__i;}
G__14340 = new cljs.core.IndexedSeq(G__14341__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14342__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13939_SHARP_){
var G__14318 = x;
return (p1__13939_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13939_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14318) : p1__13939_SHARP_.call(null,G__14318));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13940_SHARP_){
var and__3723__auto__ = (function (){var G__14320 = x;
return (p1__13940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14320) : p1__13940_SHARP_.call(null,G__14320));
})();
if(cljs.core.truth_(and__3723__auto__)){
var G__14321 = y;
return (p1__13940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14321) : p1__13940_SHARP_.call(null,G__14321));
} else {
return and__3723__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13941_SHARP_){
var and__3723__auto__ = (function (){var G__14323 = x;
return (p1__13941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14323) : p1__13941_SHARP_.call(null,G__14323));
})();
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__14325 = y;
return (p1__13941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14325) : p1__13941_SHARP_.call(null,G__14325));
})();
if(cljs.core.truth_(and__3723__auto____$1)){
var G__14326 = z;
return (p1__13941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14326) : p1__13941_SHARP_.call(null,G__14326));
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14343__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13942_SHARP_){
return cljs.core.every_QMARK_(p1__13942_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14343 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14344__i = 0, G__14344__a = new Array(arguments.length -  3);
while (G__14344__i < G__14344__a.length) {G__14344__a[G__14344__i] = arguments[G__14344__i + 3]; ++G__14344__i;}
  args = new cljs.core.IndexedSeq(G__14344__a,0);
} 
return G__14343__delegate.call(this,x,y,z,args);};
G__14343.cljs$lang$maxFixedArity = 3;
G__14343.cljs$lang$applyTo = (function (arglist__14345){
var x = cljs.core.first(arglist__14345);
arglist__14345 = cljs.core.next(arglist__14345);
var y = cljs.core.first(arglist__14345);
arglist__14345 = cljs.core.next(arglist__14345);
var z = cljs.core.first(arglist__14345);
var args = cljs.core.rest(arglist__14345);
return G__14343__delegate(x,y,z,args);
});
G__14343.cljs$core$IFn$_invoke$arity$variadic = G__14343__delegate;
return G__14343;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14346 = null;
if (arguments.length > 3) {
var G__14347__i = 0, G__14347__a = new Array(arguments.length -  3);
while (G__14347__i < G__14347__a.length) {G__14347__a[G__14347__i] = arguments[G__14347__i + 3]; ++G__14347__i;}
G__14346 = new cljs.core.IndexedSeq(G__14347__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14346);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14342 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14348__i = 0, G__14348__a = new Array(arguments.length -  3);
while (G__14348__i < G__14348__a.length) {G__14348__a[G__14348__i] = arguments[G__14348__i + 3]; ++G__14348__i;}
  ps = new cljs.core.IndexedSeq(G__14348__a,0);
} 
return G__14342__delegate.call(this,p1,p2,p3,ps);};
G__14342.cljs$lang$maxFixedArity = 3;
G__14342.cljs$lang$applyTo = (function (arglist__14349){
var p1 = cljs.core.first(arglist__14349);
arglist__14349 = cljs.core.next(arglist__14349);
var p2 = cljs.core.first(arglist__14349);
arglist__14349 = cljs.core.next(arglist__14349);
var p3 = cljs.core.first(arglist__14349);
var ps = cljs.core.rest(arglist__14349);
return G__14342__delegate(p1,p2,p3,ps);
});
G__14342.cljs$core$IFn$_invoke$arity$variadic = G__14342__delegate;
return G__14342;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14350 = null;
if (arguments.length > 3) {
var G__14351__i = 0, G__14351__a = new Array(arguments.length -  3);
while (G__14351__i < G__14351__a.length) {G__14351__a[G__14351__i] = arguments[G__14351__i + 3]; ++G__14351__i;}
G__14350 = new cljs.core.IndexedSeq(G__14351__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__14557 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14557) : p.call(null,G__14557));
});
var sp1__2 = (function (x,y){
var or__3735__auto__ = (function (){var G__14559 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14559) : p.call(null,G__14559));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var G__14560 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14560) : p.call(null,G__14560));
}
});
var sp1__3 = (function (x,y,z){
var or__3735__auto__ = (function (){var G__14562 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14562) : p.call(null,G__14562));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var G__14564 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14564) : p.call(null,G__14564));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var G__14565 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14565) : p.call(null,G__14565));
}
}
});
var sp1__4 = (function() { 
var G__14726__delegate = function (x,y,z,args){
var or__3735__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__14726 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14727__i = 0, G__14727__a = new Array(arguments.length -  3);
while (G__14727__i < G__14727__a.length) {G__14727__a[G__14727__i] = arguments[G__14727__i + 3]; ++G__14727__i;}
  args = new cljs.core.IndexedSeq(G__14727__a,0);
} 
return G__14726__delegate.call(this,x,y,z,args);};
G__14726.cljs$lang$maxFixedArity = 3;
G__14726.cljs$lang$applyTo = (function (arglist__14728){
var x = cljs.core.first(arglist__14728);
arglist__14728 = cljs.core.next(arglist__14728);
var y = cljs.core.first(arglist__14728);
arglist__14728 = cljs.core.next(arglist__14728);
var z = cljs.core.first(arglist__14728);
var args = cljs.core.rest(arglist__14728);
return G__14726__delegate(x,y,z,args);
});
G__14726.cljs$core$IFn$_invoke$arity$variadic = G__14726__delegate;
return G__14726;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__14729 = null;
if (arguments.length > 3) {
var G__14730__i = 0, G__14730__a = new Array(arguments.length -  3);
while (G__14730__i < G__14730__a.length) {G__14730__a[G__14730__i] = arguments[G__14730__i + 3]; ++G__14730__i;}
G__14729 = new cljs.core.IndexedSeq(G__14730__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3735__auto__ = (function (){var G__14597 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14597) : p1.call(null,G__14597));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var G__14598 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14598) : p2.call(null,G__14598));
}
});
var sp2__2 = (function (x,y){
var or__3735__auto__ = (function (){var G__14600 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14600) : p1.call(null,G__14600));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var G__14602 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14602) : p1.call(null,G__14602));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var or__3735__auto____$2 = (function (){var G__14604 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14604) : p2.call(null,G__14604));
})();
if(cljs.core.truth_(or__3735__auto____$2)){
return or__3735__auto____$2;
} else {
var G__14605 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14605) : p2.call(null,G__14605));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3735__auto__ = (function (){var G__14607 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14607) : p1.call(null,G__14607));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var G__14609 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14609) : p1.call(null,G__14609));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var or__3735__auto____$2 = (function (){var G__14611 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14611) : p1.call(null,G__14611));
})();
if(cljs.core.truth_(or__3735__auto____$2)){
return or__3735__auto____$2;
} else {
var or__3735__auto____$3 = (function (){var G__14613 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14613) : p2.call(null,G__14613));
})();
if(cljs.core.truth_(or__3735__auto____$3)){
return or__3735__auto____$3;
} else {
var or__3735__auto____$4 = (function (){var G__14615 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14615) : p2.call(null,G__14615));
})();
if(cljs.core.truth_(or__3735__auto____$4)){
return or__3735__auto____$4;
} else {
var G__14616 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14616) : p2.call(null,G__14616));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__14731__delegate = function (x,y,z,args){
var or__3735__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.some(((function (or__3735__auto__){
return (function (p1__14352_SHARP_){
var or__3735__auto____$1 = (function (){var G__14618 = p1__14352_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14618) : p1.call(null,G__14618));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var G__14619 = p1__14352_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14619) : p2.call(null,G__14619));
}
});})(or__3735__auto__))
,args);
}
};
var G__14731 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14732__i = 0, G__14732__a = new Array(arguments.length -  3);
while (G__14732__i < G__14732__a.length) {G__14732__a[G__14732__i] = arguments[G__14732__i + 3]; ++G__14732__i;}
  args = new cljs.core.IndexedSeq(G__14732__a,0);
} 
return G__14731__delegate.call(this,x,y,z,args);};
G__14731.cljs$lang$maxFixedArity = 3;
G__14731.cljs$lang$applyTo = (function (arglist__14733){
var x = cljs.core.first(arglist__14733);
arglist__14733 = cljs.core.next(arglist__14733);
var y = cljs.core.first(arglist__14733);
arglist__14733 = cljs.core.next(arglist__14733);
var z = cljs.core.first(arglist__14733);
var args = cljs.core.rest(arglist__14733);
return G__14731__delegate(x,y,z,args);
});
G__14731.cljs$core$IFn$_invoke$arity$variadic = G__14731__delegate;
return G__14731;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__14734 = null;
if (arguments.length > 3) {
var G__14735__i = 0, G__14735__a = new Array(arguments.length -  3);
while (G__14735__i < G__14735__a.length) {G__14735__a[G__14735__i] = arguments[G__14735__i + 3]; ++G__14735__i;}
G__14734 = new cljs.core.IndexedSeq(G__14735__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3735__auto__ = (function (){var G__14665 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14665) : p1.call(null,G__14665));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var G__14667 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14667) : p2.call(null,G__14667));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var G__14668 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14668) : p3.call(null,G__14668));
}
}
});
var sp3__2 = (function (x,y){
var or__3735__auto__ = (function (){var G__14670 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14670) : p1.call(null,G__14670));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var G__14672 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14672) : p2.call(null,G__14672));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var or__3735__auto____$2 = (function (){var G__14674 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14674) : p3.call(null,G__14674));
})();
if(cljs.core.truth_(or__3735__auto____$2)){
return or__3735__auto____$2;
} else {
var or__3735__auto____$3 = (function (){var G__14676 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14676) : p1.call(null,G__14676));
})();
if(cljs.core.truth_(or__3735__auto____$3)){
return or__3735__auto____$3;
} else {
var or__3735__auto____$4 = (function (){var G__14678 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14678) : p2.call(null,G__14678));
})();
if(cljs.core.truth_(or__3735__auto____$4)){
return or__3735__auto____$4;
} else {
var G__14679 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14679) : p3.call(null,G__14679));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3735__auto__ = (function (){var G__14681 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14681) : p1.call(null,G__14681));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var G__14683 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14683) : p2.call(null,G__14683));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var or__3735__auto____$2 = (function (){var G__14685 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14685) : p3.call(null,G__14685));
})();
if(cljs.core.truth_(or__3735__auto____$2)){
return or__3735__auto____$2;
} else {
var or__3735__auto____$3 = (function (){var G__14687 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14687) : p1.call(null,G__14687));
})();
if(cljs.core.truth_(or__3735__auto____$3)){
return or__3735__auto____$3;
} else {
var or__3735__auto____$4 = (function (){var G__14689 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14689) : p2.call(null,G__14689));
})();
if(cljs.core.truth_(or__3735__auto____$4)){
return or__3735__auto____$4;
} else {
var or__3735__auto____$5 = (function (){var G__14691 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14691) : p3.call(null,G__14691));
})();
if(cljs.core.truth_(or__3735__auto____$5)){
return or__3735__auto____$5;
} else {
var or__3735__auto____$6 = (function (){var G__14693 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14693) : p1.call(null,G__14693));
})();
if(cljs.core.truth_(or__3735__auto____$6)){
return or__3735__auto____$6;
} else {
var or__3735__auto____$7 = (function (){var G__14695 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14695) : p2.call(null,G__14695));
})();
if(cljs.core.truth_(or__3735__auto____$7)){
return or__3735__auto____$7;
} else {
var G__14696 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14696) : p3.call(null,G__14696));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__14736__delegate = function (x,y,z,args){
var or__3735__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.some(((function (or__3735__auto__){
return (function (p1__14353_SHARP_){
var or__3735__auto____$1 = (function (){var G__14698 = p1__14353_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14698) : p1.call(null,G__14698));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var or__3735__auto____$2 = (function (){var G__14700 = p1__14353_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14700) : p2.call(null,G__14700));
})();
if(cljs.core.truth_(or__3735__auto____$2)){
return or__3735__auto____$2;
} else {
var G__14701 = p1__14353_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14701) : p3.call(null,G__14701));
}
}
});})(or__3735__auto__))
,args);
}
};
var G__14736 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14737__i = 0, G__14737__a = new Array(arguments.length -  3);
while (G__14737__i < G__14737__a.length) {G__14737__a[G__14737__i] = arguments[G__14737__i + 3]; ++G__14737__i;}
  args = new cljs.core.IndexedSeq(G__14737__a,0);
} 
return G__14736__delegate.call(this,x,y,z,args);};
G__14736.cljs$lang$maxFixedArity = 3;
G__14736.cljs$lang$applyTo = (function (arglist__14738){
var x = cljs.core.first(arglist__14738);
arglist__14738 = cljs.core.next(arglist__14738);
var y = cljs.core.first(arglist__14738);
arglist__14738 = cljs.core.next(arglist__14738);
var z = cljs.core.first(arglist__14738);
var args = cljs.core.rest(arglist__14738);
return G__14736__delegate(x,y,z,args);
});
G__14736.cljs$core$IFn$_invoke$arity$variadic = G__14736__delegate;
return G__14736;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__14739 = null;
if (arguments.length > 3) {
var G__14740__i = 0, G__14740__a = new Array(arguments.length -  3);
while (G__14740__i < G__14740__a.length) {G__14740__a[G__14740__i] = arguments[G__14740__i + 3]; ++G__14740__i;}
G__14739 = new cljs.core.IndexedSeq(G__14740__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__14741__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14354_SHARP_){
var G__14717 = x;
return (p1__14354_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14354_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14717) : p1__14354_SHARP_.call(null,G__14717));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14355_SHARP_){
var or__3735__auto__ = (function (){var G__14719 = x;
return (p1__14355_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14355_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14719) : p1__14355_SHARP_.call(null,G__14719));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var G__14720 = y;
return (p1__14355_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14355_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14720) : p1__14355_SHARP_.call(null,G__14720));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14356_SHARP_){
var or__3735__auto__ = (function (){var G__14722 = x;
return (p1__14356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14722) : p1__14356_SHARP_.call(null,G__14722));
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var G__14724 = y;
return (p1__14356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14724) : p1__14356_SHARP_.call(null,G__14724));
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var G__14725 = z;
return (p1__14356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14725) : p1__14356_SHARP_.call(null,G__14725));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__14742__delegate = function (x,y,z,args){
var or__3735__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.some(((function (or__3735__auto__,ps__$1){
return (function (p1__14357_SHARP_){
return cljs.core.some(p1__14357_SHARP_,args);
});})(or__3735__auto__,ps__$1))
,ps__$1);
}
};
var G__14742 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14743__i = 0, G__14743__a = new Array(arguments.length -  3);
while (G__14743__i < G__14743__a.length) {G__14743__a[G__14743__i] = arguments[G__14743__i + 3]; ++G__14743__i;}
  args = new cljs.core.IndexedSeq(G__14743__a,0);
} 
return G__14742__delegate.call(this,x,y,z,args);};
G__14742.cljs$lang$maxFixedArity = 3;
G__14742.cljs$lang$applyTo = (function (arglist__14744){
var x = cljs.core.first(arglist__14744);
arglist__14744 = cljs.core.next(arglist__14744);
var y = cljs.core.first(arglist__14744);
arglist__14744 = cljs.core.next(arglist__14744);
var z = cljs.core.first(arglist__14744);
var args = cljs.core.rest(arglist__14744);
return G__14742__delegate(x,y,z,args);
});
G__14742.cljs$core$IFn$_invoke$arity$variadic = G__14742__delegate;
return G__14742;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__14745 = null;
if (arguments.length > 3) {
var G__14746__i = 0, G__14746__a = new Array(arguments.length -  3);
while (G__14746__i < G__14746__a.length) {G__14746__a[G__14746__i] = arguments[G__14746__i + 3]; ++G__14746__i;}
G__14745 = new cljs.core.IndexedSeq(G__14746__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__14741 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14747__i = 0, G__14747__a = new Array(arguments.length -  3);
while (G__14747__i < G__14747__a.length) {G__14747__a[G__14747__i] = arguments[G__14747__i + 3]; ++G__14747__i;}
  ps = new cljs.core.IndexedSeq(G__14747__a,0);
} 
return G__14741__delegate.call(this,p1,p2,p3,ps);};
G__14741.cljs$lang$maxFixedArity = 3;
G__14741.cljs$lang$applyTo = (function (arglist__14748){
var p1 = cljs.core.first(arglist__14748);
arglist__14748 = cljs.core.next(arglist__14748);
var p2 = cljs.core.first(arglist__14748);
arglist__14748 = cljs.core.next(arglist__14748);
var p3 = cljs.core.first(arglist__14748);
var ps = cljs.core.rest(arglist__14748);
return G__14741__delegate(p1,p2,p3,ps);
});
G__14741.cljs$core$IFn$_invoke$arity$variadic = G__14741__delegate;
return G__14741;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__14749 = null;
if (arguments.length > 3) {
var G__14750__i = 0, G__14750__a = new Array(arguments.length -  3);
while (G__14750__i < G__14750__a.length) {G__14750__a[G__14750__i] = arguments[G__14750__i + 3]; ++G__14750__i;}
G__14749 = new cljs.core.IndexedSeq(G__14750__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14749);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14805 = null;
var G__14805__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14805__1 = (function (result){
var G__14791 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14791) : rf.call(null,G__14791));
});
var G__14805__2 = (function (result,input){
var G__14792 = result;
var G__14793 = (function (){var G__14794 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14794) : f.call(null,G__14794));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14792,G__14793) : rf.call(null,G__14792,G__14793));
});
var G__14805__3 = (function() { 
var G__14806__delegate = function (result,input,inputs){
var G__14795 = result;
var G__14796 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14795,G__14796) : rf.call(null,G__14795,G__14796));
};
var G__14806 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14807__i = 0, G__14807__a = new Array(arguments.length -  2);
while (G__14807__i < G__14807__a.length) {G__14807__a[G__14807__i] = arguments[G__14807__i + 2]; ++G__14807__i;}
  inputs = new cljs.core.IndexedSeq(G__14807__a,0);
} 
return G__14806__delegate.call(this,result,input,inputs);};
G__14806.cljs$lang$maxFixedArity = 2;
G__14806.cljs$lang$applyTo = (function (arglist__14808){
var result = cljs.core.first(arglist__14808);
arglist__14808 = cljs.core.next(arglist__14808);
var input = cljs.core.first(arglist__14808);
var inputs = cljs.core.rest(arglist__14808);
return G__14806__delegate(result,input,inputs);
});
G__14806.cljs$core$IFn$_invoke$arity$variadic = G__14806__delegate;
return G__14806;
})()
;
G__14805 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14805__0.call(this);
case 1:
return G__14805__1.call(this,result);
case 2:
return G__14805__2.call(this,result,input);
default:
var G__14809 = null;
if (arguments.length > 2) {
var G__14810__i = 0, G__14810__a = new Array(arguments.length -  2);
while (G__14810__i < G__14810__a.length) {G__14810__a[G__14810__i] = arguments[G__14810__i + 2]; ++G__14810__i;}
G__14809 = new cljs.core.IndexedSeq(G__14810__a,0);
}
return G__14805__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14805.cljs$lang$maxFixedArity = 2;
G__14805.cljs$lang$applyTo = G__14805__3.cljs$lang$applyTo;
G__14805.cljs$core$IFn$_invoke$arity$0 = G__14805__0;
G__14805.cljs$core$IFn$_invoke$arity$1 = G__14805__1;
G__14805.cljs$core$IFn$_invoke$arity$2 = G__14805__2;
G__14805.cljs$core$IFn$_invoke$arity$variadic = G__14805__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14805;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4622__auto___14811 = size;
var i_14812 = (0);
while(true){
if((i_14812 < n__4622__auto___14811)){
cljs.core.chunk_append(b,(function (){var G__14797 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14812);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14797) : f.call(null,G__14797));
})());

var G__14813 = (i_14812 + (1));
i_14812 = G__14813;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14798 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14798) : f.call(null,G__14798));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14799 = cljs.core.first(s1);
var G__14800 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14799,G__14800) : f.call(null,G__14799,G__14800));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14801 = cljs.core.first(s1);
var G__14802 = cljs.core.first(s2);
var G__14803 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14801,G__14802,G__14803) : f.call(null,G__14801,G__14802,G__14803));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14814__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__14751_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__14751_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14814 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14815__i = 0, G__14815__a = new Array(arguments.length -  4);
while (G__14815__i < G__14815__a.length) {G__14815__a[G__14815__i] = arguments[G__14815__i + 4]; ++G__14815__i;}
  colls = new cljs.core.IndexedSeq(G__14815__a,0);
} 
return G__14814__delegate.call(this,f,c1,c2,c3,colls);};
G__14814.cljs$lang$maxFixedArity = 4;
G__14814.cljs$lang$applyTo = (function (arglist__14816){
var f = cljs.core.first(arglist__14816);
arglist__14816 = cljs.core.next(arglist__14816);
var c1 = cljs.core.first(arglist__14816);
arglist__14816 = cljs.core.next(arglist__14816);
var c2 = cljs.core.first(arglist__14816);
arglist__14816 = cljs.core.next(arglist__14816);
var c3 = cljs.core.first(arglist__14816);
var colls = cljs.core.rest(arglist__14816);
return G__14814__delegate(f,c1,c2,c3,colls);
});
G__14814.cljs$core$IFn$_invoke$arity$variadic = G__14814__delegate;
return G__14814;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14817 = null;
if (arguments.length > 4) {
var G__14818__i = 0, G__14818__a = new Array(arguments.length -  4);
while (G__14818__i < G__14818__a.length) {G__14818__a[G__14818__i] = arguments[G__14818__i + 4]; ++G__14818__i;}
G__14817 = new cljs.core.IndexedSeq(G__14818__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14827 = null;
var G__14827__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14827__1 = (function (result){
var G__14824 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14824) : rf.call(null,G__14824));
});
var G__14827__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14825 = result;
var G__14826 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14825,G__14826) : rf.call(null,G__14825,G__14826));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14827 = function(result,input){
switch(arguments.length){
case 0:
return G__14827__0.call(this);
case 1:
return G__14827__1.call(this,result);
case 2:
return G__14827__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14827.cljs$core$IFn$_invoke$arity$0 = G__14827__0;
G__14827.cljs$core$IFn$_invoke$arity$1 = G__14827__1;
G__14827.cljs$core$IFn$_invoke$arity$2 = G__14827__2;
return G__14827;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14834 = null;
var G__14834__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14834__1 = (function (result){
var G__14831 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14831) : rf.call(null,G__14831));
});
var G__14834__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14832 = result;
var G__14833 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14832,G__14833) : rf.call(null,G__14832,G__14833));
}
});
G__14834 = function(result,input){
switch(arguments.length){
case 0:
return G__14834__0.call(this);
case 1:
return G__14834__1.call(this,result);
case 2:
return G__14834__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14834.cljs$core$IFn$_invoke$arity$0 = G__14834__0;
G__14834.cljs$core$IFn$_invoke$arity$1 = G__14834__1;
G__14834.cljs$core$IFn$_invoke$arity$2 = G__14834__2;
return G__14834;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14835 = (n__$1 - (1));
var G__14836 = cljs.core.rest(s);
n__$1 = G__14835;
coll__$1 = G__14836;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14839 = cljs.core.next(s);
var G__14840 = cljs.core.next(lead);
s = G__14839;
lead = G__14840;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14853 = null;
var G__14853__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14853__1 = (function (result){
var G__14847 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14847) : rf.call(null,G__14847));
});
var G__14853__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3723__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3723__auto__)){
var G__14848 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14848) : pred.call(null,G__14848));
} else {
return and__3723__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14849 = result;
var G__14850 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14849,G__14850) : rf.call(null,G__14849,G__14850));
}
});
G__14853 = function(result,input){
switch(arguments.length){
case 0:
return G__14853__0.call(this);
case 1:
return G__14853__1.call(this,result);
case 2:
return G__14853__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14853.cljs$core$IFn$_invoke$arity$0 = G__14853__0;
G__14853.cljs$core$IFn$_invoke$arity$1 = G__14853__1;
G__14853.cljs$core$IFn$_invoke$arity$2 = G__14853__2;
return G__14853;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3723__auto__ = s;
if(and__3723__auto__){
var G__14852 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14852) : pred__$1.call(null,G__14852));
} else {
return and__3723__auto__;
}
})())){
var G__14854 = pred__$1;
var G__14855 = cljs.core.rest(s);
pred__$1 = G__14854;
coll__$1 = G__14855;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__14864 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14864) : f.call(null,G__14864));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__14867__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__14867 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14868__i = 0, G__14868__a = new Array(arguments.length -  2);
while (G__14868__i < G__14868__a.length) {G__14868__a[G__14868__i] = arguments[G__14868__i + 2]; ++G__14868__i;}
  colls = new cljs.core.IndexedSeq(G__14868__a,0);
} 
return G__14867__delegate.call(this,c1,c2,colls);};
G__14867.cljs$lang$maxFixedArity = 2;
G__14867.cljs$lang$applyTo = (function (arglist__14869){
var c1 = cljs.core.first(arglist__14869);
arglist__14869 = cljs.core.next(arglist__14869);
var c2 = cljs.core.first(arglist__14869);
var colls = cljs.core.rest(arglist__14869);
return G__14867__delegate(c1,c2,colls);
});
G__14867.cljs$core$IFn$_invoke$arity$variadic = G__14867__delegate;
return G__14867;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__14870 = null;
if (arguments.length > 2) {
var G__14871__i = 0, G__14871__a = new Array(arguments.length -  2);
while (G__14871__i < G__14871__a.length) {G__14871__a[G__14871__i] = arguments[G__14871__i + 2]; ++G__14871__i;}
G__14870 = new cljs.core.IndexedSeq(G__14871__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__14870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__14886 = null;
var G__14886__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14886__1 = (function (result){
var G__14879 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14879) : rf.call(null,G__14879));
});
var G__14886__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__14880 = result;
var G__14881 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14880,G__14881) : rf.call(null,G__14880,G__14881));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__14882 = sepr;
var G__14883 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14882,G__14883) : rf.call(null,G__14882,G__14883));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__14884 = result;
var G__14885 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14884,G__14885) : rf.call(null,G__14884,G__14885));
}
});
G__14886 = function(result,input){
switch(arguments.length){
case 0:
return G__14886__0.call(this);
case 1:
return G__14886__1.call(this,result);
case 2:
return G__14886__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14886.cljs$core$IFn$_invoke$arity$0 = G__14886__0;
G__14886.cljs$core$IFn$_invoke$arity$1 = G__14886__1;
G__14886.cljs$core$IFn$_invoke$arity$2 = G__14886__2;
return G__14886;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__14895__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__14895 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__14896__i = 0, G__14896__a = new Array(arguments.length -  1);
while (G__14896__i < G__14896__a.length) {G__14896__a[G__14896__i] = arguments[G__14896__i + 1]; ++G__14896__i;}
  colls = new cljs.core.IndexedSeq(G__14896__a,0);
} 
return G__14895__delegate.call(this,f,colls);};
G__14895.cljs$lang$maxFixedArity = 1;
G__14895.cljs$lang$applyTo = (function (arglist__14897){
var f = cljs.core.first(arglist__14897);
var colls = cljs.core.rest(arglist__14897);
return G__14895__delegate(f,colls);
});
G__14895.cljs$core$IFn$_invoke$arity$variadic = G__14895__delegate;
return G__14895;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__14898 = null;
if (arguments.length > 1) {
var G__14899__i = 0, G__14899__a = new Array(arguments.length -  1);
while (G__14899__i < G__14899__a.length) {G__14899__a[G__14899__i] = arguments[G__14899__i + 1]; ++G__14899__i;}
G__14898 = new cljs.core.IndexedSeq(G__14899__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__14918 = null;
var G__14918__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14918__1 = (function (result){
var G__14912 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14912) : rf.call(null,G__14912));
});
var G__14918__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14913 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14913) : pred.call(null,G__14913));
})())){
var G__14914 = result;
var G__14915 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14914,G__14915) : rf.call(null,G__14914,G__14915));
} else {
return result;
}
});
G__14918 = function(result,input){
switch(arguments.length){
case 0:
return G__14918__0.call(this);
case 1:
return G__14918__1.call(this,result);
case 2:
return G__14918__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14918.cljs$core$IFn$_invoke$arity$0 = G__14918__0;
G__14918.cljs$core$IFn$_invoke$arity$1 = G__14918__1;
G__14918.cljs$core$IFn$_invoke$arity$2 = G__14918__2;
return G__14918;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4622__auto___14919 = size;
var i_14920 = (0);
while(true){
if((i_14920 < n__4622__auto___14919)){
if(cljs.core.truth_((function (){var G__14916 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14920);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14916) : pred.call(null,G__14916));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14920));
} else {
}

var G__14921 = (i_14920 + (1));
i_14920 = G__14921;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__14917 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14917) : pred.call(null,G__14917));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__14928 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14928) : branch_QMARK_.call(null,G__14928));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__14929 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14929) : children.call(null,G__14929));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__14930_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__14930_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__14933 = to;
if(G__14933){
var bit__4409__auto__ = (G__14933.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4409__auto__) || (G__14933.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__14934 = to;
if(G__14934){
var bit__4409__auto__ = (G__14934.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4409__auto__) || (G__14934.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__14936 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14936) : f.call(null,G__14936));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__14937__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__14937 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14938__i = 0, G__14938__a = new Array(arguments.length -  4);
while (G__14938__i < G__14938__a.length) {G__14938__a[G__14938__i] = arguments[G__14938__i + 4]; ++G__14938__i;}
  colls = new cljs.core.IndexedSeq(G__14938__a,0);
} 
return G__14937__delegate.call(this,f,c1,c2,c3,colls);};
G__14937.cljs$lang$maxFixedArity = 4;
G__14937.cljs$lang$applyTo = (function (arglist__14939){
var f = cljs.core.first(arglist__14939);
arglist__14939 = cljs.core.next(arglist__14939);
var c1 = cljs.core.first(arglist__14939);
arglist__14939 = cljs.core.next(arglist__14939);
var c2 = cljs.core.first(arglist__14939);
arglist__14939 = cljs.core.next(arglist__14939);
var c3 = cljs.core.first(arglist__14939);
var colls = cljs.core.rest(arglist__14939);
return G__14937__delegate(f,c1,c2,c3,colls);
});
G__14937.cljs$core$IFn$_invoke$arity$variadic = G__14937__delegate;
return G__14937;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__14940 = null;
if (arguments.length > 4) {
var G__14941__i = 0, G__14941__a = new Array(arguments.length -  4);
while (G__14941__i < G__14941__a.length) {G__14941__a[G__14941__i] = arguments[G__14941__i + 4]; ++G__14941__i;}
G__14940 = new cljs.core.IndexedSeq(G__14941__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__14943 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14943) : pred.call(null,G__14943));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__14958 = m__$1;
if(G__14958){
var bit__4416__auto__ = (G__14958.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4416__auto__) || (G__14958.cljs$core$ILookup$)){
return true;
} else {
if((!G__14958.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14958);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14958);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__14959 = sentinel;
var G__14960 = m__$2;
var G__14961 = cljs.core.next(ks__$1);
sentinel = G__14959;
m__$1 = G__14960;
ks__$1 = G__14961;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__14962,v){
var vec__14967 = p__14962;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14967,(0),null);
var ks = cljs.core.nthnext(vec__14967,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__14968,f){
var vec__15006 = p__14968;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15006,(0),null);
var ks = cljs.core.nthnext(vec__15006,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15007 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15007) : f.call(null,G__15007));
})());
}
});
var update_in__4 = (function (m,p__14969,f,a){
var vec__15008 = p__14969;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15008,(0),null);
var ks = cljs.core.nthnext(vec__15008,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15009 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15010 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15009,G__15010) : f.call(null,G__15009,G__15010));
})());
}
});
var update_in__5 = (function (m,p__14970,f,a,b){
var vec__15011 = p__14970;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15011,(0),null);
var ks = cljs.core.nthnext(vec__15011,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15012 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15013 = a;
var G__15014 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15012,G__15013,G__15014) : f.call(null,G__15012,G__15013,G__15014));
})());
}
});
var update_in__6 = (function (m,p__14971,f,a,b,c){
var vec__15015 = p__14971;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15015,(0),null);
var ks = cljs.core.nthnext(vec__15015,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15016 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15017 = a;
var G__15018 = b;
var G__15019 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15016,G__15017,G__15018,G__15019) : f.call(null,G__15016,G__15017,G__15018,G__15019));
})());
}
});
var update_in__7 = (function() { 
var G__15021__delegate = function (m,p__14972,f,a,b,c,args){
var vec__15020 = p__14972;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15020,(0),null);
var ks = cljs.core.nthnext(vec__15020,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__15021 = function (m,p__14972,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__15022__i = 0, G__15022__a = new Array(arguments.length -  6);
while (G__15022__i < G__15022__a.length) {G__15022__a[G__15022__i] = arguments[G__15022__i + 6]; ++G__15022__i;}
  args = new cljs.core.IndexedSeq(G__15022__a,0);
} 
return G__15021__delegate.call(this,m,p__14972,f,a,b,c,args);};
G__15021.cljs$lang$maxFixedArity = 6;
G__15021.cljs$lang$applyTo = (function (arglist__15023){
var m = cljs.core.first(arglist__15023);
arglist__15023 = cljs.core.next(arglist__15023);
var p__14972 = cljs.core.first(arglist__15023);
arglist__15023 = cljs.core.next(arglist__15023);
var f = cljs.core.first(arglist__15023);
arglist__15023 = cljs.core.next(arglist__15023);
var a = cljs.core.first(arglist__15023);
arglist__15023 = cljs.core.next(arglist__15023);
var b = cljs.core.first(arglist__15023);
arglist__15023 = cljs.core.next(arglist__15023);
var c = cljs.core.first(arglist__15023);
var args = cljs.core.rest(arglist__15023);
return G__15021__delegate(m,p__14972,f,a,b,c,args);
});
G__15021.cljs$core$IFn$_invoke$arity$variadic = G__15021__delegate;
return G__15021;
})()
;
update_in = function(m,p__14972,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__14972,f);
case 4:
return update_in__4.call(this,m,p__14972,f,a);
case 5:
return update_in__5.call(this,m,p__14972,f,a,b);
case 6:
return update_in__6.call(this,m,p__14972,f,a,b,c);
default:
var G__15024 = null;
if (arguments.length > 6) {
var G__15025__i = 0, G__15025__a = new Array(arguments.length -  6);
while (G__15025__i < G__15025__a.length) {G__15025__a[G__15025__i] = arguments[G__15025__i + 6]; ++G__15025__i;}
G__15024 = new cljs.core.IndexedSeq(G__15025__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__14972,f,a,b,c, G__15024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15036 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15036) : f.call(null,G__15036));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15037 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15038 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15037,G__15038) : f.call(null,G__15037,G__15038));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15039 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15040 = x;
var G__15041 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15039,G__15040,G__15041) : f.call(null,G__15039,G__15040,G__15041));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15042 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15043 = x;
var G__15044 = y;
var G__15045 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15042,G__15043,G__15044,G__15045) : f.call(null,G__15042,G__15043,G__15044,G__15045));
})());
});
var update__7 = (function() { 
var G__15046__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__15046 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__15047__i = 0, G__15047__a = new Array(arguments.length -  6);
while (G__15047__i < G__15047__a.length) {G__15047__a[G__15047__i] = arguments[G__15047__i + 6]; ++G__15047__i;}
  more = new cljs.core.IndexedSeq(G__15047__a,0);
} 
return G__15046__delegate.call(this,m,k,f,x,y,z,more);};
G__15046.cljs$lang$maxFixedArity = 6;
G__15046.cljs$lang$applyTo = (function (arglist__15048){
var m = cljs.core.first(arglist__15048);
arglist__15048 = cljs.core.next(arglist__15048);
var k = cljs.core.first(arglist__15048);
arglist__15048 = cljs.core.next(arglist__15048);
var f = cljs.core.first(arglist__15048);
arglist__15048 = cljs.core.next(arglist__15048);
var x = cljs.core.first(arglist__15048);
arglist__15048 = cljs.core.next(arglist__15048);
var y = cljs.core.first(arglist__15048);
arglist__15048 = cljs.core.next(arglist__15048);
var z = cljs.core.first(arglist__15048);
var more = cljs.core.rest(arglist__15048);
return G__15046__delegate(m,k,f,x,y,z,more);
});
G__15046.cljs$core$IFn$_invoke$arity$variadic = G__15046__delegate;
return G__15046;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__15049 = null;
if (arguments.length > 6) {
var G__15050__i = 0, G__15050__a = new Array(arguments.length -  6);
while (G__15050__i < G__15050__a.length) {G__15050__a[G__15050__i] = arguments[G__15050__i + 6]; ++G__15050__i;}
G__15049 = new cljs.core.IndexedSeq(G__15050__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__15049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__15051 = (ll - (5));
var G__15052 = r;
ll = G__15051;
ret = G__15052;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15057 = cljs.core.pv_aget(node,(0));
var G__15058 = (level - (5));
node = G__15057;
level = G__15058;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15059 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__15060 = (level - (5));
node = G__15059;
level = G__15060;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15070 = init__$2;
var G__15071 = (j + i);
var G__15072 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15070,G__15071,G__15072) : f.call(null,G__15070,G__15071,G__15072));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15083 = (j + (1));
var G__15084 = init__$3;
j = G__15083;
init__$2 = G__15084;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15073 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15073) : cljs.core.deref.call(null,G__15073));
} else {
var G__15085 = (i + len);
var G__15086 = init__$2;
i = G__15085;
init__$1 = G__15086;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__15074 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15074) : cljs.core.tv_editable_root.call(null,G__15074));
})(),(function (){var G__15075 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15075) : cljs.core.tv_editable_tail.call(null,G__15075));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15076 = init__$2;
var G__15077 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15076,G__15077) : f.call(null,G__15076,G__15077));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15087 = (j + (1));
var G__15088 = init__$3;
j = G__15087;
init__$2 = G__15088;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15078 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15078) : cljs.core.deref.call(null,G__15078));
} else {
var G__15089 = (i + len);
var G__15090 = init__$2;
i = G__15089;
init__$1 = G__15090;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__15079 = coll__$1;
var G__15080 = cljs.core.first_array_for_longvec(coll__$1);
var G__15081 = (0);
var G__15082 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15079,G__15080,G__15081,G__15082) : cljs.core.chunked_seq.call(null,G__15079,G__15080,G__15081,G__15082));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4622__auto___15091 = len;
var i_15092 = (0);
while(true){
if((i_15092 < n__4622__auto___15091)){
(new_tail[i_15092] = (self__.tail[i_15092]));

var G__15093 = (i_15092 + (1));
i_15092 = G__15093;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__15094 = null;
var G__15094__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15094__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15094 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15094__2.call(this,self__,k);
case 3:
return G__15094__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15094.cljs$core$IFn$_invoke$arity$2 = G__15094__2;
G__15094.cljs$core$IFn$_invoke$arity$3 = G__15094__3;
return G__15094;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args15069){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15069)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__15095 = (i + (1));
var G__15096 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__15095;
out = G__15096;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15097__i = 0, G__15097__a = new Array(arguments.length -  0);
while (G__15097__i < G__15097__a.length) {G__15097__a[G__15097__i] = arguments[G__15097__i + 0]; ++G__15097__i;}
  args = new cljs.core.IndexedSeq(G__15097__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__15098){
var args = cljs.core.seq(arglist__15098);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15099 = self__.vec;
var G__15100 = self__.node;
var G__15101 = self__.i;
var G__15102 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15099,G__15100,G__15101,G__15102) : cljs.core.chunked_seq.call(null,G__15099,G__15100,G__15101,G__15102));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__15103 = self__.vec;
var G__15104 = (self__.i + self__.off);
var G__15105 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15103,G__15104,G__15105) : cljs.core.subvec.call(null,G__15103,G__15104,G__15105));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__15106 = self__.vec;
var G__15107 = (self__.i + self__.off);
var G__15108 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15106,G__15107,G__15108) : cljs.core.subvec.call(null,G__15106,G__15107,G__15108));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15109 = self__.vec;
var G__15110 = self__.node;
var G__15111 = self__.i;
var G__15112 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15109,G__15110,G__15111,G__15112) : cljs.core.chunked_seq.call(null,G__15109,G__15110,G__15111,G__15112));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15113 = self__.vec;
var G__15114 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15115 = end;
var G__15116 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15113,G__15114,G__15115,G__15116) : cljs.core.chunked_seq.call(null,G__15113,G__15114,G__15115,G__15116));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__15117 = self__.vec;
var G__15118 = self__.node;
var G__15119 = self__.i;
var G__15120 = self__.off;
var G__15121 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15117,G__15118,G__15119,G__15120,G__15121) : cljs.core.chunked_seq.call(null,G__15117,G__15118,G__15119,G__15120,G__15121));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15122 = self__.vec;
var G__15123 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15124 = end;
var G__15125 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15122,G__15123,G__15124,G__15125) : cljs.core.chunked_seq.call(null,G__15122,G__15123,G__15124,G__15125));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__15127 = self__.meta;
var G__15128 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__15129 = self__.start;
var G__15130 = (function (){var x__4052__auto__ = self__.end;
var y__4053__auto__ = (v_pos + (1));
return ((x__4052__auto__ > y__4053__auto__) ? x__4052__auto__ : y__4053__auto__);
})();
var G__15131 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15127,G__15128,G__15129,G__15130,G__15131) : cljs.core.build_subvec.call(null,G__15127,G__15128,G__15129,G__15130,G__15131));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__15132 = self__.meta;
var G__15133 = self__.v;
var G__15134 = self__.start;
var G__15135 = (self__.end - (1));
var G__15136 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15132,G__15133,G__15134,G__15135,G__15136) : cljs.core.build_subvec.call(null,G__15132,G__15133,G__15134,G__15135,G__15136));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__15138 = meta__$1;
var G__15139 = self__.v;
var G__15140 = self__.start;
var G__15141 = self__.end;
var G__15142 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15138,G__15139,G__15140,G__15141,G__15142) : cljs.core.build_subvec.call(null,G__15138,G__15139,G__15140,G__15141,G__15142));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15143 = self__.meta;
var G__15144 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__15145 = self__.start;
var G__15146 = (self__.end + (1));
var G__15147 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15143,G__15144,G__15145,G__15146,G__15147) : cljs.core.build_subvec.call(null,G__15143,G__15144,G__15145,G__15146,G__15147));
});

cljs.core.Subvec.prototype.call = (function() {
var G__15148 = null;
var G__15148__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15148__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15148 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15148__2.call(this,self__,k);
case 3:
return G__15148__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15148.cljs$core$IFn$_invoke$arity$2 = G__15148__2;
G__15148.cljs$core$IFn$_invoke$arity$3 = G__15148__3;
return G__15148;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args15126){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15126)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__15149 = meta;
var G__15150 = v.v;
var G__15151 = (v.start + start);
var G__15152 = (v.start + end);
var G__15153 = __hash;
meta = G__15149;
v = G__15150;
start = G__15151;
end = G__15152;
__hash = G__15153;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj15160 = {};
return obj15160;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__15168 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__15169 = (level - (5));
node = G__15168;
level = G__15169;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__15173 = null;
var G__15173__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15173__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15173 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15173__2.call(this,self__,k);
case 3:
return G__15173__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15173.cljs$core$IFn$_invoke$arity$2 = G__15173__2;
G__15173.cljs$core$IFn$_invoke$arity$3 = G__15173__3;
return G__15173;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args15170){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15170)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3735__auto__ = self__.front;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3735__auto__ = self__.rear;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__15174 = (i + incr);
i = G__15174;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__15175 = (i + (1));
var G__15176 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__15175;
out = G__15176;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj15180 = {};
return obj15180;
})();
var l = ks.length;
var i_15181 = (0);
while(true){
if((i_15181 < l)){
var k_15182 = (ks[i_15181]);
(new_obj[k_15182] = (obj[k_15182]));

var G__15183 = (i_15181 + (1));
i_15181 = G__15183;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3723__auto__ = (function (){var G__15187 = k;
return goog.isString(G__15187);
})();
if(cljs.core.truth_(and__3723__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3723__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__15188 = init__$1;
var G__15189 = k;
var G__15190 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15188,G__15189,G__15190) : f.call(null,G__15188,G__15189,G__15190));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15191 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15191) : cljs.core.deref.call(null,G__15191));
} else {
var G__15197 = cljs.core.rest(keys__$1);
var G__15198 = init__$2;
keys__$1 = G__15197;
init__$1 = G__15198;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3723__auto__ = (function (){var G__15193 = k;
return goog.isString(G__15193);
})();
if(cljs.core.truth_(and__3723__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3723__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__15194 = k;
return goog.isString(G__15194);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3723__auto__ = (function (){var G__15196 = k;
return goog.isString(G__15196);
})();
if(cljs.core.truth_(and__3723__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3723__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__15184_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__15184_SHARP_,(self__.strobj[p1__15184_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__15199 = null;
var G__15199__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15199__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15199 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15199__2.call(this,self__,k);
case 3:
return G__15199__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15199.cljs$core$IFn$_invoke$arity$2 = G__15199__2;
G__15199.cljs$core$IFn$_invoke$arity$3 = G__15199__3;
return G__15199;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args15185){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15185)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj15201 = {};
return obj15201;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__15202 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15202,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15202,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__15203 = (i + (2));
i = G__15203;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__15204 = (i + (2));
i = G__15204;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__15205 = (i + (2));
i = G__15205;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__15206 = (i + (2));
i = G__15206;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__15207 = (i + (2));
i = G__15207;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3735__auto__ = (function (){var G__15211 = k;
return goog.isString(G__15211);
})();
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_15212 = (0);
while(true){
if((i_15212 < l)){
(narr[i_15212] = (arr[i_15212]));

var G__15213 = (i_15212 + (1));
i_15212 = G__15213;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15215 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15215) : cljs.core.keys.call(null,G__15215));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15216 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15216) : cljs.core.vals.call(null,G__15216));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15217 = cljs.core.seq(coll);
var chunk__15218 = null;
var count__15219 = (0);
var i__15220 = (0);
while(true){
if((i__15220 < count__15219)){
var vec__15221 = chunk__15218.cljs$core$IIndexed$_nth$arity$2(null,i__15220);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15221,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15221,(1),null);
var G__15222_15235 = v;
var G__15223_15236 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15222_15235,G__15223_15236) : f.call(null,G__15222_15235,G__15223_15236));

var G__15237 = seq__15217;
var G__15238 = chunk__15218;
var G__15239 = count__15219;
var G__15240 = (i__15220 + (1));
seq__15217 = G__15237;
chunk__15218 = G__15238;
count__15219 = G__15239;
i__15220 = G__15240;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15217);
if(temp__4126__auto__){
var seq__15217__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15217__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__15217__$1);
var G__15241 = cljs.core.chunk_rest(seq__15217__$1);
var G__15242 = c__4522__auto__;
var G__15243 = cljs.core.count(c__4522__auto__);
var G__15244 = (0);
seq__15217 = G__15241;
chunk__15218 = G__15242;
count__15219 = G__15243;
i__15220 = G__15244;
continue;
} else {
var vec__15224 = cljs.core.first(seq__15217__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15224,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15224,(1),null);
var G__15225_15245 = v;
var G__15226_15246 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15225_15245,G__15226_15246) : f.call(null,G__15225_15245,G__15226_15246));

var G__15247 = cljs.core.next(seq__15217__$1);
var G__15248 = null;
var G__15249 = (0);
var G__15250 = (0);
seq__15217 = G__15247;
chunk__15218 = G__15248;
count__15219 = G__15249;
i__15220 = G__15250;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__15227 = init__$1;
var G__15228 = (self__.arr[i]);
var G__15229 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15227,G__15228,G__15229) : f.call(null,G__15227,G__15228,G__15229));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15230 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15230) : cljs.core.deref.call(null,G__15230));
} else {
var G__15251 = (i + (2));
var G__15252 = init__$2;
i = G__15251;
init__$1 = G__15252;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__15231 = other;
if(G__15231){
var bit__4409__auto__ = (G__15231.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4409__auto__) || (G__15231.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__15253 = (i + (2));
i = G__15253;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj15233 = {};
return obj15233;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__15254 = (s + (2));
var G__15255 = d;
s = G__15254;
d = G__15255;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__15256 = (s + (2));
var G__15257 = (d + (2));
s = G__15256;
d = G__15257;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__15234 = cljs.core.aclone(self__.arr);
(G__15234[(idx + (1))] = v);

return G__15234;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15258 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15259 = cljs.core.next(es);
ret = G__15258;
es = G__15259;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__15260 = null;
var G__15260__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15260__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15260 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15260__2.call(this,self__,k);
case 3:
return G__15260__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15260.cljs$core$IFn$_invoke$arity$2 = G__15260__2;
G__15260.cljs$core$IFn$_invoke$arity$3 = G__15260__3;
return G__15260;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args15214){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15214)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15261 = (i + (2));
var G__15262 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15261;
ret = G__15262;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__15263_15271 = self__.arr;
G__15263_15271.pop();

G__15263_15271.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__15264 = self__.len;
var G__15265 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15264,G__15265) : cljs.core.array__GT_transient_hash_map.call(null,G__15264,G__15265));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__15266 = o;
if(G__15266){
var bit__4416__auto__ = (G__15266.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4416__auto__) || (G__15266.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15266);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__15267 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15267) : cljs.core.key.call(null,G__15267));
})(),(function (){var G__15268 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15268) : cljs.core.val.call(null,G__15268));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15272 = cljs.core.next(es);
var G__15273 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__15269 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15269) : cljs.core.key.call(null,G__15269));
})(),(function (){var G__15270 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15270) : cljs.core.val.call(null,G__15270));
})());
es = G__15272;
tcoll__$2 = G__15273;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__15274 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__15275 = (i + (2));
out = G__15274;
i = G__15275;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__15278 = cljs.core.aclone(arr);
(G__15278[i] = a);

return G__15278;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__15279 = cljs.core.aclone(arr);
(G__15279[i] = a);

(G__15279[j] = b);

return G__15279;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__15284 = init__$1;
var G__15285 = k;
var G__15286 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15284,G__15285,G__15286) : f.call(null,G__15284,G__15285,G__15286));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15287 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15287) : cljs.core.deref.call(null,G__15287));
} else {
var G__15288 = (i + (2));
var G__15289 = init__$2;
i = G__15288;
init__$1 = G__15289;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15290 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15290) : cljs.core.create_inode_seq.call(null,G__15290));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15304 = (0);
var j_15305 = (0);
while(true){
if((i_15304 < (32))){
if((((self__.bitmap >>> i_15304) & (1)) === (0))){
var G__15306 = (i_15304 + (1));
var G__15307 = j_15305;
i_15304 = G__15306;
j_15305 = G__15307;
continue;
} else {
(nodes[i_15304] = ((!(((self__.arr[j_15305]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_15305])),(self__.arr[j_15305]),(self__.arr[(j_15305 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15305 + (1))])));

var G__15308 = (i_15304 + (1));
var G__15309 = (j_15305 + (2));
i_15304 = G__15308;
j_15305 = G__15309;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15291 = edit__$1;
var G__15292 = (shift + (5));
var G__15293 = key_or_nil;
var G__15294 = val_or_node;
var G__15295 = hash;
var G__15296 = key;
var G__15297 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15291,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297) : cljs.core.create_node.call(null,G__15291,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15310 = (0);
var j_15311 = (0);
while(true){
if((i_15310 < (32))){
if((((self__.bitmap >>> i_15310) & (1)) === (0))){
var G__15312 = (i_15310 + (1));
var G__15313 = j_15311;
i_15310 = G__15312;
j_15311 = G__15313;
continue;
} else {
(nodes[i_15310] = ((!(((self__.arr[j_15311]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_15311])),(self__.arr[j_15311]),(self__.arr[(j_15311 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15311 + (1))])));

var G__15314 = (i_15310 + (1));
var G__15315 = (j_15311 + (2));
i_15310 = G__15314;
j_15311 = G__15315;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15298 = (shift + (5));
var G__15299 = key_or_nil;
var G__15300 = val_or_node;
var G__15301 = hash;
var G__15302 = key;
var G__15303 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15298,G__15299,G__15300,G__15301,G__15302,G__15303) : cljs.core.create_node.call(null,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__15316 = (i + (1));
var G__15317 = (j + (2));
var G__15318 = (bitmap | ((1) << i));
i = G__15316;
j = G__15317;
bitmap = G__15318;
continue;
} else {
var G__15319 = (i + (1));
var G__15320 = j;
var G__15321 = bitmap;
i = G__15319;
j = G__15320;
bitmap = G__15321;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15322 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15322) : cljs.core.create_array_node_seq.call(null,G__15322));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15323 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15323) : cljs.core.deref.call(null,G__15323));
} else {
var G__15324 = (i + (1));
var G__15325 = init__$2;
i = G__15324;
init__$1 = G__15325;
continue;
}
} else {
var G__15326 = (i + (1));
var G__15327 = init__$1;
i = G__15326;
init__$1 = G__15327;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__15328 = (i + (2));
i = G__15328;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15329 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15329) : cljs.core.create_inode_seq.call(null,G__15329));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__15330 = self__.nodes;
var G__15331 = (self__.i + (2));
var G__15332 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15330,G__15331,G__15332) : cljs.core.create_inode_seq.call(null,G__15330,G__15331,G__15332));
} else {
var G__15333 = self__.nodes;
var G__15334 = self__.i;
var G__15335 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15333,G__15334,G__15335) : cljs.core.create_inode_seq.call(null,G__15333,G__15334,G__15335));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__15339 = (j + (2));
j = G__15339;
continue;
}
} else {
var G__15340 = (j + (2));
j = G__15340;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15341 = null;
var G__15342 = self__.nodes;
var G__15343 = self__.i;
var G__15344 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15341,G__15342,G__15343,G__15344) : cljs.core.create_array_node_seq.call(null,G__15341,G__15342,G__15343,G__15344));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15349 = (j + (1));
j = G__15349;
continue;
}
} else {
var G__15350 = (j + (1));
j = G__15350;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15352 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15352) : cljs.core.keys.call(null,G__15352));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15353 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15353) : cljs.core.vals.call(null,G__15353));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15354 = cljs.core.seq(coll);
var chunk__15355 = null;
var count__15356 = (0);
var i__15357 = (0);
while(true){
if((i__15357 < count__15356)){
var vec__15358 = chunk__15355.cljs$core$IIndexed$_nth$arity$2(null,i__15357);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15358,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15358,(1),null);
var G__15359_15370 = v;
var G__15360_15371 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15359_15370,G__15360_15371) : f.call(null,G__15359_15370,G__15360_15371));

var G__15372 = seq__15354;
var G__15373 = chunk__15355;
var G__15374 = count__15356;
var G__15375 = (i__15357 + (1));
seq__15354 = G__15372;
chunk__15355 = G__15373;
count__15356 = G__15374;
i__15357 = G__15375;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15354);
if(temp__4126__auto__){
var seq__15354__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15354__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__15354__$1);
var G__15376 = cljs.core.chunk_rest(seq__15354__$1);
var G__15377 = c__4522__auto__;
var G__15378 = cljs.core.count(c__4522__auto__);
var G__15379 = (0);
seq__15354 = G__15376;
chunk__15355 = G__15377;
count__15356 = G__15378;
i__15357 = G__15379;
continue;
} else {
var vec__15361 = cljs.core.first(seq__15354__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15361,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15361,(1),null);
var G__15362_15380 = v;
var G__15363_15381 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15362_15380,G__15363_15381) : f.call(null,G__15362_15380,G__15363_15381));

var G__15382 = cljs.core.next(seq__15354__$1);
var G__15383 = null;
var G__15384 = (0);
var G__15385 = (0);
seq__15354 = G__15382;
chunk__15355 = G__15383;
count__15356 = G__15384;
i__15357 = G__15385;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15364 = init;
var G__15365 = null;
var G__15366 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15364,G__15365,G__15366) : f.call(null,G__15364,G__15365,G__15366));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15367 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15367) : cljs.core.deref.call(null,G__15367));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15369 = {};
return obj15369;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15386 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15387 = cljs.core.next(es);
ret = G__15386;
es = G__15387;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__15388 = null;
var G__15388__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15388__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15388 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15388__2.call(this,self__,k);
case 3:
return G__15388__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15388.cljs$core$IFn$_invoke$arity$2 = G__15388__2;
G__15388.cljs$core$IFn$_invoke$arity$3 = G__15388__3;
return G__15388;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15351){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15351)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15389 = (i + (2));
var G__15390 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15389;
ret = G__15390;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15391 = (i + (1));
var G__15392 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__15391;
out = G__15392;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__15393 = o;
if(G__15393){
var bit__4416__auto__ = (G__15393.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4416__auto__) || (G__15393.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15393.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15393);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15393);
}
})()){
return tcoll.assoc_BANG_((function (){var G__15394 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15394) : cljs.core.key.call(null,G__15394));
})(),(function (){var G__15395 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15395) : cljs.core.val.call(null,G__15395));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15398 = cljs.core.next(es);
var G__15399 = tcoll__$1.assoc_BANG_((function (){var G__15396 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15396) : cljs.core.key.call(null,G__15396));
})(),(function (){var G__15397 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15397) : cljs.core.val.call(null,G__15397));
})());
es = G__15398;
tcoll__$1 = G__15399;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__15400 = ((ascending_QMARK_)?t.left:t.right);
var G__15401 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__15400;
stack__$1 = G__15401;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15414 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15414) : cljs.core.deref.call(null,G__15414));
} else {
var init__$2 = (function (){var G__15415 = init__$1;
var G__15416 = node.key;
var G__15417 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15415,G__15416,G__15417) : f.call(null,G__15415,G__15416,G__15417));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15418 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15418) : cljs.core.deref.call(null,G__15418));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__15419 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15419) : cljs.core.deref.call(null,G__15419));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__15421 = null;
var G__15421__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15421__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15421 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15421__2.call(this,self__,k);
case 3:
return G__15421__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15421.cljs$core$IFn$_invoke$arity$2 = G__15421__2;
G__15421.cljs$core$IFn$_invoke$arity$3 = G__15421__3;
return G__15421;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args15420){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15420)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__15423 = null;
var G__15423__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15423__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15423 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15423__2.call(this,self__,k);
case 3:
return G__15423__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15423.cljs$core$IFn$_invoke$arity$2 = G__15423__2;
G__15423.cljs$core$IFn$_invoke$arity$3 = G__15423__3;
return G__15423;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args15422){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15422)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__15436 = k;
var G__15437 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15436,G__15437) : comp.call(null,G__15436,G__15437));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__15456 = k;
var G__15457 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15456,G__15457) : comp.call(null,G__15456,G__15457));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__15468 = k;
var G__15469 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15468,G__15469) : comp.call(null,G__15468,G__15469));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15471 = cljs.core.seq(coll);
var chunk__15472 = null;
var count__15473 = (0);
var i__15474 = (0);
while(true){
if((i__15474 < count__15473)){
var vec__15475 = chunk__15472.cljs$core$IIndexed$_nth$arity$2(null,i__15474);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15475,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15475,(1),null);
var G__15476_15488 = v;
var G__15477_15489 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15476_15488,G__15477_15489) : f.call(null,G__15476_15488,G__15477_15489));

var G__15490 = seq__15471;
var G__15491 = chunk__15472;
var G__15492 = count__15473;
var G__15493 = (i__15474 + (1));
seq__15471 = G__15490;
chunk__15472 = G__15491;
count__15473 = G__15492;
i__15474 = G__15493;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15471);
if(temp__4126__auto__){
var seq__15471__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15471__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__15471__$1);
var G__15494 = cljs.core.chunk_rest(seq__15471__$1);
var G__15495 = c__4522__auto__;
var G__15496 = cljs.core.count(c__4522__auto__);
var G__15497 = (0);
seq__15471 = G__15494;
chunk__15472 = G__15495;
count__15473 = G__15496;
i__15474 = G__15497;
continue;
} else {
var vec__15478 = cljs.core.first(seq__15471__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15478,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15478,(1),null);
var G__15479_15498 = v;
var G__15480_15499 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15479_15498,G__15480_15499) : f.call(null,G__15479_15498,G__15480_15499));

var G__15500 = cljs.core.next(seq__15471__$1);
var G__15501 = null;
var G__15502 = (0);
var G__15503 = (0);
seq__15471 = G__15500;
chunk__15472 = G__15501;
count__15473 = G__15502;
i__15474 = G__15503;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15481 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15481) : cljs.core.keys.call(null,G__15481));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15482 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15482) : cljs.core.vals.call(null,G__15482));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15483 = k;
var G__15484 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15483,G__15484) : self__.comp.call(null,G__15483,G__15484));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__15504 = t.left;
t = G__15504;
continue;
} else {
var G__15505 = t.right;
t = G__15505;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15506 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15507 = cljs.core.next(es);
ret = G__15506;
es = G__15507;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__15508 = null;
var G__15508__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15508__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15508 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15508__2.call(this,self__,k);
case 3:
return G__15508__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15508.cljs$core$IFn$_invoke$arity$2 = G__15508__2;
G__15508.cljs$core$IFn$_invoke$arity$3 = G__15508__3;
return G__15508;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args15470){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15470)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15485 = k;
var G__15486 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15485,G__15486) : self__.comp.call(null,G__15485,G__15486));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__15509 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15510 = t.left;
stack = G__15509;
t = G__15510;
continue;
} else {
var G__15511 = stack;
var G__15512 = t.right;
stack = G__15511;
t = G__15512;
continue;
}
} else {
if((c > (0))){
var G__15513 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15514 = t.right;
stack = G__15513;
t = G__15514;
continue;
} else {
var G__15515 = stack;
var G__15516 = t.left;
stack = G__15515;
t = G__15516;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__15487 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15487) : cljs.core.key.call(null,G__15487));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__15517 = cljs.core.nnext(in$);
var G__15518 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15517;
out = G__15518;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15519__i = 0, G__15519__a = new Array(arguments.length -  0);
while (G__15519__i < G__15519__a.length) {G__15519__a[G__15519__i] = arguments[G__15519__i + 0]; ++G__15519__i;}
  keyvals = new cljs.core.IndexedSeq(G__15519__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__15520){
var keyvals = cljs.core.seq(arglist__15520);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15521__i = 0, G__15521__a = new Array(arguments.length -  0);
while (G__15521__i < G__15521__a.length) {G__15521__a[G__15521__i] = arguments[G__15521__i + 0]; ++G__15521__i;}
  keyvals = new cljs.core.IndexedSeq(G__15521__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__15522){
var keyvals = cljs.core.seq(arglist__15522);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj15526 = {};
return obj15526;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__15527 = cljs.core.nnext(kvs);
kvs = G__15527;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15528__i = 0, G__15528__a = new Array(arguments.length -  0);
while (G__15528__i < G__15528__a.length) {G__15528__a[G__15528__i] = arguments[G__15528__i + 0]; ++G__15528__i;}
  keyvals = new cljs.core.IndexedSeq(G__15528__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__15529){
var keyvals = cljs.core.seq(arglist__15529);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__15530 = cljs.core.nnext(in$);
var G__15531 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15530;
out = G__15531;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15532__i = 0, G__15532__a = new Array(arguments.length -  0);
while (G__15532__i < G__15532__a.length) {G__15532__a[G__15532__i] = arguments[G__15532__i + 0]; ++G__15532__i;}
  keyvals = new cljs.core.IndexedSeq(G__15532__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__15533){
var keyvals = cljs.core.seq(arglist__15533);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__15534 = cljs.core.nnext(in$);
var G__15535 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15534;
out = G__15535;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__15536__i = 0, G__15536__a = new Array(arguments.length -  1);
while (G__15536__i < G__15536__a.length) {G__15536__a[G__15536__i] = arguments[G__15536__i + 1]; ++G__15536__i;}
  keyvals = new cljs.core.IndexedSeq(G__15536__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__15537){
var comparator = cljs.core.first(arglist__15537);
var keyvals = cljs.core.rest(arglist__15537);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15538 = self__.mseq;
if(G__15538){
var bit__4416__auto__ = (G__15538.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4416__auto__) || (G__15538.cljs$core$INext$)){
return true;
} else {
if((!G__15538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15538);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15539 = self__.mseq;
if(G__15539){
var bit__4416__auto__ = (G__15539.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4416__auto__) || (G__15539.cljs$core$INext$)){
return true;
} else {
if((!G__15539.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15539);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15539);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15540 = self__.mseq;
if(G__15540){
var bit__4416__auto__ = (G__15540.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4416__auto__) || (G__15540.cljs$core$INext$)){
return true;
} else {
if((!G__15540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15540);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15541 = self__.mseq;
if(G__15541){
var bit__4416__auto__ = (G__15541.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4416__auto__) || (G__15541.cljs$core$INext$)){
return true;
} else {
if((!G__15541.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15541);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15541);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__15542_SHARP_,p2__15543_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3735__auto__ = p1__15542_SHARP_;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__15543_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__15544__i = 0, G__15544__a = new Array(arguments.length -  0);
while (G__15544__i < G__15544__a.length) {G__15544__a[G__15544__i] = arguments[G__15544__i + 0]; ++G__15544__i;}
  maps = new cljs.core.IndexedSeq(G__15544__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__15545){
var maps = cljs.core.seq(arglist__15545);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15548 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15549 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15548,G__15549) : f.call(null,G__15548,G__15549));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3735__auto__ = m1;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__15550__i = 0, G__15550__a = new Array(arguments.length -  1);
while (G__15550__i < G__15550__a.length) {G__15550__a[G__15550__i] = arguments[G__15550__i + 1]; ++G__15550__i;}
  maps = new cljs.core.IndexedSeq(G__15550__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__15551){
var f = cljs.core.first(arglist__15551);
var maps = cljs.core.rest(arglist__15551);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__15552 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__15553 = cljs.core.next(keys);
ret = G__15552;
keys = G__15553;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15556 = cljs.core.seq(coll);
var chunk__15557 = null;
var count__15558 = (0);
var i__15559 = (0);
while(true){
if((i__15559 < count__15558)){
var vec__15560 = chunk__15557.cljs$core$IIndexed$_nth$arity$2(null,i__15559);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15560,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15560,(1),null);
var G__15561_15566 = v;
var G__15562_15567 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15561_15566,G__15562_15567) : f.call(null,G__15561_15566,G__15562_15567));

var G__15568 = seq__15556;
var G__15569 = chunk__15557;
var G__15570 = count__15558;
var G__15571 = (i__15559 + (1));
seq__15556 = G__15568;
chunk__15557 = G__15569;
count__15558 = G__15570;
i__15559 = G__15571;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15556);
if(temp__4126__auto__){
var seq__15556__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15556__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__15556__$1);
var G__15572 = cljs.core.chunk_rest(seq__15556__$1);
var G__15573 = c__4522__auto__;
var G__15574 = cljs.core.count(c__4522__auto__);
var G__15575 = (0);
seq__15556 = G__15572;
chunk__15557 = G__15573;
count__15558 = G__15574;
i__15559 = G__15575;
continue;
} else {
var vec__15563 = cljs.core.first(seq__15556__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15563,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15563,(1),null);
var G__15564_15576 = v;
var G__15565_15577 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15564_15576,G__15565_15577) : f.call(null,G__15564_15576,G__15565_15577));

var G__15578 = cljs.core.next(seq__15556__$1);
var G__15579 = null;
var G__15580 = (0);
var G__15581 = (0);
seq__15556 = G__15578;
chunk__15557 = G__15579;
count__15558 = G__15580;
i__15559 = G__15581;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15554_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15554_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__15582 = null;
var G__15582__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15582__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15582 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15582__2.call(this,self__,k);
case 3:
return G__15582__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15582.cljs$core$IFn$_invoke$arity$2 = G__15582__2;
G__15582.cljs$core$IFn$_invoke$arity$3 = G__15582__3;
return G__15582;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args15555){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15555)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15583 = (i + (1));
var G__15584 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__15583;
out = G__15584;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__15585 = (i + (1));
var G__15586 = cljs.core._conj_BANG_(out,(items[i]));
i = G__15585;
out = G__15586;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__15588 = null;
var G__15588__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__15588__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__15588 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15588__2.call(this,self__,k);
case 3:
return G__15588__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15588.cljs$core$IFn$_invoke$arity$2 = G__15588__2;
G__15588.cljs$core$IFn$_invoke$arity$3 = G__15588__3;
return G__15588;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args15587){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15587)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15591 = cljs.core.seq(coll);
var chunk__15592 = null;
var count__15593 = (0);
var i__15594 = (0);
while(true){
if((i__15594 < count__15593)){
var vec__15595 = chunk__15592.cljs$core$IIndexed$_nth$arity$2(null,i__15594);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15595,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15595,(1),null);
var G__15596_15601 = v;
var G__15597_15602 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15596_15601,G__15597_15602) : f.call(null,G__15596_15601,G__15597_15602));

var G__15603 = seq__15591;
var G__15604 = chunk__15592;
var G__15605 = count__15593;
var G__15606 = (i__15594 + (1));
seq__15591 = G__15603;
chunk__15592 = G__15604;
count__15593 = G__15605;
i__15594 = G__15606;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15591);
if(temp__4126__auto__){
var seq__15591__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15591__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__15591__$1);
var G__15607 = cljs.core.chunk_rest(seq__15591__$1);
var G__15608 = c__4522__auto__;
var G__15609 = cljs.core.count(c__4522__auto__);
var G__15610 = (0);
seq__15591 = G__15607;
chunk__15592 = G__15608;
count__15593 = G__15609;
i__15594 = G__15610;
continue;
} else {
var vec__15598 = cljs.core.first(seq__15591__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15598,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15598,(1),null);
var G__15599_15611 = v;
var G__15600_15612 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15599_15611,G__15600_15612) : f.call(null,G__15599_15611,G__15600_15612));

var G__15613 = cljs.core.next(seq__15591__$1);
var G__15614 = null;
var G__15615 = (0);
var G__15616 = (0);
seq__15591 = G__15613;
chunk__15592 = G__15614;
count__15593 = G__15615;
i__15594 = G__15616;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15589_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15589_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__15617 = null;
var G__15617__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15617__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15617 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15617__2.call(this,self__,k);
case 3:
return G__15617__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15617.cljs$core$IFn$_invoke$arity$2 = G__15617__2;
G__15617.cljs$core$IFn$_invoke$arity$3 = G__15617__3;
return G__15617;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args15590){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15590)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4616__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4616__auto__.length)){
var G__15618 = (i + (1));
var G__15619 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__15618;
res = G__15619;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__15620 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__15621 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__15620;
out = G__15621;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__15622__delegate = function (keys){
return cljs.core.set(keys);
};
var G__15622 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15623__i = 0, G__15623__a = new Array(arguments.length -  0);
while (G__15623__i < G__15623__a.length) {G__15623__a[G__15623__i] = arguments[G__15623__i + 0]; ++G__15623__i;}
  keys = new cljs.core.IndexedSeq(G__15623__a,0);
} 
return G__15622__delegate.call(this,keys);};
G__15622.cljs$lang$maxFixedArity = 0;
G__15622.cljs$lang$applyTo = (function (arglist__15624){
var keys = cljs.core.seq(arglist__15624);
return G__15622__delegate(keys);
});
G__15622.cljs$core$IFn$_invoke$arity$variadic = G__15622__delegate;
return G__15622;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__15625 = null;
if (arguments.length > 0) {
var G__15626__i = 0, G__15626__a = new Array(arguments.length -  0);
while (G__15626__i < G__15626__a.length) {G__15626__a[G__15626__i] = arguments[G__15626__i + 0]; ++G__15626__i;}
G__15625 = new cljs.core.IndexedSeq(G__15626__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15627__i = 0, G__15627__a = new Array(arguments.length -  0);
while (G__15627__i < G__15627__a.length) {G__15627__a[G__15627__i] = arguments[G__15627__i + 0]; ++G__15627__i;}
  keys = new cljs.core.IndexedSeq(G__15627__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__15628){
var keys = cljs.core.seq(arglist__15628);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__15629__i = 0, G__15629__a = new Array(arguments.length -  1);
while (G__15629__i < G__15629__a.length) {G__15629__a[G__15629__i] = arguments[G__15629__i + 1]; ++G__15629__i;}
  keys = new cljs.core.IndexedSeq(G__15629__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__15630){
var comparator = cljs.core.first(arglist__15630);
var keys = cljs.core.rest(arglist__15630);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__15631_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15631_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__15631_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15632_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15632_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__15632_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__15653 = null;
var G__15653__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15653__1 = (function (result){
var G__15643 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15643) : rf.call(null,G__15643));
});
var G__15653__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__15644 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15644) : cljs.core.deref.call(null,G__15644));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__15645 = result;
var G__15646 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15645,G__15646) : rf.call(null,G__15645,G__15646));
}
});
G__15653 = function(result,input){
switch(arguments.length){
case 0:
return G__15653__0.call(this);
case 1:
return G__15653__1.call(this,result);
case 2:
return G__15653__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15653.cljs$core$IFn$_invoke$arity$0 = G__15653__0;
G__15653.cljs$core$IFn$_invoke$arity$1 = G__15653__1;
G__15653.cljs$core$IFn$_invoke$arity$2 = G__15653__2;
return G__15653;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__15651,seen__$1){
while(true){
var vec__15652 = p__15651;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15652,(0),null);
var xs__$1 = vec__15652;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__15654 = cljs.core.rest(s);
var G__15655 = seen__$1;
p__15651 = G__15654;
seen__$1 = G__15655;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__15656 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__15657 = cljs.core.next(s__$1);
ret = G__15656;
s__$1 = G__15657;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__15659 = x;
if(G__15659){
var bit__4409__auto__ = (G__15659.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4409__auto__) || (G__15659.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__15660 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__15661 = cljs.core.next(ks);
var G__15662 = cljs.core.next(vs);
map = G__15660;
ks = G__15661;
vs = G__15662;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__15673 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15673) : k.call(null,G__15673));
})() > (function (){var G__15674 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15674) : k.call(null,G__15674));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__15675__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15663_SHARP_,p2__15664_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__15663_SHARP_,p2__15664_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15675 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15676__i = 0, G__15676__a = new Array(arguments.length -  3);
while (G__15676__i < G__15676__a.length) {G__15676__a[G__15676__i] = arguments[G__15676__i + 3]; ++G__15676__i;}
  more = new cljs.core.IndexedSeq(G__15676__a,0);
} 
return G__15675__delegate.call(this,k,x,y,more);};
G__15675.cljs$lang$maxFixedArity = 3;
G__15675.cljs$lang$applyTo = (function (arglist__15677){
var k = cljs.core.first(arglist__15677);
arglist__15677 = cljs.core.next(arglist__15677);
var x = cljs.core.first(arglist__15677);
arglist__15677 = cljs.core.next(arglist__15677);
var y = cljs.core.first(arglist__15677);
var more = cljs.core.rest(arglist__15677);
return G__15675__delegate(k,x,y,more);
});
G__15675.cljs$core$IFn$_invoke$arity$variadic = G__15675__delegate;
return G__15675;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__15678 = null;
if (arguments.length > 3) {
var G__15679__i = 0, G__15679__a = new Array(arguments.length -  3);
while (G__15679__i < G__15679__a.length) {G__15679__a[G__15679__i] = arguments[G__15679__i + 3]; ++G__15679__i;}
G__15678 = new cljs.core.IndexedSeq(G__15679__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__15690 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15690) : k.call(null,G__15690));
})() < (function (){var G__15691 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15691) : k.call(null,G__15691));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__15692__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15680_SHARP_,p2__15681_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__15680_SHARP_,p2__15681_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15692 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15693__i = 0, G__15693__a = new Array(arguments.length -  3);
while (G__15693__i < G__15693__a.length) {G__15693__a[G__15693__i] = arguments[G__15693__i + 3]; ++G__15693__i;}
  more = new cljs.core.IndexedSeq(G__15693__a,0);
} 
return G__15692__delegate.call(this,k,x,y,more);};
G__15692.cljs$lang$maxFixedArity = 3;
G__15692.cljs$lang$applyTo = (function (arglist__15694){
var k = cljs.core.first(arglist__15694);
arglist__15694 = cljs.core.next(arglist__15694);
var x = cljs.core.first(arglist__15694);
arglist__15694 = cljs.core.next(arglist__15694);
var y = cljs.core.first(arglist__15694);
var more = cljs.core.rest(arglist__15694);
return G__15692__delegate(k,x,y,more);
});
G__15692.cljs$core$IFn$_invoke$arity$variadic = G__15692__delegate;
return G__15692;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__15695 = null;
if (arguments.length > 3) {
var G__15696__i = 0, G__15696__a = new Array(arguments.length -  3);
while (G__15696__i < G__15696__a.length) {G__15696__a[G__15696__i] = arguments[G__15696__i + 3]; ++G__15696__i;}
G__15695 = new cljs.core.IndexedSeq(G__15696__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__15713 = null;
var G__15713__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15713__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15708 = result;
var G__15709 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15708,G__15709) : rf.call(null,G__15708,G__15709));
})());
})());
var G__15710 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15710) : rf.call(null,G__15710));
});
var G__15713__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__15711 = result;
var G__15712 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15711,G__15712) : rf.call(null,G__15711,G__15712));
} else {
return result;
}
});
G__15713 = function(result,input){
switch(arguments.length){
case 0:
return G__15713__0.call(this);
case 1:
return G__15713__1.call(this,result);
case 2:
return G__15713__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15713.cljs$core$IFn$_invoke$arity$0 = G__15713__0;
G__15713.cljs$core$IFn$_invoke$arity$1 = G__15713__1;
G__15713.cljs$core$IFn$_invoke$arity$2 = G__15713__2;
return G__15713;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__15726 = null;
var G__15726__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15726__1 = (function (result){
var G__15721 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15721) : rf.call(null,G__15721));
});
var G__15726__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15722 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15722) : pred.call(null,G__15722));
})())){
var G__15723 = result;
var G__15724 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15723,G__15724) : rf.call(null,G__15723,G__15724));
} else {
return cljs.core.reduced(result);
}
});
G__15726 = function(result,input){
switch(arguments.length){
case 0:
return G__15726__0.call(this);
case 1:
return G__15726__1.call(this,result);
case 2:
return G__15726__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15726.cljs$core$IFn$_invoke$arity$0 = G__15726__0;
G__15726.cljs$core$IFn$_invoke$arity$1 = G__15726__1;
G__15726.cljs$core$IFn$_invoke$arity$2 = G__15726__2;
return G__15726;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__15725 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15725) : pred.call(null,G__15725));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__15731 = (function (){var G__15733 = cljs.core._entry_key(sc,e);
var G__15734 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15733,G__15734) : comp.call(null,G__15733,G__15734));
})();
var G__15732 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15731,G__15732) : test.call(null,G__15731,G__15732));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15738 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15738,(0),null);
var s = vec__15738;
if(cljs.core.truth_((function (){var G__15739 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15739) : include.call(null,G__15739));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15740 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15740,(0),null);
var s = vec__15740;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15744 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15744,(0),null);
var s = vec__15744;
if(cljs.core.truth_((function (){var G__15745 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15745) : include.call(null,G__15745));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15746 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15746,(0),null);
var s = vec__15746;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__15747 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15747) : Math.ceil.call(null,G__15747));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4156__auto__ = self__.__hash;
if(!((h__4156__auto__ == null))){
return h__4156__auto__;
} else {
var h__4156__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4156__auto____$1;

return h__4156__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__15748 = ret;
var G__15749 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15748,G__15749) : f.call(null,G__15748,G__15749));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__15750 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15750) : cljs.core.deref.call(null,G__15750));
} else {
var G__15751 = (i + self__.step);
var G__15752 = ret__$1;
i = G__15751;
ret = G__15752;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15770 = null;
var G__15770__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15770__1 = (function (result){
var G__15767 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15767) : rf.call(null,G__15767));
});
var G__15770__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__15768 = result;
var G__15769 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15768,G__15769) : rf.call(null,G__15768,G__15769));
} else {
return result;
}
});
G__15770 = function(result,input){
switch(arguments.length){
case 0:
return G__15770__0.call(this);
case 1:
return G__15770__1.call(this,result);
case 2:
return G__15770__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15770.cljs$core$IFn$_invoke$arity$0 = G__15770__0;
G__15770.cljs$core$IFn$_invoke$arity$1 = G__15770__1;
G__15770.cljs$core$IFn$_invoke$arity$2 = G__15770__2;
return G__15770;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__15792 = null;
var G__15792__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15792__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15783 = result;
var G__15784 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15783,G__15784) : rf.call(null,G__15783,G__15784));
})());
})());
var G__15785 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15785) : rf.call(null,G__15785));
});
var G__15792__2 = (function (result,input){
var pval = (function (){var G__15786 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15786) : cljs.core.deref.call(null,G__15786));
})();
var val = (function (){var G__15787 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15787) : f.call(null,G__15787));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15788 = result;
var G__15789 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15788,G__15789) : rf.call(null,G__15788,G__15789));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15792 = function(result,input){
switch(arguments.length){
case 0:
return G__15792__0.call(this);
case 1:
return G__15792__1.call(this,result);
case 2:
return G__15792__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15792.cljs$core$IFn$_invoke$arity$0 = G__15792__0;
G__15792.cljs$core$IFn$_invoke$arity$1 = G__15792__1;
G__15792.cljs$core$IFn$_invoke$arity$2 = G__15792__2;
return G__15792;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15790 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15790) : f.call(null,G__15790));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__15771_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15791 = p1__15771_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15791) : f.call(null,G__15791));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15801 = init;
var G__15802 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15801,G__15802) : f.call(null,G__15801,G__15802));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__15897 = null;
var G__15897__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__15897__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15855 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15855) : f.call(null,G__15855));
})()],null));
});
var G__15897__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15856 = x;
var G__15857 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15856,G__15857) : f.call(null,G__15856,G__15857));
})()],null));
});
var G__15897__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15858 = x;
var G__15859 = y;
var G__15860 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15858,G__15859,G__15860) : f.call(null,G__15858,G__15859,G__15860));
})()],null));
});
var G__15897__4 = (function() { 
var G__15898__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__15898 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15899__i = 0, G__15899__a = new Array(arguments.length -  3);
while (G__15899__i < G__15899__a.length) {G__15899__a[G__15899__i] = arguments[G__15899__i + 3]; ++G__15899__i;}
  args = new cljs.core.IndexedSeq(G__15899__a,0);
} 
return G__15898__delegate.call(this,x,y,z,args);};
G__15898.cljs$lang$maxFixedArity = 3;
G__15898.cljs$lang$applyTo = (function (arglist__15900){
var x = cljs.core.first(arglist__15900);
arglist__15900 = cljs.core.next(arglist__15900);
var y = cljs.core.first(arglist__15900);
arglist__15900 = cljs.core.next(arglist__15900);
var z = cljs.core.first(arglist__15900);
var args = cljs.core.rest(arglist__15900);
return G__15898__delegate(x,y,z,args);
});
G__15898.cljs$core$IFn$_invoke$arity$variadic = G__15898__delegate;
return G__15898;
})()
;
G__15897 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15897__0.call(this);
case 1:
return G__15897__1.call(this,x);
case 2:
return G__15897__2.call(this,x,y);
case 3:
return G__15897__3.call(this,x,y,z);
default:
var G__15901 = null;
if (arguments.length > 3) {
var G__15902__i = 0, G__15902__a = new Array(arguments.length -  3);
while (G__15902__i < G__15902__a.length) {G__15902__a[G__15902__i] = arguments[G__15902__i + 3]; ++G__15902__i;}
G__15901 = new cljs.core.IndexedSeq(G__15902__a,0);
}
return G__15897__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15897.cljs$lang$maxFixedArity = 3;
G__15897.cljs$lang$applyTo = G__15897__4.cljs$lang$applyTo;
G__15897.cljs$core$IFn$_invoke$arity$0 = G__15897__0;
G__15897.cljs$core$IFn$_invoke$arity$1 = G__15897__1;
G__15897.cljs$core$IFn$_invoke$arity$2 = G__15897__2;
G__15897.cljs$core$IFn$_invoke$arity$3 = G__15897__3;
G__15897.cljs$core$IFn$_invoke$arity$variadic = G__15897__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15897;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__15903 = null;
var G__15903__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__15903__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15861 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15861) : f.call(null,G__15861));
})(),(function (){var G__15862 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15862) : g.call(null,G__15862));
})()],null));
});
var G__15903__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15863 = x;
var G__15864 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15863,G__15864) : f.call(null,G__15863,G__15864));
})(),(function (){var G__15865 = x;
var G__15866 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15865,G__15866) : g.call(null,G__15865,G__15866));
})()],null));
});
var G__15903__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15867 = x;
var G__15868 = y;
var G__15869 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15867,G__15868,G__15869) : f.call(null,G__15867,G__15868,G__15869));
})(),(function (){var G__15870 = x;
var G__15871 = y;
var G__15872 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15870,G__15871,G__15872) : g.call(null,G__15870,G__15871,G__15872));
})()],null));
});
var G__15903__4 = (function() { 
var G__15904__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__15904 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15905__i = 0, G__15905__a = new Array(arguments.length -  3);
while (G__15905__i < G__15905__a.length) {G__15905__a[G__15905__i] = arguments[G__15905__i + 3]; ++G__15905__i;}
  args = new cljs.core.IndexedSeq(G__15905__a,0);
} 
return G__15904__delegate.call(this,x,y,z,args);};
G__15904.cljs$lang$maxFixedArity = 3;
G__15904.cljs$lang$applyTo = (function (arglist__15906){
var x = cljs.core.first(arglist__15906);
arglist__15906 = cljs.core.next(arglist__15906);
var y = cljs.core.first(arglist__15906);
arglist__15906 = cljs.core.next(arglist__15906);
var z = cljs.core.first(arglist__15906);
var args = cljs.core.rest(arglist__15906);
return G__15904__delegate(x,y,z,args);
});
G__15904.cljs$core$IFn$_invoke$arity$variadic = G__15904__delegate;
return G__15904;
})()
;
G__15903 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15903__0.call(this);
case 1:
return G__15903__1.call(this,x);
case 2:
return G__15903__2.call(this,x,y);
case 3:
return G__15903__3.call(this,x,y,z);
default:
var G__15907 = null;
if (arguments.length > 3) {
var G__15908__i = 0, G__15908__a = new Array(arguments.length -  3);
while (G__15908__i < G__15908__a.length) {G__15908__a[G__15908__i] = arguments[G__15908__i + 3]; ++G__15908__i;}
G__15907 = new cljs.core.IndexedSeq(G__15908__a,0);
}
return G__15903__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15903.cljs$lang$maxFixedArity = 3;
G__15903.cljs$lang$applyTo = G__15903__4.cljs$lang$applyTo;
G__15903.cljs$core$IFn$_invoke$arity$0 = G__15903__0;
G__15903.cljs$core$IFn$_invoke$arity$1 = G__15903__1;
G__15903.cljs$core$IFn$_invoke$arity$2 = G__15903__2;
G__15903.cljs$core$IFn$_invoke$arity$3 = G__15903__3;
G__15903.cljs$core$IFn$_invoke$arity$variadic = G__15903__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15903;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__15909 = null;
var G__15909__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__15909__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15873 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15873) : f.call(null,G__15873));
})(),(function (){var G__15874 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15874) : g.call(null,G__15874));
})(),(function (){var G__15875 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15875) : h.call(null,G__15875));
})()],null));
});
var G__15909__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15876 = x;
var G__15877 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15876,G__15877) : f.call(null,G__15876,G__15877));
})(),(function (){var G__15878 = x;
var G__15879 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15878,G__15879) : g.call(null,G__15878,G__15879));
})(),(function (){var G__15880 = x;
var G__15881 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15880,G__15881) : h.call(null,G__15880,G__15881));
})()],null));
});
var G__15909__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15882 = x;
var G__15883 = y;
var G__15884 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15882,G__15883,G__15884) : f.call(null,G__15882,G__15883,G__15884));
})(),(function (){var G__15885 = x;
var G__15886 = y;
var G__15887 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15885,G__15886,G__15887) : g.call(null,G__15885,G__15886,G__15887));
})(),(function (){var G__15888 = x;
var G__15889 = y;
var G__15890 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15888,G__15889,G__15890) : h.call(null,G__15888,G__15889,G__15890));
})()],null));
});
var G__15909__4 = (function() { 
var G__15910__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__15910 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15911__i = 0, G__15911__a = new Array(arguments.length -  3);
while (G__15911__i < G__15911__a.length) {G__15911__a[G__15911__i] = arguments[G__15911__i + 3]; ++G__15911__i;}
  args = new cljs.core.IndexedSeq(G__15911__a,0);
} 
return G__15910__delegate.call(this,x,y,z,args);};
G__15910.cljs$lang$maxFixedArity = 3;
G__15910.cljs$lang$applyTo = (function (arglist__15912){
var x = cljs.core.first(arglist__15912);
arglist__15912 = cljs.core.next(arglist__15912);
var y = cljs.core.first(arglist__15912);
arglist__15912 = cljs.core.next(arglist__15912);
var z = cljs.core.first(arglist__15912);
var args = cljs.core.rest(arglist__15912);
return G__15910__delegate(x,y,z,args);
});
G__15910.cljs$core$IFn$_invoke$arity$variadic = G__15910__delegate;
return G__15910;
})()
;
G__15909 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15909__0.call(this);
case 1:
return G__15909__1.call(this,x);
case 2:
return G__15909__2.call(this,x,y);
case 3:
return G__15909__3.call(this,x,y,z);
default:
var G__15913 = null;
if (arguments.length > 3) {
var G__15914__i = 0, G__15914__a = new Array(arguments.length -  3);
while (G__15914__i < G__15914__a.length) {G__15914__a[G__15914__i] = arguments[G__15914__i + 3]; ++G__15914__i;}
G__15913 = new cljs.core.IndexedSeq(G__15914__a,0);
}
return G__15909__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15909.cljs$lang$maxFixedArity = 3;
G__15909.cljs$lang$applyTo = G__15909__4.cljs$lang$applyTo;
G__15909.cljs$core$IFn$_invoke$arity$0 = G__15909__0;
G__15909.cljs$core$IFn$_invoke$arity$1 = G__15909__1;
G__15909.cljs$core$IFn$_invoke$arity$2 = G__15909__2;
G__15909.cljs$core$IFn$_invoke$arity$3 = G__15909__3;
G__15909.cljs$core$IFn$_invoke$arity$variadic = G__15909__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15909;
})()
});
var juxt__4 = (function() { 
var G__15915__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__15916 = null;
var G__15916__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15803_SHARP_,p2__15804_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15803_SHARP_,(function (){return (p2__15804_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15804_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15804_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15916__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15805_SHARP_,p2__15806_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15805_SHARP_,(function (){var G__15891 = x;
return (p2__15806_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15806_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15891) : p2__15806_SHARP_.call(null,G__15891));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15916__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15807_SHARP_,p2__15808_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15807_SHARP_,(function (){var G__15892 = x;
var G__15893 = y;
return (p2__15808_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15808_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15892,G__15893) : p2__15808_SHARP_.call(null,G__15892,G__15893));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15916__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15809_SHARP_,p2__15810_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15809_SHARP_,(function (){var G__15894 = x;
var G__15895 = y;
var G__15896 = z;
return (p2__15810_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15810_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15894,G__15895,G__15896) : p2__15810_SHARP_.call(null,G__15894,G__15895,G__15896));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15916__4 = (function() { 
var G__15917__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15811_SHARP_,p2__15812_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15811_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15812_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__15917 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15918__i = 0, G__15918__a = new Array(arguments.length -  3);
while (G__15918__i < G__15918__a.length) {G__15918__a[G__15918__i] = arguments[G__15918__i + 3]; ++G__15918__i;}
  args = new cljs.core.IndexedSeq(G__15918__a,0);
} 
return G__15917__delegate.call(this,x,y,z,args);};
G__15917.cljs$lang$maxFixedArity = 3;
G__15917.cljs$lang$applyTo = (function (arglist__15919){
var x = cljs.core.first(arglist__15919);
arglist__15919 = cljs.core.next(arglist__15919);
var y = cljs.core.first(arglist__15919);
arglist__15919 = cljs.core.next(arglist__15919);
var z = cljs.core.first(arglist__15919);
var args = cljs.core.rest(arglist__15919);
return G__15917__delegate(x,y,z,args);
});
G__15917.cljs$core$IFn$_invoke$arity$variadic = G__15917__delegate;
return G__15917;
})()
;
G__15916 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15916__0.call(this);
case 1:
return G__15916__1.call(this,x);
case 2:
return G__15916__2.call(this,x,y);
case 3:
return G__15916__3.call(this,x,y,z);
default:
var G__15920 = null;
if (arguments.length > 3) {
var G__15921__i = 0, G__15921__a = new Array(arguments.length -  3);
while (G__15921__i < G__15921__a.length) {G__15921__a[G__15921__i] = arguments[G__15921__i + 3]; ++G__15921__i;}
G__15920 = new cljs.core.IndexedSeq(G__15921__a,0);
}
return G__15916__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15916.cljs$lang$maxFixedArity = 3;
G__15916.cljs$lang$applyTo = G__15916__4.cljs$lang$applyTo;
G__15916.cljs$core$IFn$_invoke$arity$0 = G__15916__0;
G__15916.cljs$core$IFn$_invoke$arity$1 = G__15916__1;
G__15916.cljs$core$IFn$_invoke$arity$2 = G__15916__2;
G__15916.cljs$core$IFn$_invoke$arity$3 = G__15916__3;
G__15916.cljs$core$IFn$_invoke$arity$variadic = G__15916__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15916;
})()
;})(fs__$1))
};
var G__15915 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15922__i = 0, G__15922__a = new Array(arguments.length -  3);
while (G__15922__i < G__15922__a.length) {G__15922__a[G__15922__i] = arguments[G__15922__i + 3]; ++G__15922__i;}
  fs = new cljs.core.IndexedSeq(G__15922__a,0);
} 
return G__15915__delegate.call(this,f,g,h,fs);};
G__15915.cljs$lang$maxFixedArity = 3;
G__15915.cljs$lang$applyTo = (function (arglist__15923){
var f = cljs.core.first(arglist__15923);
arglist__15923 = cljs.core.next(arglist__15923);
var g = cljs.core.first(arglist__15923);
arglist__15923 = cljs.core.next(arglist__15923);
var h = cljs.core.first(arglist__15923);
var fs = cljs.core.rest(arglist__15923);
return G__15915__delegate(f,g,h,fs);
});
G__15915.cljs$core$IFn$_invoke$arity$variadic = G__15915__delegate;
return G__15915;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__15924 = null;
if (arguments.length > 3) {
var G__15925__i = 0, G__15925__a = new Array(arguments.length -  3);
while (G__15925__i < G__15925__a.length) {G__15925__a[G__15925__i] = arguments[G__15925__i + 3]; ++G__15925__i;}
G__15924 = new cljs.core.IndexedSeq(G__15925__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__15924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__15926 = cljs.core.next(coll);
coll = G__15926;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__15927 = (n - (1));
var G__15928 = cljs.core.next(coll);
n = G__15927;
coll = G__15928;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__15932 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15932,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15932,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15932,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_15940 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__15941_15947 = cljs.core.first(coll);
var G__15942_15948 = writer;
var G__15943_15949 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15941_15947,G__15942_15948,G__15943_15949) : print_one.call(null,G__15941_15947,G__15942_15948,G__15943_15949));
} else {
}

var coll_15950__$1 = cljs.core.next(coll);
var n_15951 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_15950__$1) && (((n_15951 == null)) || (!((n_15951 === (0)))))){
cljs.core._write(writer,sep);

var G__15944_15952 = cljs.core.first(coll_15950__$1);
var G__15945_15953 = writer;
var G__15946_15954 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15944_15952,G__15945_15953,G__15946_15954) : print_one.call(null,G__15944_15952,G__15945_15953,G__15946_15954));

var G__15955 = cljs.core.next(coll_15950__$1);
var G__15956 = (n_15951 - (1));
coll_15950__$1 = G__15955;
n_15951 = G__15956;
continue;
} else {
if((cljs.core.seq(coll_15950__$1)) && ((n_15951 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15940;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__15961 = cljs.core.seq(ss);
var chunk__15962 = null;
var count__15963 = (0);
var i__15964 = (0);
while(true){
if((i__15964 < count__15963)){
var s = chunk__15962.cljs$core$IIndexed$_nth$arity$2(null,i__15964);
cljs.core._write(writer,s);

var G__15965 = seq__15961;
var G__15966 = chunk__15962;
var G__15967 = count__15963;
var G__15968 = (i__15964 + (1));
seq__15961 = G__15965;
chunk__15962 = G__15966;
count__15963 = G__15967;
i__15964 = G__15968;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15961);
if(temp__4126__auto__){
var seq__15961__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15961__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__15961__$1);
var G__15969 = cljs.core.chunk_rest(seq__15961__$1);
var G__15970 = c__4522__auto__;
var G__15971 = cljs.core.count(c__4522__auto__);
var G__15972 = (0);
seq__15961 = G__15969;
chunk__15962 = G__15970;
count__15963 = G__15971;
i__15964 = G__15972;
continue;
} else {
var s = cljs.core.first(seq__15961__$1);
cljs.core._write(writer,s);

var G__15973 = cljs.core.next(seq__15961__$1);
var G__15974 = null;
var G__15975 = (0);
var G__15976 = (0);
seq__15961 = G__15973;
chunk__15962 = G__15974;
count__15963 = G__15975;
i__15964 = G__15976;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__15977__i = 0, G__15977__a = new Array(arguments.length -  1);
while (G__15977__i < G__15977__a.length) {G__15977__a[G__15977__i] = arguments[G__15977__i + 1]; ++G__15977__i;}
  ss = new cljs.core.IndexedSeq(G__15977__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__15978){
var writer = cljs.core.first(arglist__15978);
var ss = cljs.core.rest(arglist__15978);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj15980 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj15980;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__15983 = "[\\\\\"\b\f\n\r\t]";
var G__15984 = "g";
return RegExp(G__15983,G__15984);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3723__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3723__auto__)){
var and__3723__auto____$1 = (function (){var G__15998 = obj;
if(G__15998){
var bit__4416__auto__ = (G__15998.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4416__auto__) || (G__15998.cljs$core$IMeta$)){
return true;
} else {
if((!G__15998.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15998);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15998);
}
})();
if(and__3723__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__15999 = obj;
if(G__15999){
var bit__4409__auto__ = (G__15999.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4409__auto__) || (G__15999.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__16000 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__16001 = pr_writer;
var G__16002 = writer;
var G__16003 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16000,G__16001,G__16002,G__16003) : cljs.core.print_map.call(null,G__16000,G__16001,G__16002,G__16003));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__16004 = obj;
return goog.isString(G__16004);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__16006 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__16006;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__16005 = obj;
if(G__16005){
var bit__4416__auto__ = (G__16005.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4416__auto__) || (G__16005.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__16005.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16005);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16005);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__16011 = cljs.core.seq(cljs.core.next(objs));
var chunk__16012 = null;
var count__16013 = (0);
var i__16014 = (0);
while(true){
if((i__16014 < count__16013)){
var obj = chunk__16012.cljs$core$IIndexed$_nth$arity$2(null,i__16014);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16015 = seq__16011;
var G__16016 = chunk__16012;
var G__16017 = count__16013;
var G__16018 = (i__16014 + (1));
seq__16011 = G__16015;
chunk__16012 = G__16016;
count__16013 = G__16017;
i__16014 = G__16018;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16011);
if(temp__4126__auto__){
var seq__16011__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16011__$1)){
var c__4522__auto__ = cljs.core.chunk_first(seq__16011__$1);
var G__16019 = cljs.core.chunk_rest(seq__16011__$1);
var G__16020 = c__4522__auto__;
var G__16021 = cljs.core.count(c__4522__auto__);
var G__16022 = (0);
seq__16011 = G__16019;
chunk__16012 = G__16020;
count__16013 = G__16021;
i__16014 = G__16022;
continue;
} else {
var obj = cljs.core.first(seq__16011__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16023 = cljs.core.next(seq__16011__$1);
var G__16024 = null;
var G__16025 = (0);
var G__16026 = (0);
seq__16011 = G__16023;
chunk__16012 = G__16024;
count__16013 = G__16025;
i__16014 = G__16026;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16027__i = 0, G__16027__a = new Array(arguments.length -  0);
while (G__16027__i < G__16027__a.length) {G__16027__a[G__16027__i] = arguments[G__16027__i + 0]; ++G__16027__i;}
  objs = new cljs.core.IndexedSeq(G__16027__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__16028){
var objs = cljs.core.seq(arglist__16028);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16029__i = 0, G__16029__a = new Array(arguments.length -  0);
while (G__16029__i < G__16029__a.length) {G__16029__a[G__16029__i] = arguments[G__16029__i + 0]; ++G__16029__i;}
  objs = new cljs.core.IndexedSeq(G__16029__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__16030){
var objs = cljs.core.seq(arglist__16030);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16031__i = 0, G__16031__a = new Array(arguments.length -  0);
while (G__16031__i < G__16031__a.length) {G__16031__a[G__16031__i] = arguments[G__16031__i + 0]; ++G__16031__i;}
  objs = new cljs.core.IndexedSeq(G__16031__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__16032){
var objs = cljs.core.seq(arglist__16032);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16033__i = 0, G__16033__a = new Array(arguments.length -  0);
while (G__16033__i < G__16033__a.length) {G__16033__a[G__16033__i] = arguments[G__16033__i + 0]; ++G__16033__i;}
  objs = new cljs.core.IndexedSeq(G__16033__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__16034){
var objs = cljs.core.seq(arglist__16034);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16035__i = 0, G__16035__a = new Array(arguments.length -  0);
while (G__16035__i < G__16035__a.length) {G__16035__a[G__16035__i] = arguments[G__16035__i + 0]; ++G__16035__i;}
  objs = new cljs.core.IndexedSeq(G__16035__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__16036){
var objs = cljs.core.seq(arglist__16036);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16037__i = 0, G__16037__a = new Array(arguments.length -  0);
while (G__16037__i < G__16037__a.length) {G__16037__a[G__16037__i] = arguments[G__16037__i + 0]; ++G__16037__i;}
  objs = new cljs.core.IndexedSeq(G__16037__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__16038){
var objs = cljs.core.seq(arglist__16038);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16039__i = 0, G__16039__a = new Array(arguments.length -  0);
while (G__16039__i < G__16039__a.length) {G__16039__a[G__16039__i] = arguments[G__16039__i + 0]; ++G__16039__i;}
  objs = new cljs.core.IndexedSeq(G__16039__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__16040){
var objs = cljs.core.seq(arglist__16040);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16041__i = 0, G__16041__a = new Array(arguments.length -  0);
while (G__16041__i < G__16041__a.length) {G__16041__a[G__16041__i] = arguments[G__16041__i + 0]; ++G__16041__i;}
  objs = new cljs.core.IndexedSeq(G__16041__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__16042){
var objs = cljs.core.seq(arglist__16042);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__16049_16055 = cljs.core.key(e);
var G__16050_16056 = w;
var G__16051_16057 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16049_16055,G__16050_16056,G__16051_16057) : print_one.call(null,G__16049_16055,G__16050_16056,G__16051_16057));

cljs.core._write(w," ");

var G__16052 = cljs.core.val(e);
var G__16053 = w;
var G__16054 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16052,G__16053,G__16054) : print_one.call(null,G__16052,G__16053,G__16054));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__16058__i = 0, G__16058__a = new Array(arguments.length -  2);
while (G__16058__i < G__16058__a.length) {G__16058__a[G__16058__i] = arguments[G__16058__i + 2]; ++G__16058__i;}
  args = new cljs.core.IndexedSeq(G__16058__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__16059){
var iref = cljs.core.first(arglist__16059);
arglist__16059 = cljs.core.next(arglist__16059);
var f = cljs.core.first(arglist__16059);
var args = cljs.core.rest(arglist__16059);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__16062 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16062) : cljs.core.atom.call(null,G__16062));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__16064 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16064) : cljs.core.deref.call(null,G__16064));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__16065_SHARP_,p2__16066_SHARP_){
var ret = (function (){var G__16069 = p1__16065_SHARP_;
var G__16070 = p2__16066_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16069,G__16070) : rf.call(null,G__16069,G__16070));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__16073 = null;
var G__16073__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16073__1 = (function (result){
var G__16072 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16072) : rf.call(null,G__16072));
});
var G__16073__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__16073 = function(result,input){
switch(arguments.length){
case 0:
return G__16073__0.call(this);
case 1:
return G__16073__1.call(this,result);
case 2:
return G__16073__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16073.cljs$core$IFn$_invoke$arity$0 = G__16073__0;
G__16073.cljs$core$IFn$_invoke$arity$1 = G__16073__1;
G__16073.cljs$core$IFn$_invoke$arity$2 = G__16073__2;
return G__16073;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__16082 = null;
var G__16082__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16082__1 = (function (result){
var G__16078 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16078) : rf.call(null,G__16078));
});
var G__16082__2 = (function (result,input){
var prior = (function (){var G__16079 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16079) : cljs.core.deref.call(null,G__16079));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__16080 = result;
var G__16081 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16080,G__16081) : rf.call(null,G__16080,G__16081));
}
});
G__16082 = function(result,input){
switch(arguments.length){
case 0:
return G__16082__0.call(this);
case 1:
return G__16082__1.call(this,result);
case 2:
return G__16082__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16082.cljs$core$IFn$_invoke$arity$0 = G__16082__0;
G__16082.cljs$core$IFn$_invoke$arity$1 = G__16082__1;
G__16082.cljs$core$IFn$_invoke$arity$2 = G__16082__2;
return G__16082;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4713__auto__ = this;
return cljs.core.es6_iterator(this__4713__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16084_SHARP_,p2__16083_SHARP_){
var G__16086 = p2__16083_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16086) : proc.call(null,G__16086));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj16088 = {};
return obj16088;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3723__auto__ = x;
if(and__3723__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3723__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4379__auto__ = (((x == null))?null:x);
return (function (){var or__3735__auto__ = (cljs.core._clj__GT_js[(function (){var G__16092 = x__4379__auto__;
return goog.typeOf(G__16092);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3723__auto__ = x;
if(and__3723__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3723__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4379__auto__ = (((x == null))?null:x);
return (function (){var or__3735__auto__ = (cljs.core._key__GT_js[(function (){var G__16096 = x__4379__auto__;
return goog.typeOf(G__16096);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__16099 = k;
if(G__16099){
var bit__4416__auto__ = null;
if(cljs.core.truth_((function (){var or__3735__auto__ = bit__4416__auto__;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return G__16099.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16099.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16099);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16099);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__16100 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16100) : cljs.core.clj__GT_js.call(null,G__16100));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__16116 = x;
if(G__16116){
var bit__4416__auto__ = null;
if(cljs.core.truth_((function (){var or__3735__auto__ = bit__4416__auto__;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return G__16116.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16116.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16116);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16116);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj16118 = {};
return obj16118;
})();
var seq__16119_16129 = cljs.core.seq(x);
var chunk__16120_16130 = null;
var count__16121_16131 = (0);
var i__16122_16132 = (0);
while(true){
if((i__16122_16132 < count__16121_16131)){
var vec__16123_16133 = chunk__16120_16130.cljs$core$IIndexed$_nth$arity$2(null,i__16122_16132);
var k_16134 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16123_16133,(0),null);
var v_16135 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16123_16133,(1),null);
(m[cljs.core.key__GT_js(k_16134)] = clj__GT_js(v_16135));

var G__16136 = seq__16119_16129;
var G__16137 = chunk__16120_16130;
var G__16138 = count__16121_16131;
var G__16139 = (i__16122_16132 + (1));
seq__16119_16129 = G__16136;
chunk__16120_16130 = G__16137;
count__16121_16131 = G__16138;
i__16122_16132 = G__16139;
continue;
} else {
var temp__4126__auto___16140 = cljs.core.seq(seq__16119_16129);
if(temp__4126__auto___16140){
var seq__16119_16141__$1 = temp__4126__auto___16140;
if(cljs.core.chunked_seq_QMARK_(seq__16119_16141__$1)){
var c__4522__auto___16142 = cljs.core.chunk_first(seq__16119_16141__$1);
var G__16143 = cljs.core.chunk_rest(seq__16119_16141__$1);
var G__16144 = c__4522__auto___16142;
var G__16145 = cljs.core.count(c__4522__auto___16142);
var G__16146 = (0);
seq__16119_16129 = G__16143;
chunk__16120_16130 = G__16144;
count__16121_16131 = G__16145;
i__16122_16132 = G__16146;
continue;
} else {
var vec__16124_16147 = cljs.core.first(seq__16119_16141__$1);
var k_16148 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16124_16147,(0),null);
var v_16149 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16124_16147,(1),null);
(m[cljs.core.key__GT_js(k_16148)] = clj__GT_js(v_16149));

var G__16150 = cljs.core.next(seq__16119_16141__$1);
var G__16151 = null;
var G__16152 = (0);
var G__16153 = (0);
seq__16119_16129 = G__16150;
chunk__16120_16130 = G__16151;
count__16121_16131 = G__16152;
i__16122_16132 = G__16153;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__16125_16154 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__16126_16155 = null;
var count__16127_16156 = (0);
var i__16128_16157 = (0);
while(true){
if((i__16128_16157 < count__16127_16156)){
var x_16158__$1 = chunk__16126_16155.cljs$core$IIndexed$_nth$arity$2(null,i__16128_16157);
arr.push(x_16158__$1);

var G__16159 = seq__16125_16154;
var G__16160 = chunk__16126_16155;
var G__16161 = count__16127_16156;
var G__16162 = (i__16128_16157 + (1));
seq__16125_16154 = G__16159;
chunk__16126_16155 = G__16160;
count__16127_16156 = G__16161;
i__16128_16157 = G__16162;
continue;
} else {
var temp__4126__auto___16163 = cljs.core.seq(seq__16125_16154);
if(temp__4126__auto___16163){
var seq__16125_16164__$1 = temp__4126__auto___16163;
if(cljs.core.chunked_seq_QMARK_(seq__16125_16164__$1)){
var c__4522__auto___16165 = cljs.core.chunk_first(seq__16125_16164__$1);
var G__16166 = cljs.core.chunk_rest(seq__16125_16164__$1);
var G__16167 = c__4522__auto___16165;
var G__16168 = cljs.core.count(c__4522__auto___16165);
var G__16169 = (0);
seq__16125_16154 = G__16166;
chunk__16126_16155 = G__16167;
count__16127_16156 = G__16168;
i__16128_16157 = G__16169;
continue;
} else {
var x_16170__$1 = cljs.core.first(seq__16125_16164__$1);
arr.push(x_16170__$1);

var G__16171 = cljs.core.next(seq__16125_16164__$1);
var G__16172 = null;
var G__16173 = (0);
var G__16174 = (0);
seq__16125_16154 = G__16171;
chunk__16126_16155 = G__16172;
count__16127_16156 = G__16173;
i__16128_16157 = G__16174;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj16176 = {};
return obj16176;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3723__auto__ = x;
if(and__3723__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3723__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4379__auto__ = (((x == null))?null:x);
return (function (){var or__3735__auto__ = (cljs.core._js__GT_clj[(function (){var G__16180 = x__4379__auto__;
return goog.typeOf(G__16180);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__16237__delegate = function (x,opts){
var map__16210 = opts;
var map__16210__$1 = ((cljs.core.seq_QMARK_(map__16210))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__16210):map__16210);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16210__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__16210,map__16210__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__16226 = x__$1;
if(G__16226){
var bit__4416__auto__ = null;
if(cljs.core.truth_((function (){var or__3735__auto__ = bit__4416__auto__;
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return G__16226.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__16226.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16226);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16226);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4491__auto__ = ((function (map__16210,map__16210__$1,keywordize_keys,keyfn){
return (function iter__16227(s__16228){
return (new cljs.core.LazySeq(null,((function (map__16210,map__16210__$1,keywordize_keys,keyfn){
return (function (){
var s__16228__$1 = s__16228;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__16228__$1);
if(temp__4126__auto__){
var s__16228__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__16228__$2)){
var c__4489__auto__ = cljs.core.chunk_first(s__16228__$2);
var size__4490__auto__ = cljs.core.count(c__4489__auto__);
var b__16230 = cljs.core.chunk_buffer(size__4490__auto__);
if((function (){var i__16229 = (0);
while(true){
if((i__16229 < size__4490__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4489__auto__,i__16229);
cljs.core.chunk_append(b__16230,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16235 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16235) : keyfn.call(null,G__16235));
})(),thisfn((x__$1[k]))], null));

var G__16238 = (i__16229 + (1));
i__16229 = G__16238;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__16230),iter__16227(cljs.core.chunk_rest(s__16228__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__16230),null);
}
} else {
var k = cljs.core.first(s__16228__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16236 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16236) : keyfn.call(null,G__16236));
})(),thisfn((x__$1[k]))], null),iter__16227(cljs.core.rest(s__16228__$2)));
}
} else {
return null;
}
break;
}
});})(map__16210,map__16210__$1,keywordize_keys,keyfn))
,null,null));
});})(map__16210,map__16210__$1,keywordize_keys,keyfn))
;
return iter__4491__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__16210,map__16210__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__16237 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__16239__i = 0, G__16239__a = new Array(arguments.length -  1);
while (G__16239__i < G__16239__a.length) {G__16239__a[G__16239__i] = arguments[G__16239__i + 1]; ++G__16239__i;}
  opts = new cljs.core.IndexedSeq(G__16239__a,0);
} 
return G__16237__delegate.call(this,x,opts);};
G__16237.cljs$lang$maxFixedArity = 1;
G__16237.cljs$lang$applyTo = (function (arglist__16240){
var x = cljs.core.first(arglist__16240);
var opts = cljs.core.rest(arglist__16240);
return G__16237__delegate(x,opts);
});
G__16237.cljs$core$IFn$_invoke$arity$variadic = G__16237__delegate;
return G__16237;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__16241 = null;
if (arguments.length > 1) {
var G__16242__i = 0, G__16242__a = new Array(arguments.length -  1);
while (G__16242__i < G__16242__a.length) {G__16242__a[G__16242__i] = arguments[G__16242__i + 1]; ++G__16242__i;}
G__16241 = new cljs.core.IndexedSeq(G__16242__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__16245 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16245) : cljs.core.atom.call(null,G__16245));
})();
return ((function (mem){
return (function() { 
var G__16247__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__16246 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16246) : cljs.core.deref.call(null,G__16246));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__16247 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16248__i = 0, G__16248__a = new Array(arguments.length -  0);
while (G__16248__i < G__16248__a.length) {G__16248__a[G__16248__i] = arguments[G__16248__i + 0]; ++G__16248__i;}
  args = new cljs.core.IndexedSeq(G__16248__a,0);
} 
return G__16247__delegate.call(this,args);};
G__16247.cljs$lang$maxFixedArity = 0;
G__16247.cljs$lang$applyTo = (function (arglist__16249){
var args = cljs.core.seq(arglist__16249);
return G__16247__delegate(args);
});
G__16247.cljs$core$IFn$_invoke$arity$variadic = G__16247__delegate;
return G__16247;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__16251 = ret;
f = G__16251;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__16252__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__16252 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16253__i = 0, G__16253__a = new Array(arguments.length -  1);
while (G__16253__i < G__16253__a.length) {G__16253__a[G__16253__i] = arguments[G__16253__i + 1]; ++G__16253__i;}
  args = new cljs.core.IndexedSeq(G__16253__a,0);
} 
return G__16252__delegate.call(this,f,args);};
G__16252.cljs$lang$maxFixedArity = 1;
G__16252.cljs$lang$applyTo = (function (arglist__16254){
var f = cljs.core.first(arglist__16254);
var args = cljs.core.rest(arglist__16254);
return G__16252__delegate(f,args);
});
G__16252.cljs$core$IFn$_invoke$arity$variadic = G__16252__delegate;
return G__16252;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__16255 = null;
if (arguments.length > 1) {
var G__16256__i = 0, G__16256__a = new Array(arguments.length -  1);
while (G__16256__i < G__16256__a.length) {G__16256__a[G__16256__i] = arguments[G__16256__i + 1]; ++G__16256__i;}
G__16255 = new cljs.core.IndexedSeq(G__16256__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__16259 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16259) : Math.floor.call(null,G__16259));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__16261 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16261) : f.call(null,G__16261));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__16263 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16263) : cljs.core.atom.call(null,G__16263));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16264__i = 0, G__16264__a = new Array(arguments.length -  1);
while (G__16264__i < G__16264__a.length) {G__16264__a[G__16264__i] = arguments[G__16264__i + 1]; ++G__16264__i;}
  args = new cljs.core.IndexedSeq(G__16264__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__16265){
var f = cljs.core.first(arglist__16265);
var args = cljs.core.rest(arglist__16265);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16330 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16330) : cljs.core.deref.call(null,G__16330));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3735__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
var and__3723__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3723__auto__){
var and__3723__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3723__auto____$1){
var and__3723__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3723__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16355 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__16353 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16353) : child.call(null,G__16353));
})(),(function (){var G__16354 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16354) : parent.call(null,G__16354));
})());
var G__16356 = (i + (1));
ret = G__16355;
i = G__16356;
continue;
}
break;
}
} else {
return and__3723__auto____$2;
}
} else {
return and__3723__auto____$1;
}
} else {
return and__3723__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16360 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16360) : cljs.core.deref.call(null,G__16360));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16364 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16364) : cljs.core.deref.call(null,G__16364));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16368 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16368) : cljs.core.deref.call(null,G__16368));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16377 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16377) : targets.call(null,G__16377));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16378 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16378) : sources.call(null,G__16378));
})()));
});})(tp,td,ta))
;
var or__3735__auto__ = ((cljs.core.contains_QMARK_((function (){var G__16382 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16382) : tp.call(null,G__16382));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__16383 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16383) : ta.call(null,G__16383));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__16384 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16384) : ta.call(null,G__16384));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__16391 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16391) : parentMap.call(null,G__16391));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__16392 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16392) : parentMap.call(null,G__16392));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__16385_SHARP_){
return cljs.core.cons(cljs.core.first(p1__16385_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16385_SHARP_),cljs.core.second(p1__16385_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__16393 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16393) : parentMap.call(null,G__16393));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__16386_SHARP_,p2__16387_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16386_SHARP_,p2__16387_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__16396 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16396) : cljs.core.deref.call(null,G__16396));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__16397 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16397) : cljs.core.deref.call(null,G__16397));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__16413 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16413) : cljs.core.deref.call(null,G__16413));
})().call(null,x);
var or__3735__auto__ = (cljs.core.truth_((function (){var and__3723__auto__ = xprefs;
if(cljs.core.truth_(and__3723__auto__)){
var G__16415 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16415) : xprefs.call(null,G__16415));
} else {
return and__3723__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__16416 = cljs.core.rest(ps);
ps = G__16416;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3735__auto____$1)){
return or__3735__auto____$1;
} else {
var or__3735__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__16417 = cljs.core.rest(ps);
ps = G__16417;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3735__auto____$2)){
return or__3735__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3735__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3735__auto__)){
return or__3735__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16431){
var vec__16432 = p__16431;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16432,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16432,(1),null);
var e = vec__16432;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16433 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16433) : cljs.core.deref.call(null,G__16433));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3735__auto__ = (be == null);
if(or__3735__auto__){
return or__3735__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__16434 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16434) : cljs.core.deref.call(null,G__16434));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16435 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16435) : cljs.core.deref.call(null,G__16435));
})(),(function (){var G__16436 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16436) : cljs.core.deref.call(null,G__16436));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj16438 = {};
return obj16438;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3723__auto__ = mf;
if(and__3723__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3723__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4379__auto__ = (((mf == null))?null:mf);
return (function (){var or__3735__auto__ = (cljs.core._reset[(function (){var G__16442 = x__4379__auto__;
return goog.typeOf(G__16442);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._reset["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3723__auto__ = mf;
if(and__3723__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3723__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4379__auto__ = (((mf == null))?null:mf);
return (function (){var or__3735__auto__ = (cljs.core._add_method[(function (){var G__16446 = x__4379__auto__;
return goog.typeOf(G__16446);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._add_method["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3723__auto__ = mf;
if(and__3723__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3723__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4379__auto__ = (((mf == null))?null:mf);
return (function (){var or__3735__auto__ = (cljs.core._remove_method[(function (){var G__16450 = x__4379__auto__;
return goog.typeOf(G__16450);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3723__auto__ = mf;
if(and__3723__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3723__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4379__auto__ = (((mf == null))?null:mf);
return (function (){var or__3735__auto__ = (cljs.core._prefer_method[(function (){var G__16454 = x__4379__auto__;
return goog.typeOf(G__16454);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3723__auto__ = mf;
if(and__3723__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3723__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4379__auto__ = (((mf == null))?null:mf);
return (function (){var or__3735__auto__ = (cljs.core._get_method[(function (){var G__16458 = x__4379__auto__;
return goog.typeOf(G__16458);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._get_method["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3723__auto__ = mf;
if(and__3723__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3723__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4379__auto__ = (((mf == null))?null:mf);
return (function (){var or__3735__auto__ = (cljs.core._methods[(function (){var G__16462 = x__4379__auto__;
return goog.typeOf(G__16462);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._methods["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3723__auto__ = mf;
if(and__3723__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3723__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4379__auto__ = (((mf == null))?null:mf);
return (function (){var or__3735__auto__ = (cljs.core._prefers[(function (){var G__16466 = x__4379__auto__;
return goog.typeOf(G__16466);
})()]);
if(or__3735__auto__){
return or__3735__auto__;
} else {
var or__3735__auto____$1 = (cljs.core._prefers["_"]);
if(or__3735__auto____$1){
return or__3735__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16468 = this$__$1;
return goog.getUid(G__16468);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16469 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16469) : cljs.core.deref.call(null,G__16469));
})(),(function (){var G__16470 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16470) : cljs.core.deref.call(null,G__16470));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__16471 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16471) : cljs.core.deref.call(null,G__16471));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__16472 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16472) : cljs.core.deref.call(null,G__16472));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16473 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16473) : cljs.core.deref.call(null,G__16473));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16474 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16474) : cljs.core.deref.call(null,G__16474));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__17315 = null;
var G__17315__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__17315__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16475 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16475) : self__.dispatch_fn.call(null,G__16475));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16476 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16476) : target_fn.call(null,G__16476));
});
var G__17315__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16477 = a;
var G__16478 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16477,G__16478) : self__.dispatch_fn.call(null,G__16477,G__16478));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16479 = a;
var G__16480 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16479,G__16480) : target_fn.call(null,G__16479,G__16480));
});
var G__17315__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16481 = a;
var G__16482 = b;
var G__16483 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16481,G__16482,G__16483) : self__.dispatch_fn.call(null,G__16481,G__16482,G__16483));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16484 = a;
var G__16485 = b;
var G__16486 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16484,G__16485,G__16486) : target_fn.call(null,G__16484,G__16485,G__16486));
});
var G__17315__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16487 = a;
var G__16488 = b;
var G__16489 = c;
var G__16490 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16487,G__16488,G__16489,G__16490) : self__.dispatch_fn.call(null,G__16487,G__16488,G__16489,G__16490));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16491 = a;
var G__16492 = b;
var G__16493 = c;
var G__16494 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16491,G__16492,G__16493,G__16494) : target_fn.call(null,G__16491,G__16492,G__16493,G__16494));
});
var G__17315__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16495 = a;
var G__16496 = b;
var G__16497 = c;
var G__16498 = d;
var G__16499 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16495,G__16496,G__16497,G__16498,G__16499) : self__.dispatch_fn.call(null,G__16495,G__16496,G__16497,G__16498,G__16499));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16500 = a;
var G__16501 = b;
var G__16502 = c;
var G__16503 = d;
var G__16504 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16500,G__16501,G__16502,G__16503,G__16504) : target_fn.call(null,G__16500,G__16501,G__16502,G__16503,G__16504));
});
var G__17315__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16505 = a;
var G__16506 = b;
var G__16507 = c;
var G__16508 = d;
var G__16509 = e;
var G__16510 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16505,G__16506,G__16507,G__16508,G__16509,G__16510) : self__.dispatch_fn.call(null,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16511 = a;
var G__16512 = b;
var G__16513 = c;
var G__16514 = d;
var G__16515 = e;
var G__16516 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16511,G__16512,G__16513,G__16514,G__16515,G__16516) : target_fn.call(null,G__16511,G__16512,G__16513,G__16514,G__16515,G__16516));
});
var G__17315__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16517 = a;
var G__16518 = b;
var G__16519 = c;
var G__16520 = d;
var G__16521 = e;
var G__16522 = f;
var G__16523 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523) : self__.dispatch_fn.call(null,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16524 = a;
var G__16525 = b;
var G__16526 = c;
var G__16527 = d;
var G__16528 = e;
var G__16529 = f;
var G__16530 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16524,G__16525,G__16526,G__16527,G__16528,G__16529,G__16530) : target_fn.call(null,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529,G__16530));
});
var G__17315__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16531 = a;
var G__16532 = b;
var G__16533 = c;
var G__16534 = d;
var G__16535 = e;
var G__16536 = f;
var G__16537 = g;
var G__16538 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538) : self__.dispatch_fn.call(null,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16539 = a;
var G__16540 = b;
var G__16541 = c;
var G__16542 = d;
var G__16543 = e;
var G__16544 = f;
var G__16545 = g;
var G__16546 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16539,G__16540,G__16541,G__16542,G__16543,G__16544,G__16545,G__16546) : target_fn.call(null,G__16539,G__16540,G__16541,G__16542,G__16543,G__16544,G__16545,G__16546));
});
var G__17315__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16547 = a;
var G__16548 = b;
var G__16549 = c;
var G__16550 = d;
var G__16551 = e;
var G__16552 = f;
var G__16553 = g;
var G__16554 = h;
var G__16555 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555) : self__.dispatch_fn.call(null,G__16547,G__16548,G__16549,G__16550,G__16551,G__16552,G__16553,G__16554,G__16555));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16556 = a;
var G__16557 = b;
var G__16558 = c;
var G__16559 = d;
var G__16560 = e;
var G__16561 = f;
var G__16562 = g;
var G__16563 = h;
var G__16564 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16556,G__16557,G__16558,G__16559,G__16560,G__16561,G__16562,G__16563,G__16564) : target_fn.call(null,G__16556,G__16557,G__16558,G__16559,G__16560,G__16561,G__16562,G__16563,G__16564));
});
var G__17315__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16565 = a;
var G__16566 = b;
var G__16567 = c;
var G__16568 = d;
var G__16569 = e;
var G__16570 = f;
var G__16571 = g;
var G__16572 = h;
var G__16573 = i;
var G__16574 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574) : self__.dispatch_fn.call(null,G__16565,G__16566,G__16567,G__16568,G__16569,G__16570,G__16571,G__16572,G__16573,G__16574));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16575 = a;
var G__16576 = b;
var G__16577 = c;
var G__16578 = d;
var G__16579 = e;
var G__16580 = f;
var G__16581 = g;
var G__16582 = h;
var G__16583 = i;
var G__16584 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581,G__16582,G__16583,G__16584) : target_fn.call(null,G__16575,G__16576,G__16577,G__16578,G__16579,G__16580,G__16581,G__16582,G__16583,G__16584));
});
var G__17315__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16585 = a;
var G__16586 = b;
var G__16587 = c;
var G__16588 = d;
var G__16589 = e;
var G__16590 = f;
var G__16591 = g;
var G__16592 = h;
var G__16593 = i;
var G__16594 = j;
var G__16595 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595) : self__.dispatch_fn.call(null,G__16585,G__16586,G__16587,G__16588,G__16589,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16596 = a;
var G__16597 = b;
var G__16598 = c;
var G__16599 = d;
var G__16600 = e;
var G__16601 = f;
var G__16602 = g;
var G__16603 = h;
var G__16604 = i;
var G__16605 = j;
var G__16606 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16596,G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606) : target_fn.call(null,G__16596,G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604,G__16605,G__16606));
});
var G__17315__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16607 = a;
var G__16608 = b;
var G__16609 = c;
var G__16610 = d;
var G__16611 = e;
var G__16612 = f;
var G__16613 = g;
var G__16614 = h;
var G__16615 = i;
var G__16616 = j;
var G__16617 = k;
var G__16618 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618) : self__.dispatch_fn.call(null,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16619 = a;
var G__16620 = b;
var G__16621 = c;
var G__16622 = d;
var G__16623 = e;
var G__16624 = f;
var G__16625 = g;
var G__16626 = h;
var G__16627 = i;
var G__16628 = j;
var G__16629 = k;
var G__16630 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630) : target_fn.call(null,G__16619,G__16620,G__16621,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630));
});
var G__17315__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16631 = a;
var G__16632 = b;
var G__16633 = c;
var G__16634 = d;
var G__16635 = e;
var G__16636 = f;
var G__16637 = g;
var G__16638 = h;
var G__16639 = i;
var G__16640 = j;
var G__16641 = k;
var G__16642 = l;
var G__16643 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643) : self__.dispatch_fn.call(null,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640,G__16641,G__16642,G__16643));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16644 = a;
var G__16645 = b;
var G__16646 = c;
var G__16647 = d;
var G__16648 = e;
var G__16649 = f;
var G__16650 = g;
var G__16651 = h;
var G__16652 = i;
var G__16653 = j;
var G__16654 = k;
var G__16655 = l;
var G__16656 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656) : target_fn.call(null,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656));
});
var G__17315__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16657 = a;
var G__16658 = b;
var G__16659 = c;
var G__16660 = d;
var G__16661 = e;
var G__16662 = f;
var G__16663 = g;
var G__16664 = h;
var G__16665 = i;
var G__16666 = j;
var G__16667 = k;
var G__16668 = l;
var G__16669 = m;
var G__16670 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670) : self__.dispatch_fn.call(null,G__16657,G__16658,G__16659,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16671 = a;
var G__16672 = b;
var G__16673 = c;
var G__16674 = d;
var G__16675 = e;
var G__16676 = f;
var G__16677 = g;
var G__16678 = h;
var G__16679 = i;
var G__16680 = j;
var G__16681 = k;
var G__16682 = l;
var G__16683 = m;
var G__16684 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684) : target_fn.call(null,G__16671,G__16672,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684));
});
var G__17315__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16685 = a;
var G__16686 = b;
var G__16687 = c;
var G__16688 = d;
var G__16689 = e;
var G__16690 = f;
var G__16691 = g;
var G__16692 = h;
var G__16693 = i;
var G__16694 = j;
var G__16695 = k;
var G__16696 = l;
var G__16697 = m;
var G__16698 = n;
var G__16699 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699) : self__.dispatch_fn.call(null,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16700 = a;
var G__16701 = b;
var G__16702 = c;
var G__16703 = d;
var G__16704 = e;
var G__16705 = f;
var G__16706 = g;
var G__16707 = h;
var G__16708 = i;
var G__16709 = j;
var G__16710 = k;
var G__16711 = l;
var G__16712 = m;
var G__16713 = n;
var G__16714 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712,G__16713,G__16714) : target_fn.call(null,G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710,G__16711,G__16712,G__16713,G__16714));
});
var G__17315__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16715 = a;
var G__16716 = b;
var G__16717 = c;
var G__16718 = d;
var G__16719 = e;
var G__16720 = f;
var G__16721 = g;
var G__16722 = h;
var G__16723 = i;
var G__16724 = j;
var G__16725 = k;
var G__16726 = l;
var G__16727 = m;
var G__16728 = n;
var G__16729 = o;
var G__16730 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730) : self__.dispatch_fn.call(null,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16731 = a;
var G__16732 = b;
var G__16733 = c;
var G__16734 = d;
var G__16735 = e;
var G__16736 = f;
var G__16737 = g;
var G__16738 = h;
var G__16739 = i;
var G__16740 = j;
var G__16741 = k;
var G__16742 = l;
var G__16743 = m;
var G__16744 = n;
var G__16745 = o;
var G__16746 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16731,G__16732,G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746) : target_fn.call(null,G__16731,G__16732,G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746));
});
var G__17315__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16747 = a;
var G__16748 = b;
var G__16749 = c;
var G__16750 = d;
var G__16751 = e;
var G__16752 = f;
var G__16753 = g;
var G__16754 = h;
var G__16755 = i;
var G__16756 = j;
var G__16757 = k;
var G__16758 = l;
var G__16759 = m;
var G__16760 = n;
var G__16761 = o;
var G__16762 = p;
var G__16763 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761,G__16762,G__16763) : self__.dispatch_fn.call(null,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761,G__16762,G__16763));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16764 = a;
var G__16765 = b;
var G__16766 = c;
var G__16767 = d;
var G__16768 = e;
var G__16769 = f;
var G__16770 = g;
var G__16771 = h;
var G__16772 = i;
var G__16773 = j;
var G__16774 = k;
var G__16775 = l;
var G__16776 = m;
var G__16777 = n;
var G__16778 = o;
var G__16779 = p;
var G__16780 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16764,G__16765,G__16766,G__16767,G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777,G__16778,G__16779,G__16780) : target_fn.call(null,G__16764,G__16765,G__16766,G__16767,G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777,G__16778,G__16779,G__16780));
});
var G__17315__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16781 = a;
var G__16782 = b;
var G__16783 = c;
var G__16784 = d;
var G__16785 = e;
var G__16786 = f;
var G__16787 = g;
var G__16788 = h;
var G__16789 = i;
var G__16790 = j;
var G__16791 = k;
var G__16792 = l;
var G__16793 = m;
var G__16794 = n;
var G__16795 = o;
var G__16796 = p;
var G__16797 = q;
var G__16798 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787,G__16788,G__16789,G__16790,G__16791,G__16792,G__16793,G__16794,G__16795,G__16796,G__16797,G__16798) : self__.dispatch_fn.call(null,G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787,G__16788,G__16789,G__16790,G__16791,G__16792,G__16793,G__16794,G__16795,G__16796,G__16797,G__16798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16799 = a;
var G__16800 = b;
var G__16801 = c;
var G__16802 = d;
var G__16803 = e;
var G__16804 = f;
var G__16805 = g;
var G__16806 = h;
var G__16807 = i;
var G__16808 = j;
var G__16809 = k;
var G__16810 = l;
var G__16811 = m;
var G__16812 = n;
var G__16813 = o;
var G__16814 = p;
var G__16815 = q;
var G__16816 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808,G__16809,G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816) : target_fn.call(null,G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808,G__16809,G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816));
});
var G__17315__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16817 = a;
var G__16818 = b;
var G__16819 = c;
var G__16820 = d;
var G__16821 = e;
var G__16822 = f;
var G__16823 = g;
var G__16824 = h;
var G__16825 = i;
var G__16826 = j;
var G__16827 = k;
var G__16828 = l;
var G__16829 = m;
var G__16830 = n;
var G__16831 = o;
var G__16832 = p;
var G__16833 = q;
var G__16834 = r;
var G__16835 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16817,G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833,G__16834,G__16835) : self__.dispatch_fn.call(null,G__16817,G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833,G__16834,G__16835));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16836 = a;
var G__16837 = b;
var G__16838 = c;
var G__16839 = d;
var G__16840 = e;
var G__16841 = f;
var G__16842 = g;
var G__16843 = h;
var G__16844 = i;
var G__16845 = j;
var G__16846 = k;
var G__16847 = l;
var G__16848 = m;
var G__16849 = n;
var G__16850 = o;
var G__16851 = p;
var G__16852 = q;
var G__16853 = r;
var G__16854 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850,G__16851,G__16852,G__16853,G__16854) : target_fn.call(null,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850,G__16851,G__16852,G__16853,G__16854));
});
var G__17315__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16855 = a;
var G__16856 = b;
var G__16857 = c;
var G__16858 = d;
var G__16859 = e;
var G__16860 = f;
var G__16861 = g;
var G__16862 = h;
var G__16863 = i;
var G__16864 = j;
var G__16865 = k;
var G__16866 = l;
var G__16867 = m;
var G__16868 = n;
var G__16869 = o;
var G__16870 = p;
var G__16871 = q;
var G__16872 = r;
var G__16873 = s;
var G__16874 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862,G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873,G__16874) : self__.dispatch_fn.call(null,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862,G__16863,G__16864,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873,G__16874));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16875 = a;
var G__16876 = b;
var G__16877 = c;
var G__16878 = d;
var G__16879 = e;
var G__16880 = f;
var G__16881 = g;
var G__16882 = h;
var G__16883 = i;
var G__16884 = j;
var G__16885 = k;
var G__16886 = l;
var G__16887 = m;
var G__16888 = n;
var G__16889 = o;
var G__16890 = p;
var G__16891 = q;
var G__16892 = r;
var G__16893 = s;
var G__16894 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882,G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894) : target_fn.call(null,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882,G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894));
});
var G__17315__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__17315 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17315__1.call(this,self__);
case 2:
return G__17315__2.call(this,self__,a);
case 3:
return G__17315__3.call(this,self__,a,b);
case 4:
return G__17315__4.call(this,self__,a,b,c);
case 5:
return G__17315__5.call(this,self__,a,b,c,d);
case 6:
return G__17315__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17315__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17315__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17315__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17315__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17315__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17315__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17315__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17315__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17315__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17315__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17315__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17315__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17315__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17315__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17315__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17315__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17315.cljs$core$IFn$_invoke$arity$1 = G__17315__1;
G__17315.cljs$core$IFn$_invoke$arity$2 = G__17315__2;
G__17315.cljs$core$IFn$_invoke$arity$3 = G__17315__3;
G__17315.cljs$core$IFn$_invoke$arity$4 = G__17315__4;
G__17315.cljs$core$IFn$_invoke$arity$5 = G__17315__5;
G__17315.cljs$core$IFn$_invoke$arity$6 = G__17315__6;
G__17315.cljs$core$IFn$_invoke$arity$7 = G__17315__7;
G__17315.cljs$core$IFn$_invoke$arity$8 = G__17315__8;
G__17315.cljs$core$IFn$_invoke$arity$9 = G__17315__9;
G__17315.cljs$core$IFn$_invoke$arity$10 = G__17315__10;
G__17315.cljs$core$IFn$_invoke$arity$11 = G__17315__11;
G__17315.cljs$core$IFn$_invoke$arity$12 = G__17315__12;
G__17315.cljs$core$IFn$_invoke$arity$13 = G__17315__13;
G__17315.cljs$core$IFn$_invoke$arity$14 = G__17315__14;
G__17315.cljs$core$IFn$_invoke$arity$15 = G__17315__15;
G__17315.cljs$core$IFn$_invoke$arity$16 = G__17315__16;
G__17315.cljs$core$IFn$_invoke$arity$17 = G__17315__17;
G__17315.cljs$core$IFn$_invoke$arity$18 = G__17315__18;
G__17315.cljs$core$IFn$_invoke$arity$19 = G__17315__19;
G__17315.cljs$core$IFn$_invoke$arity$20 = G__17315__20;
G__17315.cljs$core$IFn$_invoke$arity$21 = G__17315__21;
G__17315.cljs$core$IFn$_invoke$arity$22 = G__17315__22;
return G__17315;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args16467){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16467)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16895 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16895) : self__.dispatch_fn.call(null,G__16895));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16896 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16896) : target_fn.call(null,G__16896));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16897 = a;
var G__16898 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16897,G__16898) : self__.dispatch_fn.call(null,G__16897,G__16898));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16899 = a;
var G__16900 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16899,G__16900) : target_fn.call(null,G__16899,G__16900));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16901 = a;
var G__16902 = b;
var G__16903 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16901,G__16902,G__16903) : self__.dispatch_fn.call(null,G__16901,G__16902,G__16903));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16904 = a;
var G__16905 = b;
var G__16906 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16904,G__16905,G__16906) : target_fn.call(null,G__16904,G__16905,G__16906));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16907 = a;
var G__16908 = b;
var G__16909 = c;
var G__16910 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16907,G__16908,G__16909,G__16910) : self__.dispatch_fn.call(null,G__16907,G__16908,G__16909,G__16910));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16911 = a;
var G__16912 = b;
var G__16913 = c;
var G__16914 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16911,G__16912,G__16913,G__16914) : target_fn.call(null,G__16911,G__16912,G__16913,G__16914));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16915 = a;
var G__16916 = b;
var G__16917 = c;
var G__16918 = d;
var G__16919 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16915,G__16916,G__16917,G__16918,G__16919) : self__.dispatch_fn.call(null,G__16915,G__16916,G__16917,G__16918,G__16919));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16920 = a;
var G__16921 = b;
var G__16922 = c;
var G__16923 = d;
var G__16924 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16920,G__16921,G__16922,G__16923,G__16924) : target_fn.call(null,G__16920,G__16921,G__16922,G__16923,G__16924));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16925 = a;
var G__16926 = b;
var G__16927 = c;
var G__16928 = d;
var G__16929 = e;
var G__16930 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16925,G__16926,G__16927,G__16928,G__16929,G__16930) : self__.dispatch_fn.call(null,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16931 = a;
var G__16932 = b;
var G__16933 = c;
var G__16934 = d;
var G__16935 = e;
var G__16936 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16931,G__16932,G__16933,G__16934,G__16935,G__16936) : target_fn.call(null,G__16931,G__16932,G__16933,G__16934,G__16935,G__16936));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16937 = a;
var G__16938 = b;
var G__16939 = c;
var G__16940 = d;
var G__16941 = e;
var G__16942 = f;
var G__16943 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943) : self__.dispatch_fn.call(null,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16944 = a;
var G__16945 = b;
var G__16946 = c;
var G__16947 = d;
var G__16948 = e;
var G__16949 = f;
var G__16950 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950) : target_fn.call(null,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16951 = a;
var G__16952 = b;
var G__16953 = c;
var G__16954 = d;
var G__16955 = e;
var G__16956 = f;
var G__16957 = g;
var G__16958 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958) : self__.dispatch_fn.call(null,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16959 = a;
var G__16960 = b;
var G__16961 = c;
var G__16962 = d;
var G__16963 = e;
var G__16964 = f;
var G__16965 = g;
var G__16966 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966) : target_fn.call(null,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16967 = a;
var G__16968 = b;
var G__16969 = c;
var G__16970 = d;
var G__16971 = e;
var G__16972 = f;
var G__16973 = g;
var G__16974 = h;
var G__16975 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974,G__16975) : self__.dispatch_fn.call(null,G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974,G__16975));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16976 = a;
var G__16977 = b;
var G__16978 = c;
var G__16979 = d;
var G__16980 = e;
var G__16981 = f;
var G__16982 = g;
var G__16983 = h;
var G__16984 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984) : target_fn.call(null,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16985 = a;
var G__16986 = b;
var G__16987 = c;
var G__16988 = d;
var G__16989 = e;
var G__16990 = f;
var G__16991 = g;
var G__16992 = h;
var G__16993 = i;
var G__16994 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994) : self__.dispatch_fn.call(null,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16995 = a;
var G__16996 = b;
var G__16997 = c;
var G__16998 = d;
var G__16999 = e;
var G__17000 = f;
var G__17001 = g;
var G__17002 = h;
var G__17003 = i;
var G__17004 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004) : target_fn.call(null,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17005 = a;
var G__17006 = b;
var G__17007 = c;
var G__17008 = d;
var G__17009 = e;
var G__17010 = f;
var G__17011 = g;
var G__17012 = h;
var G__17013 = i;
var G__17014 = j;
var G__17015 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17005,G__17006,G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015) : self__.dispatch_fn.call(null,G__17005,G__17006,G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17016 = a;
var G__17017 = b;
var G__17018 = c;
var G__17019 = d;
var G__17020 = e;
var G__17021 = f;
var G__17022 = g;
var G__17023 = h;
var G__17024 = i;
var G__17025 = j;
var G__17026 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17016,G__17017,G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026) : target_fn.call(null,G__17016,G__17017,G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17027 = a;
var G__17028 = b;
var G__17029 = c;
var G__17030 = d;
var G__17031 = e;
var G__17032 = f;
var G__17033 = g;
var G__17034 = h;
var G__17035 = i;
var G__17036 = j;
var G__17037 = k;
var G__17038 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038) : self__.dispatch_fn.call(null,G__17027,G__17028,G__17029,G__17030,G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17039 = a;
var G__17040 = b;
var G__17041 = c;
var G__17042 = d;
var G__17043 = e;
var G__17044 = f;
var G__17045 = g;
var G__17046 = h;
var G__17047 = i;
var G__17048 = j;
var G__17049 = k;
var G__17050 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17039,G__17040,G__17041,G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050) : target_fn.call(null,G__17039,G__17040,G__17041,G__17042,G__17043,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17051 = a;
var G__17052 = b;
var G__17053 = c;
var G__17054 = d;
var G__17055 = e;
var G__17056 = f;
var G__17057 = g;
var G__17058 = h;
var G__17059 = i;
var G__17060 = j;
var G__17061 = k;
var G__17062 = l;
var G__17063 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057,G__17058,G__17059,G__17060,G__17061,G__17062,G__17063) : self__.dispatch_fn.call(null,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056,G__17057,G__17058,G__17059,G__17060,G__17061,G__17062,G__17063));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17064 = a;
var G__17065 = b;
var G__17066 = c;
var G__17067 = d;
var G__17068 = e;
var G__17069 = f;
var G__17070 = g;
var G__17071 = h;
var G__17072 = i;
var G__17073 = j;
var G__17074 = k;
var G__17075 = l;
var G__17076 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076) : target_fn.call(null,G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17077 = a;
var G__17078 = b;
var G__17079 = c;
var G__17080 = d;
var G__17081 = e;
var G__17082 = f;
var G__17083 = g;
var G__17084 = h;
var G__17085 = i;
var G__17086 = j;
var G__17087 = k;
var G__17088 = l;
var G__17089 = m;
var G__17090 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090) : self__.dispatch_fn.call(null,G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17091 = a;
var G__17092 = b;
var G__17093 = c;
var G__17094 = d;
var G__17095 = e;
var G__17096 = f;
var G__17097 = g;
var G__17098 = h;
var G__17099 = i;
var G__17100 = j;
var G__17101 = k;
var G__17102 = l;
var G__17103 = m;
var G__17104 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102,G__17103,G__17104) : target_fn.call(null,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102,G__17103,G__17104));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17105 = a;
var G__17106 = b;
var G__17107 = c;
var G__17108 = d;
var G__17109 = e;
var G__17110 = f;
var G__17111 = g;
var G__17112 = h;
var G__17113 = i;
var G__17114 = j;
var G__17115 = k;
var G__17116 = l;
var G__17117 = m;
var G__17118 = n;
var G__17119 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113,G__17114,G__17115,G__17116,G__17117,G__17118,G__17119) : self__.dispatch_fn.call(null,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113,G__17114,G__17115,G__17116,G__17117,G__17118,G__17119));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17120 = a;
var G__17121 = b;
var G__17122 = c;
var G__17123 = d;
var G__17124 = e;
var G__17125 = f;
var G__17126 = g;
var G__17127 = h;
var G__17128 = i;
var G__17129 = j;
var G__17130 = k;
var G__17131 = l;
var G__17132 = m;
var G__17133 = n;
var G__17134 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17120,G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130,G__17131,G__17132,G__17133,G__17134) : target_fn.call(null,G__17120,G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130,G__17131,G__17132,G__17133,G__17134));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17135 = a;
var G__17136 = b;
var G__17137 = c;
var G__17138 = d;
var G__17139 = e;
var G__17140 = f;
var G__17141 = g;
var G__17142 = h;
var G__17143 = i;
var G__17144 = j;
var G__17145 = k;
var G__17146 = l;
var G__17147 = m;
var G__17148 = n;
var G__17149 = o;
var G__17150 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150) : self__.dispatch_fn.call(null,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17151 = a;
var G__17152 = b;
var G__17153 = c;
var G__17154 = d;
var G__17155 = e;
var G__17156 = f;
var G__17157 = g;
var G__17158 = h;
var G__17159 = i;
var G__17160 = j;
var G__17161 = k;
var G__17162 = l;
var G__17163 = m;
var G__17164 = n;
var G__17165 = o;
var G__17166 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17151,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162,G__17163,G__17164,G__17165,G__17166) : target_fn.call(null,G__17151,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162,G__17163,G__17164,G__17165,G__17166));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17167 = a;
var G__17168 = b;
var G__17169 = c;
var G__17170 = d;
var G__17171 = e;
var G__17172 = f;
var G__17173 = g;
var G__17174 = h;
var G__17175 = i;
var G__17176 = j;
var G__17177 = k;
var G__17178 = l;
var G__17179 = m;
var G__17180 = n;
var G__17181 = o;
var G__17182 = p;
var G__17183 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177,G__17178,G__17179,G__17180,G__17181,G__17182,G__17183) : self__.dispatch_fn.call(null,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177,G__17178,G__17179,G__17180,G__17181,G__17182,G__17183));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17184 = a;
var G__17185 = b;
var G__17186 = c;
var G__17187 = d;
var G__17188 = e;
var G__17189 = f;
var G__17190 = g;
var G__17191 = h;
var G__17192 = i;
var G__17193 = j;
var G__17194 = k;
var G__17195 = l;
var G__17196 = m;
var G__17197 = n;
var G__17198 = o;
var G__17199 = p;
var G__17200 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17184,G__17185,G__17186,G__17187,G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197,G__17198,G__17199,G__17200) : target_fn.call(null,G__17184,G__17185,G__17186,G__17187,G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197,G__17198,G__17199,G__17200));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17201 = a;
var G__17202 = b;
var G__17203 = c;
var G__17204 = d;
var G__17205 = e;
var G__17206 = f;
var G__17207 = g;
var G__17208 = h;
var G__17209 = i;
var G__17210 = j;
var G__17211 = k;
var G__17212 = l;
var G__17213 = m;
var G__17214 = n;
var G__17215 = o;
var G__17216 = p;
var G__17217 = q;
var G__17218 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211,G__17212,G__17213,G__17214,G__17215,G__17216,G__17217,G__17218) : self__.dispatch_fn.call(null,G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211,G__17212,G__17213,G__17214,G__17215,G__17216,G__17217,G__17218));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17219 = a;
var G__17220 = b;
var G__17221 = c;
var G__17222 = d;
var G__17223 = e;
var G__17224 = f;
var G__17225 = g;
var G__17226 = h;
var G__17227 = i;
var G__17228 = j;
var G__17229 = k;
var G__17230 = l;
var G__17231 = m;
var G__17232 = n;
var G__17233 = o;
var G__17234 = p;
var G__17235 = q;
var G__17236 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17219,G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230,G__17231,G__17232,G__17233,G__17234,G__17235,G__17236) : target_fn.call(null,G__17219,G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230,G__17231,G__17232,G__17233,G__17234,G__17235,G__17236));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17237 = a;
var G__17238 = b;
var G__17239 = c;
var G__17240 = d;
var G__17241 = e;
var G__17242 = f;
var G__17243 = g;
var G__17244 = h;
var G__17245 = i;
var G__17246 = j;
var G__17247 = k;
var G__17248 = l;
var G__17249 = m;
var G__17250 = n;
var G__17251 = o;
var G__17252 = p;
var G__17253 = q;
var G__17254 = r;
var G__17255 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17237,G__17238,G__17239,G__17240,G__17241,G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254,G__17255) : self__.dispatch_fn.call(null,G__17237,G__17238,G__17239,G__17240,G__17241,G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254,G__17255));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17256 = a;
var G__17257 = b;
var G__17258 = c;
var G__17259 = d;
var G__17260 = e;
var G__17261 = f;
var G__17262 = g;
var G__17263 = h;
var G__17264 = i;
var G__17265 = j;
var G__17266 = k;
var G__17267 = l;
var G__17268 = m;
var G__17269 = n;
var G__17270 = o;
var G__17271 = p;
var G__17272 = q;
var G__17273 = r;
var G__17274 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269,G__17270,G__17271,G__17272,G__17273,G__17274) : target_fn.call(null,G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269,G__17270,G__17271,G__17272,G__17273,G__17274));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17275 = a;
var G__17276 = b;
var G__17277 = c;
var G__17278 = d;
var G__17279 = e;
var G__17280 = f;
var G__17281 = g;
var G__17282 = h;
var G__17283 = i;
var G__17284 = j;
var G__17285 = k;
var G__17286 = l;
var G__17287 = m;
var G__17288 = n;
var G__17289 = o;
var G__17290 = p;
var G__17291 = q;
var G__17292 = r;
var G__17293 = s;
var G__17294 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294) : self__.dispatch_fn.call(null,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17295 = a;
var G__17296 = b;
var G__17297 = c;
var G__17298 = d;
var G__17299 = e;
var G__17300 = f;
var G__17301 = g;
var G__17302 = h;
var G__17303 = i;
var G__17304 = j;
var G__17305 = k;
var G__17306 = l;
var G__17307 = m;
var G__17308 = n;
var G__17309 = o;
var G__17310 = p;
var G__17311 = q;
var G__17312 = r;
var G__17313 = s;
var G__17314 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17295,G__17296,G__17297,G__17298,G__17299,G__17300,G__17301,G__17302,G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311,G__17312,G__17313,G__17314) : target_fn.call(null,G__17295,G__17296,G__17297,G__17298,G__17299,G__17300,G__17301,G__17302,G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311,G__17312,G__17313,G__17314));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17316 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__17316);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4322__auto__,writer__4323__auto__,opt__4324__auto__){
return cljs.core._write(writer__4323__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__17321 = msg;
return Error(G__17321);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__17326 = x;
var G__17327 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17326,G__17327) : pred.call(null,G__17326,G__17327));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__17328 = y;
var G__17329 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17328,G__17329) : pred.call(null,G__17328,G__17329));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map